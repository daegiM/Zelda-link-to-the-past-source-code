;
		INCLUDE	zel_ram.asm
;
;--------------------------------------------------------------------
;
;		ZELDA-3			1991.10.09(WED)
;
;--------------------------------------------------------------------
;
		ORG	02C270H
;
;=============================================== (zel_isub) =========
		GLB	BGMDST,INBGWT1,WD2132IT,TILBGWT0,TILBGWT1,TILBGWT2
		GLB	TINCLST,INCLST0,INCLST1,INCLST11,CGWKST,CGWKST1,CGWKST2
		GLB	INHDMA2,END3DST,INCLS140
;
		GLB	IIT1000,IIT2000,IIT3000,IIT4000,IIT5000,IIT6000
		GLB	IIT5800
;
		GLB	MPTOGD,MPINT0,MPALST,GDMMRST
;;;;;;;;		GLB	GDRIT0,GDRIT1
		GLB	MPMAIN,GNXBGWT,WTVRAM,GSLBGWT
		GLB	MP1TOGD,GNDRWT0,GNDRWT1,MPSIZE,DJSNDD
;=============================================== (zel_main) =========
		EXT	MD_title,MD_djint,MD_djply,MD_gdint,MD_gdply
		EXT	MD_evint,MD_evply
		EXT	MD_fdout,MD_fdin,MD_etcpl
		EXT	MD_wpout,MD_wpin
;=============================================== (zel_play) ========
		EXT	SWSPCL1
;=============================================== (zel_exst) ========
		EXT	jjsmv
;=============================================== (zel_init) ========
		EXT	GDMCK800,GSLC400,CGPTDT,PFLGCL,SCL540
;
		EXT	p2_fin1
;=============================================== (zel_vma) =========
		EXT	DJBGWT,WBUFS0,WBUFS1,WBFS120
;
		EXT	VT01,VT02
;
		EXT	bgw3,bgw4
;=============================================== (zel_make) =========
		EXT	MKROOM
;=============================================== (zel_data0) ========
		EXT	BITCD0
;=============================================== (zel_enmy) =========
		EXT	GREDS2,ALCLER
;=============================================== (zel_edmg) =========
		EXT	END3DT
;=============================================== (zel_sunt) =========
		EXT	SCUNIT0,SCUNIT1,SCUNIT2,SCUNIT3
;=============================================== (zel_munt) =========
		EXT	MPUNIT,betaut,plisi0
;
		EXT	drut0,drut1
		EXT	drutA,drutB,drutC,drutD
		EXT	drutE,drutF
;=============================================== (zel_mpd0) =============
		EXT	A0001a,A0001b,A000s1,A0002a,A0002b,A0003a,A0003b,A000s2
		EXT	A0001c,A0001d,A0002c,A0002d,A0003c,A0003d,A000s4,A000s5
		EXT	A000s8,A000s9,A00s10,A00s11,A0004a,A0004b,A00s13,A0005a
		EXT	A0005b,A00s14,A0006a,A0006b,A0004c,A0004d,A00s15,A0005c
		EXT	A0005d,A0006c,A0006d,A00s17,A00s18,A00s22,A0007a,A0007b
		EXT	A00s25,A0008a,A0008b,A0007c,A0007d,A00s29,A0008c,A0008d
;
		EXT	A00u1a,A00u1b,A00us1,A00u2a,A00u2b,A00u3a,A00u3b,A00us2
		EXT	A00u1c,A00u1d,A00us3,A00u2c,A00u2d,A00u3c,A00u3d,A00us4
		EXT	A00us5,A00us6,A00us7,A00us8,A00us9,A0us10,A0us11,A0us12
		EXT	A00u4a,A00u4b,A0us13,A00u5a,A00u5b,A0us14,A00u6a,A00u6b
		EXT	A00u4c,A00u4d
;
;
		EXT	B0001a,B0001b,B000s1,B0002a,B0002b,B0003a,B0003b,B000s2
		EXT	B0001c,B0001d,B0002c,B0002d,B0003c,B0003d,B000s4,B000s5
		EXT	B000s8,B000s9,B00s10,B00s11,B0004a,B0004b,B00s13,B0005a
		EXT	B0005b,B00s14,B0006a,B0006b,B0004c,B0004d,B00s15,B0005c
		EXT	B0005d,B0006c,B0006d,B00s17,B00s18,B00s22,B0007a,B0007b
		EXT	B00s25,B0008a,B0008b,B0007c,B0007d,B00s29,B0008c,B0008d
;
		EXT	B00u1a,B00u1b,B00us1,B00u2a,B00u2b,B00u3a,B00u3b,B00us2
		EXT	B00u1c,B00u1d,B00us3,B00u2c,B00u2d,B00u3c,B00u3d,B00us4
		EXT	B00us5,B00us6,B00us7,B00us8,B00us9,B0us10,B0us11,B0us12
		EXT	B00u4a,B00u4b,B0us13,B00u5a,B00u5b,B0us14,B00u6a,B00u6b
		EXT	B00u4c,B00u4d
;=============================================== (zel_mpd1) =============
		EXT	A0us15,A00u5c,A00u5d,A0us16,A00u6c,A00u6d,A0us17,A0us18
		EXT	A0us19,A0us20,A0us21,A0us22,A0us23,A0us24,A00u7a,A00u7b
		EXT	A0us25,A0us26,A0us27,A00u8a,A00u8b,A0us28,A00u7c,A00u7d
		EXT	A0us29,A0us30,A0us31,A00u8c,A00u8d,A0us32
;
		EXT	A0kiri,A0kage,A0rain,A00m_1,Ae_3_1,Ae_3_2,Ae_3_3
		EXT	Ae_3_4,A0sora,A0kumo,A00mag,A00end
;
;
		EXT	B0us15,B00u5c,B00u5d,B0us16,B00u6c,B00u6d,B0us17,B0us18
		EXT	B0us19,B0us20,B0us21,B0us22,B0us23,B0us24,B00u7a,B00u7b
		EXT	B0us25,B0us26,B0us27,B00u8a,B00u8b,B0us28,B00u7c,B00u7d
		EXT	B0us29,B0us30,B0us31,B00u8c,B00u8d,B0us32
;
		EXT	B0kiri,B0kage,B0rain,B00m_1,Be_3_1,Be_3_2,Be_3_3
		EXT	Be_3_4,B0sora,B0kumo,B00mag,B00end
;=============================================== (zel_char) =========
		EXT	NKCGSET,NKCGST0,NKCGST1,GCGCHNG
;
		EXT	OBJYSET,MSCGST1,MSCGST2,KENST,TATEST
		EXT	CHOBJST,CHITEMST,PLCGSET
		EXT	B3CGSET,DANCORST,KOUKAST
		EXT	GDCGST,GDCGST1,GDCGST2,DJCGSET,TPLCGST,CHITEMS0
;
		EXT	CHSCHNG,BGCBDT0
;=============================================== (zel_grnd) =========
		EXT	GDSKKCK,GDMMSET
;=============================================== (zel_djdt) =========
		EXT	DJNBDT,DJNLDT
;=============================================== (zel_edmg) =========
		EXT	END3DT
;====================================================================
;
		EXTEND
;
		MEM8
		IDX8
;
;
;
;************************************************************************
;*		BG mode set				(BGMDST)	*
;************************************************************************
BGMDST		EQU	$
;---------------  BG mode initial set  ----------------------------------
;;;;;;;;		LDA	#00000100B
		STZ	2133H		; BG. initial (Vsize = 244)
		LDA	#00001001B
		STA	<MD2105		; BG mode<1> set
		STZ	<MD2106		; mozaiku reset!!
;
;// 02.09.21 //		LDA	#00000011B
		LDA	#00010011B
		STA	2107H		; BG1 screen data set
;// 02.09.21 //		LDA	#00010011B
		LDA	#00000011B
		STA	2108H		; BG2
		LDA	#01100011B
		STA	2109H		; BG3
;
		LDA	#00100010B
		STA	210BH		; BG1,2 character address set
		LDA	#00000111B
		STA	210CH		; BG3 character address set
;
;---------------  Window parameter set  ---------------------------------
;// 02.07.24 //		STZ	212EH		; window select  (main)
;// 02.07.24 //		STZ	212FH		;        "       (sub)
;// 02.07.24 //;
;// 02.07.24 //		STZ	2123H		; window (BG2:off , BG1:off)
;// 02.07.24 //		STZ	2124H		;        (BG4:off , BG3:off)
;// 02.07.24 //		STZ	2125H		;        (CL:off  , OBJ:off)
;// 02.07.24 //;
;// 02.07.24 //		STZ	212AH		; window masuku set (OR mode)
;// 02.07.24 //		STZ	212BH
;
;// 02.11.20 //		LDA	#00000010B	; color mode set
;// 02.11.20 //		STA	<WD2130
		LDA	#00100000B	; color add. select (back)
		STA	<WD2131
WD2132IT	EQU	$
		LDA	#00100000B
		STA	<WD2132R
		LDA	#01000000B
		STA	<WD2132G
		LDA	#10000000B
		STA	<WD2132B
		RTS
;
;
;
;************************************************************************
;*		Title demo BG. write			(TILBGWT)	*
;************************************************************************
TILBGWT0	EQU	$
		STA	!GOPOSF
		JSR	IIT1000		; ram initial
;
		STZ	!LGTWST
		STZ	!LGTWFG
		JSR	INBGWT1		; BG. write
;
		JSR	SCL540		; sub on/off check
		RTL
;
;
TILBGWT1	EQU	$
		STX	!ROBJCPT
		STA	!CHIKNO
		STA	!RBGCPT		; character point set
		JSL	>CHSCHNG	; charcater set
;
		LDA	#002H
		STA	!CGSTPT+1
		INC	<CGVMAF
		JSL	>NKCGSET	; nuki
TILBGWT2	EQU	$
		JSL	>DJCGSET
		JSL	>OBJYSET
		JSL	>MSCGST1
		JSL	>MSCGST2
		JSL	>CHITEMS0
		JSL	>B3CGSET
		JSL	>DANCORST
		RTL
;
;
;
;
;************************************************************************
;*		Initial BG. write			(INBGWT1)	*
;************************************************************************
INBGWT1		EQU	$
		LDA	<WD420C
		PHA			; (A) push
		STZ	420CH
		STZ	<WD420C
;
		JSL	>MKROOM		; init. making room
		STZ	!SCRLFG
		STZ	!WBFPNT
		STZ	!ITEMMD
IBW140		EQU	$
		JSL	>WBFS120
		JSL	>DJBGWT		; init. BG.1 write
;// 03.05.28 //		JSL	>RCHRCK		; reset character check
;
		JSL	>WBUFS0
		JSL	>DJBGWT		; init. BG.2 write
;// 03.05.28 //		JSL	>RCHRCK		; reset character check
;
		LDA	!WBFPNT
		CMP	#010H
		BNE	IBW140		; end ?
;					; yes
IBW160		EQU	$
		PLA			; (A) pull
		STA	<WD420C
		STZ	<BGWTFG
		STZ	!ITEMMD
		STZ	<JRSBPT
		RTS
;
;
;
;************************************************************************
;*		Initial Color set			(TINCLST)	*
;************************************************************************
TINCLST		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDX	#000H
		LDA	#00000H
TLCLS20		EQU	$
		STA	>CGRAM+180H,X
;
		STA	>CGWORK+000H,X
		STA	>CGWORK+080H,X
		STA	>CGWORK+100H,X
		STA	>CGWORK+180H,X
		INX
		INX
		CPX	#080H
		BNE	TLCLS20		;
;					;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
;
		LDA	#004H
		STA	!GNDBGC
		LDA	#003H
		STA	!GNDBGC1
;// 03.09.23 //		LDA	#004H
		STA	!GNDBGC2
		LDA	#003H
		STA	!KOKBGC
		LDA	#005H
		STA	!CHITEMJC
;
		STZ	!CGSTPT+1
		JSL	>NKCGSET	; nuki
;
		JSL	>OBJYSET
		JSL	>GDCGST
		JSL	>GDCGST1
		JSL	>GDCGST2
		JSL	>KOUKAST
		JSL	>CHITEMS0
;
		JSL	>B3CGSET
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDX	#000H
TLCLS40		EQU	$
		LDA	>CGRAM+1D0H,X
		STA	>CGWORK+1B0H,X
		INX
		INX
		CPX	#010H
		BNE	TLCLS40		;
;					;
		MEM8
		SEP	#00100000B	; memory 8bit mode
		RTS
;
;
;
;
;************************************************************************
;*		Initial Color set			(INCLST0)	*
;*			[Danjyon]					*
;************************************************************************
INCLST0		EQU	$
		STZ	!CGSTPT+1
;
		JSL	>NKCGSET	; nuki
;
		JSL	>DJCGSET
		JSL	>OBJYSET
		JSL	>MSCGST1
		JSL	>MSCGST2
		JSL	>KENST
		JSL	>TATEST
;// 03.02.26 //		JSL	>CHOBJST
		JSL	>CHITEMST
		JSL	>PLCGSET	; OBJ. CG. set
;
		JSL	>B3CGSET
		JSL	>DANCORST
;// 02.12.26 //		JSL	>SPCGSET
;/// 03.06.26 //		JSL	>KOUKAST	; BG. CG. set
;// 03.05.30 //		RTS
;
;************************************************************************
;*		Color work set				(CGWKST)	*
;************************************************************************
CGWKST		EQU	$
		LDA	!DANJC
		STA	>BKDANC
		LDA	!KOKBGC
		STA	>BKKOKC
		LDA	!SPGC
		STA	>BKSPCC		; now BG. CG. point push
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	#00002H
		STA	>CCNGFG
		LDA	#00000H
		STA	>CCNGCT
		LDA	#00000H
		STA	>CCNGED
;
		JMP	CGWKST2
;
;// 03.05.10 //		LDX	#000H
;// 03.05.10 //CGWS40		EQU	$
;// 03.05.10 //		LDA	>CGRAM+000H,X
;// 03.05.10 //		STA	>CGWORK+000H,X
;// 03.05.10 //		LDA	>CGRAM+040H,X
;// 03.05.10 //		STA	>CGWORK+040H,X
;// 03.05.10 //		LDA	>CGRAM+080H,X
;// 03.05.10 //		STA	>CGWORK+080H,X
;// 03.05.10 //		LDA	>CGRAM+0C0H,X
;// 03.05.10 //		STA	>CGWORK+0C0H,X
;// 03.05.10 //		LDA	>CGRAM+100H,X
;// 03.05.10 //		STA	>CGWORK+100H,X
;// 03.05.10 //		LDA	>CGRAM+140H,X
;// 03.05.10 //		STA	>CGWORK+140H,X
;// 03.05.10 //		LDA	>CGRAM+180H,X
;// 03.05.10 //		STA	>CGWORK+180H,X
;// 03.05.10 //		LDA	>CGRAM+1C0H,X
;// 03.05.10 //		STA	>CGWORK+1C0H,X
;// 03.05.10 //		INX
;// 03.05.10 //		INX
;// 03.05.10 //		CPX	#040H
;// 03.05.10 //		BNE	CGWS40		; end ?
;// 03.05.10 //;					; yes
;// 03.05.10 //;
;// 03.05.10 //;// 02.07.24 //		LDX	#00000H
;// 03.05.10 //;// 02.07.24 //CGWS40		EQU	$
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+000H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+080H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+100H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+180H,X
;// 03.05.10 //;// 02.07.24 //		INX
;// 03.05.10 //;// 02.07.24 //		INX
;// 03.05.10 //;// 02.07.24 //		CPX	#00080H
;// 03.05.10 //;// 02.07.24 //		BNE	CGWS40		;
;// 03.05.10 //;// 02.07.24 //;					;
;// 03.05.10 //;// 02.07.24 //		LDX	#00000H
;// 03.05.10 //;// 02.07.24 //CGWS80		EQU	$
;// 03.05.10 //;// 02.07.24 //		LDA	>CGRAM+000H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+000H,X
;// 03.05.10 //;// 02.07.24 //		LDA	>CGRAM+010H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+010H,X
;// 03.05.10 //;// 02.07.24 //		LDA	>CGRAM+020H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+020H,X
;// 03.05.10 //;// 02.07.24 //		LDA	>CGRAM+030H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+030H,X
;// 03.05.10 //;// 02.07.24 //;
;// 03.05.10 //;// 02.07.24 //		LDA	>CGRAM+1B0H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+1B0H,X
;// 03.05.10 //;// 02.07.24 //		LDA	>CGRAM+1D0H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+1D0H,X
;// 03.05.10 //;// 02.07.24 //		LDA	>CGRAM+1E0H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+1E0H,X
;// 03.05.10 //;// 02.07.24 //		LDA	>CGRAM+1F0H,X
;// 03.05.10 //;// 02.07.24 //		STA	>CGWORK+1F0H,X
;// 03.05.10 //;// 02.07.24 //		INX
;// 03.05.10 //;// 02.07.24 //		INX
;// 03.05.10 //;// 02.07.24 //		CPX	#00010H
;// 03.05.10 //;// 02.07.24 //		BNE	CGWS80		;
;// 03.05.10 //;// 02.07.24 //;					;
;// 03.05.10 //;
;// 03.05.10 //		MEM8
;// 03.05.10 //		SEP	#00100000B	; memory 8bit mode
;// 03.05.10 //;
;// 03.05.10 //;// 02.07.25 //		JSL	>CCBFIT		; change char. buffer init. set
;// 03.05.10 //;
;// 03.05.10 //		INC	<CGVMAF		; CG. write
;// 03.05.10 //		RTS
;
;
;
		MEM8
		IDX8
;************************************************************************
;*		Initial Color set			(INCLST1)	*
;*			[Ground]					*
;************************************************************************
INCLST11	EQU	$
		JSR	INCLST1
		RTL
;
;
INCLST1		EQU	$
		LDX	#002H
		LDA	<MPDTNO
		AND	#03FH
		CMP	#003H
		BEQ	INCLS120	;
;					;
		CMP	#005H
		BEQ	INCLS120	;
;					;
		CMP	#007H
		BEQ	INCLS120	;
;					;
		LDX	#000H
INCLS120	EQU	$
		LDA	<MPDTNO
		AND	#01000000B
		BEQ	INCLS140	;
					;
		INX
INCLS140	EQU	$
		STX	!GNDBGC
		STZ	!CGSTPT+1
;
		JSL	>OBJYSET
		JSL	>CHITEMST
		JSL	>MSCGST1
		JSL	>MSCGST2
		JSL	>KENST
		JSL	>TATEST
		JSL	>PLCGSET	; OBJ. CG. set
;
;// 03.01.29 //		LDA	#000H
;// 03.01.29 //		STA	!GNDBGC
;// 03.01.29 //		STA	!GNDBGC1
;// 03.01.29 //		INC	A
;// 03.01.29 //		STA	!GNDBGC2
;
		LDX	#001H
		LDA	>GDTRPF
		AND	#01000000B
		BEQ	INCLS160	; ura ?
;					; yes
		LDX	#003H
INCLS160	EQU	$
		STX	!BOBOJC
		JSL	>DJCGSET
		JSL	>B3CGSET
		JSL	>GDCGST
;// 02.12.18 //		JSL	>GDCGST1
;// 02.12.18 //		JSL	>GDCGST2
;// 02.12.18 //		JSL	>KOUKAST	; BG. CG. set
;// 02.12.18 //		JSL	>NKCGST0	; nuki
		RTS
;
;
;
;
;
;
;************************************************************************
;*		Color work set				(CGWKST1)	*
;************************************************************************
CGWKST1		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDX	#000H
		LDA	#00000H
CGWS140		EQU	$
;// 03.06.05 //		STA	>CGWORK+000H,X
		STA	>CGWORK+040H,X
		STA	>CGWORK+080H,X
		STA	>CGWORK+0C0H,X
		STA	>CGWORK+100H,X
		STA	>CGWORK+140H,X
		STA	>CGWORK+180H,X
		STA	>CGWORK+1C0H,X
		INX
		INX
		CPX	#040H
		BNE	CGWS140		;
;					;
		LDX	#000H
CGWS180		EQU	$
		LDA	>CGRAM+000H,X
		STA	>CGWORK+000H,X
		LDA	>CGRAM+010H,X
		STA	>CGWORK+010H,X
		LDA	>CGRAM+020H,X
		STA	>CGWORK+020H,X
		LDA	>CGRAM+030H,X
		STA	>CGWORK+030H,X
;
		LDA	>CGRAM+1B0H,X
		STA	>CGWORK+1B0H,X
		LDA	>CGRAM+1D0H,X
		STA	>CGWORK+1D0H,X
		LDA	>CGRAM+1E0H,X
		STA	>CGWORK+1E0H,X
		LDA	>CGRAM+1F0H,X
		STA	>CGWORK+1F0H,X
		INX
		INX
		CPX	#010H
		BNE	CGWS180		;
;					;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		LDA	#11110111B
		STA	<MD2106
		STA	>MZKCNT
;
		INC	<CGVMAF		; CG. write
		RTS
;
;
;
;************************************************************************
;*		Color work set				(CGWKST2)	*
;************************************************************************
CGWKST2		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDX	#00000H
CGWS240		EQU	$
		LDA	>CGRAM+000H,X
		STA	>CGWORK+000H,X
		LDA	>CGRAM+040H,X
		STA	>CGWORK+040H,X
		LDA	>CGRAM+080H,X
		STA	>CGWORK+080H,X
		LDA	>CGRAM+0C0H,X
		STA	>CGWORK+0C0H,X
		LDA	>CGRAM+100H,X
		STA	>CGWORK+100H,X
		LDA	>CGRAM+140H,X
		STA	>CGWORK+140H,X
		LDA	>CGRAM+180H,X
		STA	>CGWORK+180H,X
		LDA	>CGRAM+1C0H,X
		STA	>CGWORK+1C0H,X
		INX
		INX
		CPX	#040H
		BNE	CGWS240		; end ?
;					; yes
		MEM8
		IDX8
		SEP	#00100000B	; memory 8bit mode
;
		INC	<CGVMAF		; CG. write
		RTS
;
;
;
;
;
;************************************************************************
;*		Initial H-DMA 1				(INHDMA1)	*
;************************************************************************
;;;;INHDMA1		EQU	$
;;;;		PHB
;;;;		PHK
;;;;		PLB			; (DBR) set
;;;;;
;;;;		LDX	#0FH
;;;;IHD010		EQU	$
;;;;		LDA	WINDDT,X
;;;;		STA	!WINDOW,X
;;;;		DEX
;;;;		BPL	IHD010		;
;;;;;					;
;;;;		LDX	#04H
;;;;IHD020		EQU	$
;;;;		LDA	HDMAP1,X
;;;;		STA	4370H,X
;;;;		DEX
;;;;		BPL	IHD020
;;;;;
;;;;		LDA	#10000000B	; H-DMA ch "ON"!!
;;;;		STA	420CH
;;;;;
;;;;		PLB			; (DBR) reset
;;;;		RTL
;
;************************************************************************
;*		Initial H-DMA 2				(INHDMA2)	*
;************************************************************************
INHDMA2		EQU	$
;============== H-DMA parameter set ====================================
		PHB
		PHK
		PLB
;
		LDX	#04H
INH010		EQU	$
		LDA	HDMAP2,X
		STA	4370H,X
		DEX
		BPL	INH010
		LDA	#BANK HDMABF		; data bank set
		STA	4377H
;
		LDA	#00110011B
		STA	<WD2123			; window mask (BG2:on  , BG1:on  )
		LDA	#00000011B
		STA	<WD2124			;             (BG4:off , BG3:on  )
		LDA	#00110011B
		STA	<WD2125			;             (COL:on  , OBJ:on  )
;
		LDA	<DPMAIN
		STA	<WDMAIN
		LDA	<DPSUB
		STA	<WDSUB			; main,sub window set
;
		LDA	#10000000B
		STA	<WD420C			; H-DMA ch "ON" !!
;
		IDX16
		REP	#00010000B		; index 16 bit mode set
;
		LDX	#01DFH			; H-DMA buffer clear
INH020		EQU	$
		STZ	HDMABF,X
		DEX
		BPL	INH020
;
		IDX8				; index 8 bit mode set
		SEP	#00010000B
		PLB
		RTL
;
;===============  H-DMA window data  ====================================
WINDDT		EQU	$
		BYTE	001H
		BYTE	000H,0FFH
		BYTE	001H
		BYTE	000H,0FFH
		BYTE	001H
		BYTE	000H,0FFH
		BYTE	001H
		BYTE	000H,0FFH
		BYTE	081H
		BYTE	000H,000H
		BYTE	000H
;
;===============  H-DMA parameter  ======================================
HDMAP1		EQU	$
		BYTE	00000001B	; DMA control parameter
		BYTE	026H		;     B bus address
		WORD	WINDOW		;     A      "      (L),(H)
		BYTE	00H		;                   (B)
;
;===============  H-DMA parameter  ======================================
HDMAP2		EQU	$
		BYTE	01000001B	; DMA control parameter
		BYTE	026H		;     B bus address
		BYTE	LOW HDMADR	;     A      "      (L)
		BYTE	HIGH HDMADR	;                   (H)
		BYTE	BANK HDMADR	;                   (B)
;
HDMADR		EQU	$
		BYTE	0F8H
		WORD	HDMABF
		BYTE	0F8H
		WORD	HDMABF+78H*2
		BYTE	00
;
;
;
;
;
;************************************************************************
;*		Initial RAM  set  [Danjyon]		(IIT1000)	*
;************************************************************************
STRMDT		EQU	$		; start room no.     <RMXYCT>
		WORD	00104H
;			  4LR
		WORD	00104H
		WORD	00012H,00060H,00061H,00062H
;
		WORD	000F0H,000F1H,000C9H,00084H,00085H,00083H,00063H,000F2H
		WORD	000F3H,000F4H,000F5H,000E3H,000E2H,000F8H,000E8H,00023H
		WORD	000FBH,000EBH,000D5H,00024H,000FDH,000EDH,000FEH,000EEH
		WORD	000FFH,000EFH,000DFH,000F9H,000FAH,000EAH,000E0H,00028H
		WORD	0004AH,00098H,00056H,00057H,00058H,00059H,000E1H,0000EH
		WORD	000E6H,000E7H,000E4H,000E5H,00055H,00077H,000DBH,000D6H
		WORD	00010H,0000CH,00008H,0002FH,0003CH,0002CH
;
;			   0L    1ER     1L     1R     2L     17   3Ld
		WORD	00100H,0011EH,00101H,00101H,00102H,00117H,00103H
STRMD0		EQU	$
;			  3Lu     3R
		WORD	00103H,00103H
;			   5L    1FR     6L     6R     7L     7R      8     9L
		WORD	00105H,0011FH,00106H,00106H,00107H,00107H,00108H,00109H
;			    A      B     CL     CR    1BL    1BR    1CL    1CR     
		WORD	0010AH,0010BH,0010CH,0010CH,0011BH,0011BH,0011CH,0011CH		
;                         1EL    20R    10L    12R     11    12L    13L    14L
		WORD	0011EH,00120H,00110H,00112H,00111H,00112H,00113H,00114H
;                         15L    15R     DL     FL     19    14R    16R    21L
		WORD	00115H,00115H,0010DH,0010FH,00119H,00114H,00116H,00121H
;			  22L    22R    18R    1AR     EL     ER    1FL    23L
		WORD	00122H,00122H,00118H,0011AH,0010EH,0010EH,0011FH,00123H
;			  24L    24R    25L    25R    26L    26R
		WORD	00124H,00124H,00125H,00125H,00126H,00126H
;
;			  OP1    OP2    OP3 			
		WORD	00080H,00051H,00030H
;
;			  H1     H2     H3     H4     H5     H6     H7     H8
		WORD	00058H,00067H,00068H,00056H,000E1H,00000H,00018H,00055H
;			  H9     HA     HB     HC     HD     27L    20L
		WORD	000E3H,000E2H,0002FH,00011H,00003H,00127H,00120H
;
;
ISCTDT		EQU	$		; scroll limit data  <SCVU>
		BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
		BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;
		BYTE	003H,002H,003H,003H,004H,004H,004H,005H	; chapel
		BYTE	00DH,00CH,00DH,00DH,001H,000H,001H,001H	; shiro-0
		BYTE	00DH,00CH,00DH,00DH,002H,002H,002H,003H	;      -1
		BYTE	00DH,00CH,00DH,00DH,004H,004H,004H,005H	;      -2
;
		BYTE	01FH,01EH,01FH,01FH,000H,000H,000H,001H ; doukutu -L
		BYTE	01FH,01EH,01FH,01FH,003H,002H,003H,003H ; doukutu -R
		BYTE	019H,018H,019H,019H,012H,012H,012H,013H ; shinden
		BYTE	011H,010H,011H,011H,008H,008H,008H,009H ; desert sindn-0
		BYTE	011H,010H,011H,011H,00BH,00AH,00BH,00BH ;	      -1
		BYTE	011H,010H,011H,011H,006H,006H,006H,007H ;             -2
		BYTE	00DH,00CH,00DH,00DH,006H,006H,006H,007H ;	      -3
		BYTE	01FH,01EH,01FH,01FH,005H,005H,005H,006H ; sontyo-L
		BYTE	01FH,01EH,01FH,01FH,006H,006H,006H,007H ; sontyo-R
		BYTE	01FH,01EH,01FH,01FH,009H,009H,009H,00AH ; futago-L
		BYTE	01FH,01EH,01FH,01FH,00AH,00AH,00AH,00BH ; futago-R
		BYTE	01DH,01CH,01DH,01DH,006H,006H,006H,007H ; akuma no ido
		BYTE	01DH,01CH,01DH,01DH,005H,004H,005H,005H ; kirikabu no naka
		BYTE	01FH,01EH,01FH,01FH,010H,010H,010H,011H ; urayama tunagi doukutu -D
		BYTE	01DH,01CH,01DH,01DH,011H,010H,011H,011H ; urayama tunagi doukutu -U
		BYTE	005H,004H,005H,005H,007H,006H,007H,007H ; kameiwa danjon -1   
		BYTE	01FH,01EH,01FH,01FH,016H,016H,016H,017H ; urayama nise deguchi -D
		BYTE	01DH,01CH,01DH,01DH,017H,016H,017H,017H ; urayama nise deguchi -U
		BYTE	01BH,01AH,01BH,01BH,00AH,00AH,00AH,00BH ; kameiwa danjon -2		
		BYTE	005H,004H,005H,005H,009H,008H,009H,009H ;                -3
		BYTE	01FH,01EH,01FH,01FH,01AH,01AH,01AH,01BH ; otoshianatunagi -D 
		BYTE	01DH,01CH,01DH,01DH,01AH,01AH,01AH,01BH ; otoshianatunagi -U
		BYTE	01FH,01EH,01FH,01FH,01DH,01DH,01DH,01EH ; uzumaki-D 
		BYTE	01DH,01CH,01DH,01DH,01DH,01CH,01DH,01DH ; uzumaki-U
		BYTE	01FH,01EH,01FH,01FH,01FH,01EH,01FH,01FH ; migisita-hazure 
		BYTE	01DH,01CH,01DH,01DH,01EH,01EH,01EH,01FH ; migisita-start
		BYTE	01BH,01AH,01BH,01BH,01EH,01EH,01EH,01FH ; migisita-atatri
		BYTE	01FH,01EH,01FH,01FH,012H,012H,012H,013H ; meganeiwa -LD
		BYTE	01FH,01EH,01FH,01FH,014H,014H,014H,015H ; meganeiwa -RD
		BYTE	01DH,01CH,01DH,01DH,014H,014H,014H,015H ; meganeiwa -U
		BYTE	01DH,01CH,01DH,01DH,000H,000H,000H,001H ; tower of shisai
		BYTE	005H,004H,005H,005H,010H,010H,010H,011H ; ura hokora danjon 
		BYTE	009H,008H,009H,009H,014H,014H,014H,015H ; ura shinden 
		BYTE	013H,012H,013H,013H,010H,010H,010H,011H ; ura numa danjon
		BYTE	00BH,00AH,00BH,00BH,00CH,00CH,00CH,00DH ; ura mori in-1
		BYTE	00BH,00AH,00BH,00BH,00EH,00EH,00EH,00FH ;            -2
		BYTE	00BH,00AH,00BH,00BH,010H,010H,010H,011H ;            -3 
		BYTE	00BH,00AH,00BH,00BH,012H,012H,012H,013H ;            -4
		BYTE	01DH,01CH,01DH,01DH,002H,002H,002H,003H ; mori no ki no naka
		BYTE	001H,000H,001H,001H,01DH,01CH,01DH,01DH ; ura mizuumi
		BYTE	01DH,01CH,01DH,01DH,00CH,00CH,00CH,00DH ; doukutu2-L
		BYTE	01DH,01CH,01DH,01DH,00FH,00EH,00FH,00FH ; doukutu2-R
		BYTE	01DH,01CH,01DH,01DH,008H,008H,008H,009H ; Mt.jiji house-L
		BYTE	01DH,01CH,01DH,01DH,00AH,00AH,00AH,00BH ; Mt.jiji house-R
		BYTE	00BH,00AH,00BH,00BH,00AH,00AH,00AH,00BH ; castle reverse
		BYTE	00FH,00EH,00FH,00FH,00EH,00EH,00EH,00FH ; Mt.tower
		BYTE	01BH,01AH,01BH,01BH,016H,016H,016H,017H ; machi danjon
		BYTE	01BH,01AH,01BH,01BH,00DH,00CH,00DH,00DH ; kameiwa danjon -0
		BYTE	003H,002H,003H,003H,000H,000H,000H,001H ; piramiddo iriguchi
		BYTE	001H,000H,001H,001H,018H,018H,018H,019H ; ura Mt.tower-fainal
		BYTE	001H,000H,001H,001H,011H,010H,011H,011H ; haka migi dai yousei doukutu
		BYTE	005H,004H,005H,005H,01FH,01EH,01FH,01FH ; takara no ido no naka
		BYTE	007H,006H,007H,007H,019H,018H,019H,019H ; ura yama futtobashi iwa -in
		BYTE	005H,004H,005H,005H,018H,018H,018H,019H ;                         -out
;
		BYTE	021H,020H,021H,021H,000H,000H,000H,001H	;  0L
		BYTE	023H,022H,023H,023H,01DH,01DH,01DH,01EH	;  1ER
		BYTE	021H,020H,021H,021H,002H,002H,002H,003H	;  1L
		BYTE	021H,020H,021H,021H,003H,003H,003H,004H	;  1R
		BYTE	021H,020H,021H,021H,004H,004H,004H,005H	;  2L
		BYTE	023H,022H,023H,023H,00FH,00EH,00FH,00FH	;  17
		BYTE	021H,020H,021H,021H,006H,006H,006H,007H	;  3Ld
		BYTE	021H,020H,021H,021H,006H,006H,006H,007H	;  3Lu
		BYTE	021H,020H,021H,021H,007H,007H,007H,008H	;  3R
		BYTE	021H,020H,021H,021H,00AH,00AH,00AH,00BH	;  5L
		BYTE	023H,022H,023H,023H,01FH,01FH,01FH,020H	;  1FR
		BYTE	021H,020H,021H,021H,00CH,00CH,00CH,00DH	;  6L
		BYTE	021H,020H,021H,021H,00DH,00DH,00DH,00EH	;  6R
		BYTE	021H,020H,021H,021H,00EH,00EH,00EH,00FH	;  7L
		BYTE	021H,020H,021H,021H,00FH,00FH,00FH,010H	;  7R
		BYTE	021H,020H,021H,021H,010H,010H,010H,011H	;  8
		BYTE	021H,020H,021H,021H,012H,012H,012H,013H	;  9L
		BYTE	021H,020H,021H,021H,014H,014H,014H,015H	;  A
		BYTE	021H,020H,021H,021H,016H,016H,016H,017H	;  B
		BYTE	021H,020H,021H,021H,018H,018H,018H,019H	;  CL
		BYTE	021H,020H,021H,021H,019H,019H,019H,01AH	;  CR
		BYTE	023H,022H,023H,023H,016H,016H,016H,017H	;  1BL
		BYTE	023H,022H,023H,023H,017H,017H,017H,018H	;  1BR
		BYTE	023H,022H,023H,023H,018H,018H,018H,019H	;  1CL
		BYTE	023H,022H,023H,023H,019H,019H,019H,019H ;  1CR
		BYTE	023H,022H,023H,023H,01CH,01CH,01CH,01DH	;  1EL
		BYTE	025H,024H,025H,025H,001H,000H,001H,001H	;  20R
		BYTE	023H,022H,023H,023H,000H,000H,000H,001H	;  10L
		BYTE	023H,022H,023H,023H,005H,005H,005H,006H	;  12R
		BYTE	023H,022H,023H,023H,002H,002H,002H,003H	;  11
		BYTE	023H,022H,023H,023H,004H,004H,004H,005H	;  12L
		BYTE	023H,022H,023H,023H,006H,006H,006H,007H	;  13L
		BYTE	023H,022H,023H,023H,008H,008H,008H,009H	;  14L
		BYTE	023H,022H,023H,023H,00AH,00AH,00AH,00BH	;  15L
		BYTE	023H,022H,023H,023H,00BH,00BH,00BH,00CH ;  15R
		BYTE	021H,020H,021H,021H,01AH,01AH,01AH,01BH ;  DL
		BYTE	021H,020H,021H,021H,01EH,01EH,01EH,01FH ;  FL
		BYTE	023H,022H,023H,023H,012H,012H,012H,013H ;  19
		BYTE	023H,022H,023H,023H,009H,009H,009H,00AH ;  14R
		BYTE	023H,022H,023H,023H,00DH,00DH,00DH,00EH ;  16R
		BYTE	025H,024H,025H,025H,002H,002H,002H,003H ;  21L
		BYTE	025H,024H,025H,025H,004H,004H,004H,005H ;  22L
		BYTE	025H,024H,025H,025H,005H,005H,005H,006H ;  22R
		BYTE	023H,022H,023H,023H,011H,011H,011H,012H ;  18R
		BYTE	023H,022H,023H,023H,015H,015H,015H,016H ;  1AR
		BYTE	021H,020H,021H,021H,01CH,01CH,01CH,01DH ;  EL
		BYTE	021H,020H,021H,021H,01DH,01DH,01DH,01EH ;  ER
		BYTE	023H,022H,023H,023H,01EH,01EH,01EH,01FH ;  1FL
		BYTE	025H,024H,025H,025H,006H,006H,006H,007H ;  23L
		BYTE	025H,024H,025H,025H,008H,008H,008H,009H ;  24L
		BYTE	025H,024H,025H,025H,009H,009H,009H,00AH ;  24R
		BYTE	025H,024H,025H,025H,00AH,00AH,00AH,00BH ;  25L
		BYTE	025H,024H,025H,025H,00BH,00BH,00BH,00CH ;  25R
		BYTE	025H,024H,025H,025H,00CH,00CH,00CH,00DH ;  26L
		BYTE	025H,024H,025H,025H,00DH,00DH,00DH,00EH ;  26R
;
		BYTE	010H,010H,010H,011H,001H,000H,001H,001H ;OP rouya
		BYTE	00BH,00AH,00BH,00BH,002H,002H,002H,003H ;OP ooza
		BYTE	006H,006H,006H,007H,000H,000H,000H,001H ;OP sisai no heya 
;
		BYTE	00AH,00AH,00AH,00BH,011H,010H,011H,011H ; ura mori hole-1 
		BYTE	00CH,00CH,00CH,00DH,00EH,00EH,00EH,00FH ;              -2 
		BYTE	00CH,00CH,00CH,00DH,011H,010H,011H,011H ;              -3 
		BYTE	00AH,00AH,00AH,00BH,00DH,00CH,00DH,00DH ;              -4 
		BYTE	01CH,01CH,01CH,01DH,003H,002H,003H,003H ; mori no ki no naka 
		BYTE	000H,000H,000H,001H,001H,000H,001H,001H ; piramiddo ganon 
		BYTE	003H,002H,003H,003H,010H,010H,010H,011H ; haka migi doukutu
		BYTE	00AH,00AH,00AH,00BH,00BH,00AH,00BH,00BH ; castle reverse hole 
		BYTE	01DH,01CH,01DH,01DH,007H,006H,007H,007H ; koakuma no ido 
		BYTE	01DH,01CH,01DH,01DH,004H,004H,004H,005H ; kirikabu no naka 
		BYTE	005H,004H,005H,005H,01EH,01EH,01EH,01FH ; takara no ido nka
		BYTE	003H,002H,003H,003H,003H,002H,003H,003H ; kyoukai sita chikadou
		BYTE	001H,000H,001H,001H,006H,006H,006H,007H ; anaochi hijyou room
;
		BYTE	025H,024H,025H,025H,00EH,00EH,00EH,00FH ;  27L
		BYTE	025H,024H,025H,025H,000H,000H,000H,001H ;  20L
;
;// 03.08.28 //ISCTDT		EQU	$		; scroll limit data  <SCVU>
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //;
;// 03.08.28 //		WORD	00300H,00200H,00310H,00310H,00400H,00400H,00400H,00500H	; chapel
;// 03.08.28 //		WORD	00D00H,00C00H,00D10H,00D10H,00100H,00000H,00100H,00100H	; shiro-0
;// 03.08.28 //		WORD	00D00H,00C00H,00D10H,00D10H,00200H,00200H,00200H,00300H	;      -1
;// 03.08.28 //		WORD	00D00H,00C00H,00D10H,00D10H,00400H,00400H,00400H,00500H	;      -2
;// 03.08.28 //;
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,00000H,00000H,00000H,00100H ; doukutu -L
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,00300H,00200H,00300H,00300H ; doukutu -R
;// 03.08.28 //		WORD	01900H,01800H,01910H,01910H,01200H,01200H,01200H,01300H ; shinden
;// 03.08.28 //		WORD	01100H,01000H,01110H,01110H,00800H,00800H,00800H,00900H ; desert sindn-0
;// 03.08.28 //		WORD	01100H,01000H,01110H,01110H,00B00H,00A00H,00B00H,00B00H ;	      -1
;// 03.08.28 //		WORD	01100H,01000H,01110H,01110H,00600H,00600H,00600H,00700H ;             -2
;// 03.08.28 //		WORD	00D00H,00C00H,00D10H,00D10H,00600H,00600H,00600H,00700H ;	      -3
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,00500H,00500H,00500H,00600H ; sontyo-L
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,00600H,00600H,00600H,00700H ; sontyo-R
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,00900H,00900H,00900H,00A00H ; futago-L
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,00A00H,00A00H,00A00H,00B00H ; futago-R
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00600H,00600H,00600H,00700H ; akuma no ido
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00500H,00400H,00500H,00500H ; kirikabu no naka
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,01000H,01000H,01000H,01100H ; urayama tunagi doukutu -D
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,01100H,01000H,01100H,01100H ; urayama tunagi doukutu -U
;// 03.08.28 //		WORD	00500H,00400H,00510H,00510H,00700H,00600H,00700H,00700H ; kameiwa danjon -1   
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,01600H,01600H,01600H,01700H ; urayama nise deguchi -D
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,01700H,01600H,01700H,01700H ; urayama nise deguchi -U
;// 03.08.28 //		WORD	01B00H,01A00H,01B10H,01B10H,00A00H,00A00H,00A00H,00B00H ; kameiwa danjon -2		
;// 03.08.28 //		WORD	00500H,00400H,00510H,00510H,00900H,00800H,00900H,00900H ;                -3
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,01A00H,01A00H,01A00H,01B00H ; otoshianatunagi -D 
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,01A00H,01A00H,01A00H,01B00H ; otoshianatunagi -U
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,01D00H,01D00H,01D00H,01E00H ; uzumaki-D 
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,01C00H,01C00H,01D00H,01E00H ; uzumaki-U
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,01A00H,01A00H,01A00H,01B00H ; migisita-iriguti
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,01B00H,01B00H,01B00H,01C00H ; migisita_start
;// 03.08.28 //		WORD	01B00H,01A00H,01B10H,01B10H,01E00H,01E00H,01E00H,01F00H ; migisita atatri
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,01200H,01200H,01200H,01300H ; meganeiwa -LD
;// 03.08.28 //		WORD	01F00H,01E00H,01F10H,01F10H,01400H,01400H,01400H,01500H ; meganeiwa -RD
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,01400H,01400H,01400H,01500H ; meganeiwa -U
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00000H,00000H,00000H,00100H ; tower of shisai
;// 03.08.28 //		WORD	00500H,00400H,00510H,00510H,01000H,01000H,01000H,01100H ; ura hokora danjon 
;// 03.08.28 //		WORD	00900H,00800H,00910H,00910H,01400H,01400H,01400H,01500H ; ura shinden 
;// 03.08.28 //		WORD	01300H,01200H,01310H,01310H,01000H,01000H,01000H,01100H ; ura numa danjon
;// 03.08.28 //		WORD	00B00H,00A00H,00B10H,00B10H,00C00H,00C00H,00C00H,00D00H ; ura mori in-1
;// 03.08.28 //		WORD	00B00H,00A00H,00B10H,00B10H,00E00H,00E00H,00E00H,00F00H ;            -2
;// 03.08.28 //		WORD	00B00H,00A00H,00B10H,00B10H,01000H,01000H,01000H,01100H ;            -3 
;// 03.08.28 //		WORD	00B00H,00A00H,00B10H,00B10H,01200H,01200H,01200H,01300H ;            -4
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00200H,00200H,00200H,00300H ; mori no ki no naka
;// 03.08.28 //		WORD	00100H,00000H,00110H,00110H,01D00H,01C00H,01D00H,01D00H ; ura mizuumi
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00C00H,00C00H,00C00H,00D00H ; doukutu2-L
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00F00H,00E00H,00F00H,00F00H ; doukutu2-R
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00800H,00800H,00800H,00900H ; Mt.jji house-L
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00A00H,00A00H,00A00H,00B00H ; Mt.jji house-R
;// 03.08.28 //		WORD	00B00H,00A00H,00B10H,00B10H,00A00H,00A00H,00A00H,00B00H ; castle reverse
;// 03.08.28 //		WORD	00F00H,00E00H,00F10H,00F10H,00E00H,00E00H,00E00H,00F00H ; Mt.tower
;// 03.08.28 //		WORD	01B00H,01A00H,01B10H,01B10H,01600H,01600H,01600H,01700H ; machi danjon
;// 03.08.28 //		WORD	01B00H,01A00H,01B10H,01B10H,00D00H,00C00H,00D00H,00D00H ; kameiwa danjon -0
;// 03.08.28 //		WORD	00300H,00200H,00310H,00310H,00000H,00000H,00000H,00100H ; piramiddo iriguchi
;// 03.08.28 //		WORD	00100H,00000H,00110H,00110H,01800H,01800H,01800H,01900H ; ura Mt.tower-fainal
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //;
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00000H,00000H,00000H,00100H	;  0L
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00100H,00100H,00100H,00200H	;  0R
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00200H,00200H,00200H,00300H	;  1L
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00300H,00300H,00300H,00400H	;  1R
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00400H,00400H,00400H,00500H	;  2L
;// 03.08.28 //		WORD	02300H,02200H,02310H,02310H,00F00H,00E00H,00F00H,00F00H	;  17
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00600H,00600H,00600H,00700H	;  3Ld
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00600H,00600H,00600H,00700H	;  3Lu
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00700H,00700H,00700H,00800H	;  3R
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00A00H,00A00H,00A00H,00B00H	;  5L
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00B00H,00B00H,00B00H,00C00H	;  5R
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00C00H,00C00H,00C00H,00D00H	;  6L
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00D00H,00D00H,00D00H,00E00H	;  6R
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00E00H,00E00H,00E00H,00F00H	;  7L
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00F00H,00F00H,00F00H,01000H	;  7R
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01000H,01000H,01000H,01100H	;  8
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01200H,01200H,01200H,01300H	;  9L
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01400H,01400H,01400H,01500H	;  A
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01600H,01600H,01600H,01700H	;  B
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01800H,01800H,01800H,01900H	;  CL
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01900H,01900H,01900H,01A00H	;  CR
;// 03.08.28 //		WORD	02300H,02200H,02310H,02310H,01600H,01600H,01600H,01700H	;  1BL
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,01700H,01700H,01700H,01800H	;  1BR
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,01800H,01800H,01800H,01900H	;  1CL
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,01900H,01900H,01900H,01900H ;  1CR
;// 03.08.28 //   	WORD	02500H,02400H,02510H,02510H,00000H,00000H,00000H,00100H	;  20L
;// 03.08.28 //   	WORD	02500H,02400H,02510H,02510H,00100H,00100H,00100H,00200H	;  20R
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,00000H,00000H,00000H,00100H	;  10L
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,00100H,00100H,00100H,00200H	;  10R
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,00200H,00200H,00200H,00300H	;  11
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,00400H,00400H,00400H,00500H	;  12L
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,00600H,00600H,00600H,00700H	;  13L
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,00800H,00800H,00800H,00900H	;  14L
;// 03.08.28 //   	WORD	02300H,02200H,02310H,02310H,00A00H,00A00H,00A00H,00B00H	;  15L
;// 03.08.28 //		WORD	02300H,02200H,02310H,02310H,00B00H,00B00H,00B00H,00C00H ;  15R
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01A00H,01A00H,01A00H,01B00H ;  DL
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01E00H,01E00H,01E00H,01F00H ;  FL
;// 03.08.28 //;
;// 03.08.28 //		WORD	02300H,02200H,02310H,02310H,01200H,01200H,01200H,01300H ;  test
;// 03.08.28 //;
;// 03.08.28 //		WORD	02300H,02200H,02310H,02310H,01400H,01400H,01400H,01500H ;  1AL
;// 03.08.28 //		WORD	02300H,02200H,02310H,02310H,00D00H,00D00H,00D00H,00E00H ;  16R
;// 03.08.28 //		WORD	02500H,02400H,02510H,02510H,00200H,00200H,00200H,00300H ;  21L
;// 03.08.28 //		WORD	02500H,02400H,02510H,02510H,00400H,00400H,00400H,00500H ;  22L
;// 03.08.28 //		WORD	02500H,02400H,02510H,02510H,00500H,00500H,00500H,00600H ;  22R
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01300H,01300H,01300H,01400H ;  9R
;// 03.08.28 //		WORD	02300H,02200H,02310H,02310H,01500H,01500H,01500H,01600H ;  1AR
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01C00H,01C00H,01C00H,01D00H ;  EL
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,01D00H,01D00H,01D00H,01E00H ;  ER
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H
;// 03.08.28 //;
;// 03.08.28 //		WORD	01000H,01000H,01010H,01110H,00100H,00000H,00100H,00100H ;OP rouya
;// 03.08.28 //		WORD	00B00H,00A00H,00B10H,00B10H,00200H,00200H,00200H,00300H ;OP ooza
;// 03.08.28 //		WORD	00600H,00600H,00610H,00710H,00000H,00000H,00000H,00100H ;OP sisai no heya 
;// 03.08.28 //;
;// 03.08.28 //		WORD	00A00H,00A00H,00A10H,00B10H,01100H,01000H,01100H,01100H ; ura mori hole-1 
;// 03.08.28 //		WORD	00C00H,00C00H,00C10H,00D10H,00E00H,00E00H,00E00H,00F00H ;              -2 
;// 03.08.28 //		WORD	00C00H,00C00H,00C10H,00D10H,01100H,01000H,01100H,01100H ;              -3 
;// 03.08.28 //		WORD	00A00H,00A00H,00A10H,00B10H,00D00H,00C00H,00D00H,00D00H ;              -4 
;// 03.08.28 //		WORD	01C00H,01C00H,01C10H,01D10H,00300H,00200H,00300H,00300H ; mori no ki no naka 
;// 03.08.28 //		WORD	00000H,00000H,00010H,00010H,00000H,00000H,00000H,00000H ; 
;// 03.08.28 //		WORD	00000H,00000H,00010H,00010H,00000H,00000H,00000H,00000H ; 
;// 03.08.28 //		WORD	00A00H,00A00H,00A10H,00B10H,00B00H,00A00H,00B00H,00B00H ; castle reverse hole 
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00700H,00600H,00700H,00700H ; koakuma no ido 
;// 03.08.28 //		WORD	01D00H,01C00H,01D10H,01D10H,00400H,00400H,00400H,00500H ; kirikabu no naka 
;// 03.08.28 //		WORD	00000H,00000H,00010H,00110H,00100H,00000H,00100H,00100H ; piramiddo ganon 
;
;
;
ISCHDT		EQU	$		; sccH               <SCCH>
		WORD	00900H
		WORD	00900H
		WORD	00480H,00100H,00280H,00400H
;
		WORD	00000H,00300H,01280H,00880H,00B00H,00600H,00600H,00500H
		WORD	00600H,00900H,00A00H,00600H,00500H,01080H,01100H,00700H
		WORD	01680H,01700H,00A00H,00900H,01A80H,01B00H,01D00H,01D00H
		WORD	01F00H,01E80H,01E80H,01200H,01400H,01400H,00000H,01080H
		WORD	01480H,01000H,00C00H,00E00H,01000H,01200H,00200H,01D00H
		WORD	00C00H,00F00H,00800H,00A80H,00A00H,00E80H,01680H,00D00H
		WORD	00000H,01880H,01100H,01F00H,01900H,01800H
;
;			   0L    1ER     1L     1R     2L     17    3Ld    3Lu     3R
		WORD	00000H,01D00H,00200H,00300H,00400H,00F00H,00600H,00600H,00700H
;			   5L    1FR     6L     6R     7L     7R      8     9L
		WORD	00A00H,01F00H,00C00H,00D00H,00E00H,00F00H,01000H,01200H
;			    A      B     CL     CR    1BL    1BR    1CL    1CR
		WORD	01400H,01680H,01800H,01900H,01600H,01700H,01800H,01900H
;			  1EL    20R    10L    12R    11     12L    13L    14L
  		WORD	01C00H,00100H,00000H,00500H,00200H,00400H,00600H,00800H
;			  15L    15R     DL     FL    19     14R    16R    21L
 		WORD	00A00H,00B00H,01A00H,01E00H,01280H,00900H,00D00H,00200H
;			  22L    22R    18R    1AR    EL      ER    1FL    23L
		WORD	00400H,00500H,01100H,01500H,01C00H,01D00H,01E00H,00600H
;			  24L    24R    25L    25R    26L    26R
		WORD	00800H,00900H,00A00H,00B00H,00C00H,00D00H
;
;			  OP1    OP2    OP3 			
		WORD	00100H,00280H,00000H
;
;			  H1     H2     H3     H4     H5     H6     H7     H8
		WORD	01100H,00E00H,01088H,00D00H,00300H,00100H,01000H,00B00H
;			  H9     HA     HB     HC     HD
		WORD	00700H,00400H,01E00H,00300H,00600H
;
;			  27L 	 20L		
		WORD	00E00H,00000H
;
;// 03.04.02 //;
;// 03.04.02 //;
;// 03.04.02 //ISCVDT		EQU	$		; sccV               <SCCV>
;// 03.04.02 //		WORD	02118H
;// 03.04.02 //		WORD	02118H
;// 03.04.02 //		WORD	00918H,00D18H,00D18H,00D18H
;// 03.04.02 //;
;// 03.04.02 //		WORD	01F18H,01F18H,00B18H,00F18H,00F18H,01118H,00D18H,00000H
;// 03.04.02 //		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.04.02 //		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.04.02 //		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.04.02 //;
;// 03.04.02 //;
;// 03.04.02 //		WORD	02118H,02118H,02118H,02118H,02118H,02118H,02118H,01FFCH,02118H
;// 03.04.02 //		WORD	02118H,02118H,02118H,02118H,02118H,02118H,02118H,02118H,02118H
;// 03.04.02 //		WORD	02118H,02118H,02118H,02118H,02118H
;// 03.04.02 //;
ISCVDT		EQU	$		; sccV               <SCCV>
		WORD	02110H
		WORD	02110H
		WORD	00310H,00D10H,00D10H,00D10H
;
		WORD	01F10H,01F10H,01910H,01110H,01110H,01110H,00D10H,01F10H
		WORD	01F10H,01F10H,01F10H,01D10H,01D10H,01F10H,01D10H,00510H
		WORD	01F10H,01D10H,01B10H,00510H,01F10H,01D10H,01F10H,01D10H
		WORD	01F10H,01D10H,01B10H,01F10H,01F10H,01D10H,01D10H,00510H
		WORD	00910H,01310H,00B10H,00B10H,00B10H,00B10H,01D10H,00110H
		WORD	01D10H,01D10H,01D10H,01D10H,00B10H,00F10H,01B10H,01B10H
		WORD	00310H,00110H,00110H,00510H,00710H,00510H
;
;
		WORD	02110H,02310H,02110H,02110H,02110H,02310H,02110H,02000H,02110H
		WORD	02110H,02310H,02110H,02110H,02110H,02110H,02110H,02110H
		WORD	02110H,02110H,02110H,02110H,02310H,02310H,02310H,02310H
		WORD	02310H,02510H,02310H,02310H,02310H,02310H,02310H,02310H
		WORD	02310H,02310H,02110H,02110H,02310H,02310H,02310H,02510H
		WORD	02510H,02510H,02310H,02310H,02110H,02110H,02310H,02510H
		WORD	02510H,02510H,02510H,02510H,02510H,02510H
;			  OP1    OP2    OP3 			
		WORD	01010H,00B10H,00610H
;
;			  H1     H2     H3     H4     H5     H6     H7     H8
		WORD	00A00H,00C00H,00C29H,00A00H,01C3DH,00010H,002CEH,00A10H
;			  H9     HA     HB     HC     HD
		WORD	01D10H,01D10H,00510H,002ADH,00110H
;
;			
		WORD	02510H,2510H
;
IYPSDT		EQU	$		; player Y-pos.      <PLYPS1>
		WORD	02178H
		WORD	021D8H
		WORD	003C0H,00DD8H,00DC0H,00DD8H
;
		WORD	01FD8H,01FC0H,019D8H,011D8H,011D8H,011D8H,00DD8H,01FD8H
		WORD	01FD8H,01FD8H,01FD8H,01DD8H,01DD8H,01FD8H,01DD8H,005D8H
		WORD	01FD8H,01DD8H,01BD8H,005D8H,01FC0H,01DD8H,01FC0H,01DD8H
		WORD	01FD8H,01DD8H,01BD8H,01FD8H,01FC0H,01DD8H,01DD8H,005D8H
		WORD	009D8H,013D8H,00BD8H,00BD8H,00BD8H,00BD8H,01DD8H,001D8H
		WORD	01DC0H,01DC0H,01DC0H,01DD8H,00BD8H,00FC0H,01BD8H,01BD8H
		WORD	003D8H,001D8H,001D8H,005D8H,007D8H,005D8H
;
;			   0L    1ER     1L     1R     2L     17    3Ld    3Lu     3R
		WORD	021D8H,023D8H,021D8H,021D8H,021D8H,023D8H,021D8H,02020H,021D8H
;			   5L    1FR     6L     6R     7L     7R      8     9L
		WORD	021D8H,023D8H,021D8H,021D8H,021D8H,021D8H,021D8H,021D8H
;			    A      B     CL     CR    1BL    1BR    1CL    1CR
		WORD	021C0H,021D8H,021D8H,021D8H,023C0H,023D8H,023D8H,023D8H
;			  1EL     20    10L    12R    11     12L    13L    14L
		WORD	023D8H,025D8H,023D8H,023D8H,023D8H,023D8H,023D8H,023D8H
;			  15L    15R     DL     FL    19     14R    16R    21L
		WORD	023D8H,023D8H,021D8H,021D8H,023D8H,023D8H,023D8H,025D8H
;			  22L    22R    18R    1AR     EL    ER     1FL    23L
		WORD	025D8H,025D8H,023D8H,023D8H,021C0H,021C0H,023D8H,025D8H
;			  24L    24R    25L    25R    26L    26R
		WORD	025D8H,025D8H,025D8H,025D8H,025D8H,025D8H
;
;			  OP1    OP2    OP3 			
		WORD	01080H,00BA8H,00698H
;
;			  H1     H2     H3     H4     H5     H6     H7     H8 
		WORD	00A69H,00C68H,00C96H,00A68H,01CA9H,00089H,0033BH,00A96H
;			  H9     HA     HB     HC     HD
		WORD    01D7DH,01D89H,00589H,0031AH,00197H
;
;			  27L    20L
		WORD	025D8H,025D8H
;
IXPSDT		EQU	$		;        X-pos.      <PLXPS1>
		WORD	00978H
		WORD	00978H
		WORD	004F8H,00178H,002F8H,00478H
;
		WORD	00078H,00378H,012F8H,008F8H,00B78H,00678H,00678H,00578H
		WORD	00678H,00978H,00A78H,00678H,00578H,010F8H,01178H,00778H
		WORD	016F8H,01778H,00A78H,00978H,01AF8H,01B78H,01D78H,01D78H
		WORD	01F78H,01EF8H,01EF8H,01278H,01478H,01478H,00078H,010F8H
		WORD	014F8H,01078H,00C78H,00E78H,01078H,01278H,00278H,01D78H
		WORD	00C78H,00F78H,00878H,00AF8H,00A78H,00EF8H,016F8H,00D78H
		WORD	00078H,018F8H,01178H,01F78H,01978H,01878H
;
;
		WORD	00078H,01D78H,00278H,00378H,00478H,00F78H,00678H,00678H,00778H
		WORD	00A78H,01F78H,00C78H,00D78H,00E78H,00F78H,01078H,01278H
		WORD	01478H,016F8H,01878H,01978H,01678H,01778H,01878H,01978H
		WORD	01C78H,00178H,00078H,00578H,00278H,00478H,00678H,00878H
		WORD	00A78H,00B78H,01A78H,01E78H,012F8H,00978H,00D78H,00278H
		WORD	00478H,00578H,01178H,01578H,01C78H,01D78H,01E78H,00678H
		WORD	00878H,00978H,00A78H,00B78H,00C78H,00D78H
;			  OP1    OP2    OP3 			
		WORD	001A8H,002F8H,00078H
;
;			  H1     H2     H3     H4     H5     H6     H7     H8
		WORD	01190H,00E80H,01100H,00D40H,00370H,0017FH,01073H,00B9FH
;			  H9     HA     HB     HC     HD
		WORD	00778H,0047FH,01E61H,00393H,00677H
;
;
		WORD	00E78H,00078H
;
IUPCDT		EQU	$		; up   check data    <PYUPCT>
		WORD	00187H
		WORD	00187H
		WORD	00187H,00187H,00187H,00187H
;
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H
;
;
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00074H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
		WORD	00187H,00187H,00187H,00187H,00187H,00187H
;			  OP1    OP2    OP3 			
		WORD	00088H,00188H,00088H
;
;			  H1     H2     H3     H4     H5     H6     H7     H8
;// 03.05.09 //		WORD	00084H,00076H,00068H,00070H,00080H,00078H,00183H,00000H
		WORD	00077H,00078H,000A1H,00077H,000B4H,00088H,00146H,00088H
;			  H9     HA     HB     HC     HD
		WORD	00188H,00187H,00187H,00125H,00188H
;
;
		WORD	00187H,00187H
;
ILFCDT		EQU	$		; left               <PXLFCT>
		WORD	0017FH
		WORD	0017FH
		WORD	000FFH,0017FH,000FFH,0007FH
;
		WORD	0007FH,0017FH,000FFH,000FFH,0017FH,0007FH,0007FH,0017FH
		WORD	0007FH,0017FH,0007FH,0007FH,0017FH,000FFH,0017FH,0017FH
		WORD	000FFH,0017FH,0007FH,0017FH,000FFH,0017FH,0017FH,0017FH
		WORD	0017FH,000FFH,000FFH,0007FH,0007FH,0007FH,0007FH,000FFH
		WORD	000FFH,0007FH,0007FH,0007FH,0007FH,0007FH,0007FH,0017FH
		WORD	0007FH,0017FH,0007FH,000FFH,0007FH,000FFH,000FFH,0017FH
		WORD	0007FH,000FFH,0017FH,0017FH,0017FH,0007FH
;
;
		WORD	0007FH,0017FH,0007FH,0017FH,0007FH,0017FH,0007FH,0007FH,0017FH
		WORD	0007FH,0017FH,0007FH,0017FH,0007FH,0017FH,0007FH,0007FH
		WORD	0007FH,000FFH,0007FH,0017FH,0007FH,0017FH,0007FH,0017FH
		WORD	0007FH,0017FH,0007FH,0017FH,0007FH,0007FH,0007FH,0007FH
		WORD	0007FH,0017FH,0007FH,0007FH,000FFH,0017FH,0017FH,0007FH
		WORD	0007FH,0017FH,0017FH,0017FH,0007FH,0017FH,0007FH,0007FH
		WORD	0007FH,0017FH,0007FH,0017FH,0007FH,0017FH
;			  OP1    OP2    OP3 			
		WORD	0017FH,000FFH,0007FH
;
;			  H1     H2     H3     H4     H5     H6     H7     H8
		WORD	0017FH,0007FH,00107H,0017FH,0017FH,0017FH,0007FH,0017FH
;			  H9     HA     HB     HC     HD
		WORD	0017FH,0007FH,0007FH,0017FH,0007FH
;
;
		WORD	0007FH,0007FH
;
BGCHPT		EQU	$		; BG. character pointer  <CHIKNO>
		BYTE	003H
		BYTE	003H
		BYTE	004H,004H,004H,004H
;
		BYTE	006H,006H,005H,012H,012H,012H,012H,003H
		BYTE	003H,003H,003H,006H,006H,006H,006H,00DH
		BYTE	006H,006H,00DH,00DH,006H,006H,006H,006H
		BYTE	006H,006H,006H,006H,006H,006H,004H,008H
		BYTE	007H,00CH,009H,009H,009H,009H,006H,00BH
		BYTE	006H,006H,014H,014H,001H,005H,00AH,00DH
		BYTE	013H,00EH,006H,006H,006H,006H
;
;			 0L   1ER  1L   1R   2L   17  3Ld  3Lu   3R
		BYTE	003H,006H,003H,003H,003H,014H,003H,003H,003H
;			 5L   1FR   6L   6R   7L   7R    8   9L
		BYTE	00FH,003H,003H,003H,003H,003H,003H,003H
;			  A    B   CL   CR   1BL  1BR  1CL  1CR
		BYTE	006H,008H,006H,006H,006H,006H,003H,003H
;			 1EL  20R  10L  12R  11   12L  13L  14L
		BYTE	006H,006H,003H,014H,011H,014H,001H,006H
;			 15L  15R  DL   FL   19   14R  16R  21L
 		BYTE	006H,006H,008H,003H,00AH,006H,012H,011H
;			 22L  22R  18R  1AR   EL   ER  1FL  23L
		BYTE	011H,011H,003H,00FH,014H,014H,003H,006H
;			 24L  24R  25L  25R  26L  26R
		BYTE	006H,006H,006H,006H,006H,006H
;
;			 OP1  OP2  OP3
		BYTE	001H,004H,002H
;
;			 H1   H2   H3   H4   H5   H6   H7   H8  
		BYTE	009H,009H,009H,009H,006H,013H,006H,001H
;			 H9   HA   HB   HC   HD
		BYTE	006H,006H,006H,001H,006H
;
;			 27L  20L
		BYTE	006H,006H
;
FLNODT		EQU	$		; floor no. data         <FLORNO>
		BYTE	000H
		BYTE	000H
		BYTE	000H,000H,000H,000H
;
		BYTE	000H,000H,000H,0FFH,0FFH,0FFH,000H,000H
		BYTE	000H,000H,000H,0FFH,0FFH,000H,001H,0FFH
		BYTE	000H,001H,0FEH,0FFH,000H,001H,000H,001H
		BYTE	0FFH,000H,001H,000H,000H,001H,001H,000H
		BYTE	000H,000H,0FFH,0FFH,0FFH,0FFH,0FFH,000H
		BYTE	000H,000H,000H,000H,0FFH,001H,0FFH,000H
		BYTE	000H,001H,0FFH,0FFH,0FFH,0FFH
;
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H
;
		BYTE	0FFH,0FFH,0FFH
;
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,001H,0FFH,0FFH
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH
;
;
		BYTE	000H,000H
;
DJNPTD		EQU	$		; danjyon map pointer    <DJNNO>
		BYTE	0FFH
		BYTE	0FFH
		BYTE	000H,002H,002H,002H
;
		BYTE	0FFH,0FFH,004H,006H,006H,006H,006H,0FFH
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,018H
		BYTE	0FFH,0FFH,018H,018H,0FFH,0FFH,0FFH,0FFH
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,008H,00AH
		BYTE	00CH,00EH,010H,010H,010H,010H,0FFH,012H
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,014H,016H,018H
		BYTE	0FFH,01AH,0FFH,0FFH,0FFH,0FFH
;
;			 0L   1ER  1L   1R   2L   17  3Ld  3Lu   3R  
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;			 5L   1FR   6L   6R   7L   7R    8   9L
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;			  A    B   CL   CR   1BL  1BR  1CL  1CR
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;			 1EL  20R  10L  12R  11   12L  13L  14L
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;			 15L  15R  DL   FL   19   14R  16R  21L
  		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
; 			 22L  22R  18R   1AR  EL   ER  1FL  23L
 		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;			 24L  24R  25L  25R  26L  26R
		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;
;			 OP1  OP2  OP3
		BYTE	0FFH,0FFH,0FFH
;
;			 H1   H2   H3   H4   H5   H6   H7   H8  
		BYTE	010H,010H,010H,010H,0FFH,0FFH,0FFH,0FFH
;			 H9   HA   HB   HC   HD
		BYTE	0FFH,0FFH,0FFH,000H,0FFH
;
;			 27L  20L
		BYTE	0FFH,0FFH
;
INDRDT		EQU	$		; player in-door data    <PWORK6>
		BYTE	000H
		BYTE	001H
		BYTE	001H,001H,001H,001H
;
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
		BYTE	001H,001H,001H,001H,001H,001H
;
;			 0L   1ER  1L   1R   2L   17  3Ld  3Lu   3R 
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H,001H
;			 5L   1FR   6L   6R   7L   7R    8   9L
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;			  A    B   CL   CR   1BL  1BR  1CL  1CR
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;			 1EL  20R  10L  12R  11   12L  13L  14L
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;			 15L  15R  DL   FL   19   14R  16R  21L
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;			 22L  22R  18R  1AR   EL   ER  1FL  23L
		BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;			 24L  24R  25L  25R  26L  26R
		BYTE	001H,001H,001H,001H,001H,001H
;
;			 OP1  OP2  OP3
		BYTE	000H,000H,000H
;
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H
;
;			 27L 20L
		BYTE	001H,001H
;					    PC
PBGMDT		EQU	$		; (000H) player BG. check mode data  <PLBGCKF>
		BYTE	000H
		BYTE	000H
		BYTE	001H,000H,001H,000H
;
		BYTE	000H,001H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,001H,000H,001H,000H
		BYTE	000H,000H,000H,000H,011H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	001H,001H,001H,000H,000H,011H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H
;
;
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	001H,000H,000H,000H,011H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,001H,001H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H
;
		BYTE	000H,011H,000H
;
		BYTE	000H,000H,000H,000H,000H,000H,001H,001H	
		BYTE	011H,001H,000H,000H,000H
;
;
		BYTE	000H,000H
;
;// 03.08.29 //;
;// 03.08.29 //PBGMDT		EQU	$		; player BG. check mode data  <PLBGCKF>
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	001H,000H,000H,000H,001H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,001H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,001H,001H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,001H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H		
;// 03.08.29 //		BYTE	001H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //CBGMDT		EQU	$		; char. BG. check mode data   <CDBGCKF>
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	001H,000H,001H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,001H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,001H,000H,001H,000H
;// 03.08.29 //		BYTE	001H,000H,000H,000H,001H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	001H,001H,001H,000H,000H,001H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	001H,000H,000H,001H,001H,000H,000H,000H
;// 03.08.29 //		BYTE	001H,000H,000H,000H,000H,001H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,001H,001H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,001H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,001H
;// 03.08.29 //		BYTE	001H,001H,000H
;// 03.08.29 //;
;					    XY
RCKXD0		EQU	$               ; (000H) room size              <RMCKXF,RMCKYF>
		BYTE	000H
		BYTE	000H
		BYTE	022H,002H,022H,022H
;
		BYTE	022H,022H,020H,022H,000H,000H,000H,000H
		BYTE	000H,000H,000H,000H,002H,022H,022H,000H
		BYTE	022H,002H,002H,000H,022H,022H,002H,022H
		BYTE	020H,020H,020H,022H,022H,022H,000H,022H
		BYTE	020H,020H,000H,000H,000H,002H,002H,000H
		BYTE	022H,022H,002H,022H,020H,022H,022H,002H
		BYTE	002H,022H,000H,020H,022H,000H
;
;
		BYTE	000H,000H,000H,000H,000H,022H,002H,002H,000H
		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
		BYTE	002H,020H,000H,002H,000H,000H,000H,000H
		BYTE	002H,000H,000H,000H,000H,002H,002H,000H
		BYTE	002H,000H,002H,000H,020H,000H,000H,000H
		BYTE	000H,000H,000H,000H,002H,002H,000H,000H
		BYTE	000H,000H,000H,000H,000H,000H
;
		BYTE	020H,022H,000H
;
		BYTE	002H,002H,022H,002H,002H,000H,002H,020H
		BYTE	000H,002H,020H,002H,000H
;
;
		BYTE	000H,000H
;
;// 03.08.29 //;
;// 03.08.29 //RCKXD0		EQU	$               ; room size              <RMCKXF>
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	002H,000H,002H,002H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	002H,002H,002H,002H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,002H,002H,000H
;// 03.08.29 //		BYTE	002H,000H,000H,000H,002H,002H,000H,002H
;// 03.08.29 //		BYTE	000H,000H,000H,002H,000H,002H,000H,002H
;// 03.08.29 //		BYTE	002H,002H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	002H,002H,000H,002H,002H,002H,002H,000H
;// 03.08.29 //		BYTE	000H,002H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,002H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,002H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,002H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,002H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,002H,002H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,002H,000H,000H,000H,000H,002H
;// 03.08.29 //		BYTE	000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //RCKYD0		EQU	$               ;                        <RMCKYF>
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	002H,002H,002H,002H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	002H,002H,000H,002H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,002H,002H,002H,002H,000H
;// 03.08.29 //		BYTE	002H,002H,002H,000H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,000H,002H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,002H,002H,000H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,000H,002H,002H,002H
;// 03.08.29 //		BYTE	000H,002H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,002H,002H,002H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	002H,000H,000H,002H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	002H,000H,000H,000H,000H,002H,002H,000H
;// 03.08.29 //		BYTE	002H,000H,002H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,002H,002H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,002H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,000H
;// 03.08.29 //		BYTE	000H,002H,000H
;// 03.08.29 //;
;
;					    XY
RCKXD1		EQU	$               ; (000H)                       <RMXCPT>
		BYTE	002H
		BYTE	002H
		BYTE	002H,012H,002H,002H
;
		BYTE	002H,012H,002H,002H,012H,002H,002H,012H
		BYTE	002H,012H,002H,002H,012H,002H,012H,012H
		BYTE	002H,012H,002H,012H,002H,012H,002H,012H
		BYTE	012H,002H,002H,002H,002H,002H,002H,002H
		BYTE	002H,002H,002H,002H,002H,002H,002H,012H
		BYTE	002H,012H,002H,002H,002H,002H,002H,012H
		BYTE	002H,002H,012H,012H,012H,002H
;
;
		BYTE	002H,012H,002H,002H,002H,012H,002H,000H,002H
		BYTE	002H,012H,002H,002H,002H,002H,002H,002H
		BYTE	002H,002H,002H,002H,002H,002H,002H,012H
		BYTE	002H,012H,002H,012H,002H,002H,002H,002H
		BYTE	002H,012H,002H,002H,002H,012H,012H,002H
		BYTE	002H,012H,012H,012H,002H,012H,002H,002H
		BYTE	002H,012H,002H,012H,002H,012H
;
		BYTE	010H,002H,000H
;
		BYTE	010H,000H,010H,010H,010H,010H,002H,010H
		BYTE	012H,002H,002H,012H,002H
;
;
		BYTE	002H,002H
;
;// 03.08.29 //;
;// 03.08.29 //RCKXD1		EQU	$               ;                        <RMXCPT>
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	000H
;// 03.08.29 //		BYTE	000H,001H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,001H,000H,000H,001H,000H,000H,001H
;// 03.08.29 //		BYTE	000H,001H,000H,000H,001H,000H,001H,001H
;// 03.08.29 //		BYTE	000H,001H,000H,001H,000H,001H,000H,001H
;// 03.08.29 //		BYTE	000H,001H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,001H
;// 03.08.29 //		BYTE	000H,001H,000H,000H,000H,000H,000H,001H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,001H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,001H,000H,000H,000H,001H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,001H
;// 03.08.29 //		BYTE	000H,001H,000H,001H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,001H,000H,000H,000H,000H,001H,000H
;// 03.08.29 //		BYTE	000H,001H,001H,001H,000H,001H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,001H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	001H,000H,001H,001H,001H,001H,000H,001H
;// 03.08.29 //		BYTE	001H,000H,001H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //RCKYD1		EQU	$               ;                        <RMYCPT>
;// 03.08.29 //		BYTE	002H
;// 03.08.29 //		BYTE	002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //;
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,000H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,002H,002H
;// 03.08.29 //		BYTE	002H,002H,002H,002H,002H,002H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,002H,000H
;// 03.08.29 //;
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.08.29 //		BYTE	002H,002H,000H
;// 03.08.29 //;
;
DDOPPDT		EQU	$		; (GDRBF0)
		WORD	00816H
		WORD	00816H
;// 03.05.24 //		WORD	00AA8H
;// 03.05.24 //		WORD	00AA8H
		WORD	00000H,00000H,00000H,00000H
;
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,005CCH
		WORD	005D4H,00BB6H,00B86H,00000H,00000H,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H
;
;			   0L    1ER     1L     1R     2L     17    3Ld    3Lu   3R 
		WORD	00000H,00000H,00DE8H,00B98H,014CEH,00000H,01C50H,0FFFFH,01466H
;			   5L    1FR     6L     6R     7L     7R      8     9L 
		WORD	00000H,01AB6H,00B98H,01AB6H,0040EH,09C0CH,01530H,00A98H
;// 03.05.24 //		WORD	01466H,0091EH,00816H,0069EH,00A1AH,09C0CH,0142CH,00A98H
;			    A      B     CL     CR    1BL    1BR    1CL    1CR
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00816H,00DE8H
;			  1EL    20R    10L    12R     11    12L    13L    14L
		WORD	00000H,00000H,00AA8H,00000H,009ACH,00000H,00000H,00000H
;                         15L    15R    DL      FL     19    14R   16R     21L
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,0041AH
;			  22L    22R    18R    1AR     EL    ER    1FL     23L
		WORD	00000H,0091EH,009ACH,00000H,00000H,00000H,007AAH,00000H
;			  24L    24R    25L    25R    26L    26R 
		WORD	00000H,00000H,00000H,00000H,00000H,00000H
;
;                         OP1    OP2    OP3
		WORD	00000H,00000H,00000H
;
;			  H1     H2     H3     H4     H5     H6     H7     H8 
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			  H9     HA     HB     HC     HD  
		WORD	00000H,00000H,00000H,00000H,00000H
;
;			  27L    20L
		WORD	00000H,00000H
;
DJSNDD		EQU	$		; danjyon sound<BGM> data    <SOUND0>
		BYTE	0FFH
		BYTE	007H
		BYTE	014H,010H,010H,010H
;
		BYTE	012H,012H,011H,011H,011H,011H,011H,0F2H
		BYTE	0F2H,0F2H,0F2H,018H,01BH,012H,012H,016H
		BYTE	012H,012H,016H,016H,012H,012H,012H,012H
		BYTE	012H,012H,012H,012H,012H,012H,010H,016H
		BYTE	016H,016H,016H,016H,016H,016H,018H,016H
		BYTE	012H,012H,012H,012H,003H,011H,016H,016H
		BYTE	01CH,016H,01BH,012H,012H,012H
;
		BYTE	00EH,012H,0F2H,0F2H,0F2H,012H,0F2H,0F2H,0F2H
		BYTE	018H,017H,00EH,0F2H,0F2H,0F2H,0F2H,0F2H
		BYTE	018H,018H,012H,012H,018H,018H,0F2H,0F2H
		BYTE	01BH,01BH,017H,012H,00EH,012H,018H,018H
  		BYTE	018H,01BH,012H,017H,0F2H,012H,018H,0F2H
 		BYTE	017H,017H,00EH,018H,012H,012H,0F2H,012H
		BYTE	012H,012H,012H,012H,01BH,012H
;
		BYTE	0FFH,0FFH,0FFH
;
		BYTE	016H,016H,016H,016H,018H,015H,01BH,003H
		BYTE	018H,01BH,012H,010H,012H
;
;
		BYTE	012H,01BH
;
;// 03.07.26 //GWPCKD		EQU	$		; ground warp check room
;// 03.07.26 //		WORD	000F9H,00182H,000F3H,00040H,00054H,00074H,0010AH,0010BH
;
;
;
;
;// 03.09.30 //		STRMDT		EQU	$		; start room no.     <RMXYCT>
;// 03.09.30 //				WORD	00104H
;// 03.09.30 //		;			  4LR
;// 03.09.30 //				WORD	00104H
;// 03.09.30 //				WORD	00012H,00060H,00061H,00062H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	000F0H,000F1H,000C9H,00084H,00085H,00083H,00063H,000F2H
;// 03.09.30 //				WORD	000F3H,000F4H,000F5H,000E3H,000E2H,000F8H,000E8H,00023H
;// 03.09.30 //				WORD	000FBH,000EBH,000D5H,00024H,000FDH,000EDH,000FEH,000EEH
;// 03.09.30 //				WORD	000FFH,000EFH,000DFH,000F9H,000FAH,000EAH,000E0H,00028H
;// 03.09.30 //				WORD	0004AH,00098H,00056H,00057H,00058H,00059H,000E1H,0000EH
;// 03.09.30 //				WORD	000E6H,000E7H,000E4H,000E5H,00055H,00077H,000DBH,000D6H
;// 03.09.30 //				WORD	00010H,0000CH,00008H,0002FH,0003CH,0002CH,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;			   0L    1ER     1L     1R     2L     17   3Ld
;// 03.09.30 //				WORD	00100H,0011EH,00101H,00101H,00102H,00117H,00103H
;// 03.09.30 //		STRMD0		EQU	$
;// 03.09.30 //		;			  3Lu     3R
;// 03.09.30 //				WORD	00103H,00103H
;// 03.09.30 //		;			   5L    1FR     6L     6R     7L     7R      8     9L
;// 03.09.30 //				WORD	00105H,0011FH,00106H,00106H,00107H,00107H,00108H,00109H
;// 03.09.30 //		;			    A      B     CL     CR    1BL    1BR    1CL    1CR     
;// 03.09.30 //				WORD	0010AH,0010BH,0010CH,0010CH,0011BH,0011BH,0011CH,0011CH		
;// 03.09.30 //		;                         1EL     20    10L    12R     11    12L    13L    14L
;// 03.09.30 //				WORD	0011EH,00120H,00110H,00112H,00111H,00112H,00113H,00114H
;// 03.09.30 //		;                         15L    15R     DL     FL     19    14R    16R    21L
;// 03.09.30 //				WORD	00115H,00115H,0010DH,0010FH,00119H,00114H,00116H,00121H
;// 03.09.30 //		;			  22L    22R    18R    1AR     EL     ER    1FL    23L
;// 03.09.30 //				WORD	00122H,00122H,00118H,0011AH,0010EH,0010EH,0011FH,00123H
;// 03.09.30 //		;			  24L    24R    25L    25R    26L    26R
;// 03.09.30 //				WORD	00124H,00124H,00125H,00125H,00126H,00126H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;							     OP1    OP2    OP3 			
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00080H,00051H,00030H
;// 03.09.30 //		;
;// 03.09.30 //		;			  H1     H2     H3     H4     H5     H6     H7     H8
;// 03.09.30 //				WORD	00058H,00067H,00068H,00056H,000E1H,00000H,00018H,00055H
;// 03.09.30 //		;			  H9     HA     HB     HC     HD
;// 03.09.30 //				WORD	000E3H,000E2H,0002FH,00011H,00003H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		ISCTDT		EQU	$		; scroll limit data  <SCVU>
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	003H,002H,003H,003H,004H,004H,004H,005H	; chapel
;// 03.09.30 //				BYTE	00DH,00CH,00DH,00DH,001H,000H,001H,001H	; shiro-0
;// 03.09.30 //				BYTE	00DH,00CH,00DH,00DH,002H,002H,002H,003H	;      -1
;// 03.09.30 //				BYTE	00DH,00CH,00DH,00DH,004H,004H,004H,005H	;      -2
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,000H,000H,000H,001H ; doukutu -L
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,003H,002H,003H,003H ; doukutu -R
;// 03.09.30 //				BYTE	019H,018H,019H,019H,012H,012H,012H,013H ; shinden
;// 03.09.30 //				BYTE	011H,010H,011H,011H,008H,008H,008H,009H ; desert sindn-0
;// 03.09.30 //				BYTE	011H,010H,011H,011H,00BH,00AH,00BH,00BH ;	      -1
;// 03.09.30 //				BYTE	011H,010H,011H,011H,006H,006H,006H,007H ;             -2
;// 03.09.30 //				BYTE	00DH,00CH,00DH,00DH,006H,006H,006H,007H ;	      -3
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,005H,005H,005H,006H ; sontyo-L
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,006H,006H,006H,007H ; sontyo-R
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,009H,009H,009H,00AH ; futago-L
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,00AH,00AH,00AH,00BH ; futago-R
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,006H,006H,006H,007H ; akuma no ido
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,005H,004H,005H,005H ; kirikabu no naka
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,010H,010H,010H,011H ; urayama tunagi doukutu -D
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,011H,010H,011H,011H ; urayama tunagi doukutu -U
;// 03.09.30 //				BYTE	005H,004H,005H,005H,007H,006H,007H,007H ; kameiwa danjon -1   
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,016H,016H,016H,017H ; urayama nise deguchi -D
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,017H,016H,017H,017H ; urayama nise deguchi -U
;// 03.09.30 //				BYTE	01BH,01AH,01BH,01BH,00AH,00AH,00AH,00BH ; kameiwa danjon -2		
;// 03.09.30 //				BYTE	005H,004H,005H,005H,009H,008H,009H,009H ;                -3
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,01AH,01AH,01AH,01BH ; otoshianatunagi -D 
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,01AH,01AH,01AH,01BH ; otoshianatunagi -U
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,01DH,01DH,01DH,01EH ; uzumaki-D 
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,01DH,01CH,01DH,01DH ; uzumaki-U
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,01FH,01EH,01FH,01FH ; migisita-hazure 
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,01EH,01EH,01EH,01FH ; migisita-start
;// 03.09.30 //				BYTE	01BH,01AH,01BH,01BH,01EH,01EH,01EH,01FH ; migisita-atatri
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,012H,012H,012H,013H ; meganeiwa -LD
;// 03.09.30 //				BYTE	01FH,01EH,01FH,01FH,014H,014H,014H,015H ; meganeiwa -RD
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,014H,014H,014H,015H ; meganeiwa -U
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,000H,000H,000H,001H ; tower of shisai
;// 03.09.30 //				BYTE	005H,004H,005H,005H,010H,010H,010H,011H ; ura hokora danjon 
;// 03.09.30 //				BYTE	009H,008H,009H,009H,014H,014H,014H,015H ; ura shinden 
;// 03.09.30 //				BYTE	013H,012H,013H,013H,010H,010H,010H,011H ; ura numa danjon
;// 03.09.30 //				BYTE	00BH,00AH,00BH,00BH,00CH,00CH,00CH,00DH ; ura mori in-1
;// 03.09.30 //				BYTE	00BH,00AH,00BH,00BH,00EH,00EH,00EH,00FH ;            -2
;// 03.09.30 //				BYTE	00BH,00AH,00BH,00BH,010H,010H,010H,011H ;            -3 
;// 03.09.30 //				BYTE	00BH,00AH,00BH,00BH,012H,012H,012H,013H ;            -4
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,002H,002H,002H,003H ; mori no ki no naka
;// 03.09.30 //				BYTE	001H,000H,001H,001H,01DH,01CH,01DH,01DH ; ura mizuumi
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,00CH,00CH,00CH,00DH ; doukutu2-L
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,00FH,00EH,00FH,00FH ; doukutu2-R
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,008H,008H,008H,009H ; Mt.jiji house-L
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,00AH,00AH,00AH,00BH ; Mt.jiji house-R
;// 03.09.30 //				BYTE	00BH,00AH,00BH,00BH,00AH,00AH,00AH,00BH ; castle reverse
;// 03.09.30 //				BYTE	00FH,00EH,00FH,00FH,00EH,00EH,00EH,00FH ; Mt.tower
;// 03.09.30 //				BYTE	01BH,01AH,01BH,01BH,016H,016H,016H,017H ; machi danjon
;// 03.09.30 //				BYTE	01BH,01AH,01BH,01BH,00DH,00CH,00DH,00DH ; kameiwa danjon -0
;// 03.09.30 //				BYTE	003H,002H,003H,003H,000H,000H,000H,001H ; piramiddo iriguchi
;// 03.09.30 //				BYTE	001H,000H,001H,001H,018H,018H,018H,019H ; ura Mt.tower-fainal
;// 03.09.30 //				BYTE	001H,000H,001H,001H,011H,010H,011H,011H ; haka migi dai yousei doukutu
;// 03.09.30 //				BYTE	005H,004H,005H,005H,01FH,01EH,01FH,01FH ; takara no ido no naka
;// 03.09.30 //				BYTE	007H,006H,007H,007H,019H,018H,019H,019H ; ura yama futtobashi iwa -in
;// 03.09.30 //				BYTE	005H,004H,005H,005H,018H,018H,018H,019H ;                         -out
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	021H,020H,021H,021H,000H,000H,000H,001H	;  0L
;// 03.09.30 //				BYTE	023H,022H,023H,023H,01DH,01DH,01DH,01EH	;  1ER
;// 03.09.30 //				BYTE	021H,020H,021H,021H,002H,002H,002H,003H	;  1L
;// 03.09.30 //				BYTE	021H,020H,021H,021H,003H,003H,003H,004H	;  1R
;// 03.09.30 //				BYTE	021H,020H,021H,021H,004H,004H,004H,005H	;  2L
;// 03.09.30 //				BYTE	023H,022H,023H,023H,00FH,00EH,00FH,00FH	;  17
;// 03.09.30 //				BYTE	021H,020H,021H,021H,006H,006H,006H,007H	;  3Ld
;// 03.09.30 //				BYTE	021H,020H,021H,021H,006H,006H,006H,007H	;  3Lu
;// 03.09.30 //				BYTE	021H,020H,021H,021H,007H,007H,007H,008H	;  3R
;// 03.09.30 //				BYTE	021H,020H,021H,021H,00AH,00AH,00AH,00BH	;  5L
;// 03.09.30 //				BYTE	023H,022H,023H,023H,01FH,01FH,01FH,020H	;  1FR
;// 03.09.30 //				BYTE	021H,020H,021H,021H,00CH,00CH,00CH,00DH	;  6L
;// 03.09.30 //				BYTE	021H,020H,021H,021H,00DH,00DH,00DH,00EH	;  6R
;// 03.09.30 //				BYTE	021H,020H,021H,021H,00EH,00EH,00EH,00FH	;  7L
;// 03.09.30 //				BYTE	021H,020H,021H,021H,00FH,00FH,00FH,010H	;  7R
;// 03.09.30 //				BYTE	021H,020H,021H,021H,010H,010H,010H,011H	;  8
;// 03.09.30 //				BYTE	021H,020H,021H,021H,012H,012H,012H,013H	;  9L
;// 03.09.30 //				BYTE	021H,020H,021H,021H,014H,014H,014H,015H	;  A
;// 03.09.30 //				BYTE	021H,020H,021H,021H,016H,016H,016H,017H	;  B
;// 03.09.30 //				BYTE	021H,020H,021H,021H,018H,018H,018H,019H	;  CL
;// 03.09.30 //				BYTE	021H,020H,021H,021H,019H,019H,019H,01AH	;  CR
;// 03.09.30 //				BYTE	023H,022H,023H,023H,016H,016H,016H,017H	;  1BL
;// 03.09.30 //				BYTE	023H,022H,023H,023H,017H,017H,017H,018H	;  1BR
;// 03.09.30 //				BYTE	023H,022H,023H,023H,018H,018H,018H,019H	;  1CL
;// 03.09.30 //				BYTE	023H,022H,023H,023H,019H,019H,019H,019H ;  1CR
;// 03.09.30 //				BYTE	023H,022H,023H,023H,01CH,01CH,01CH,01DH	;  1EL
;// 03.09.30 //				BYTE	025H,024H,025H,025H,001H,000H,001H,001H	;  20
;// 03.09.30 //				BYTE	023H,022H,023H,023H,000H,000H,000H,001H	;  10L
;// 03.09.30 //				BYTE	023H,022H,023H,023H,005H,005H,005H,006H	;  12R
;// 03.09.30 //				BYTE	023H,022H,023H,023H,002H,002H,002H,003H	;  11
;// 03.09.30 //				BYTE	023H,022H,023H,023H,004H,004H,004H,005H	;  12L
;// 03.09.30 //				BYTE	023H,022H,023H,023H,006H,006H,006H,007H	;  13L
;// 03.09.30 //				BYTE	023H,022H,023H,023H,008H,008H,008H,009H	;  14L
;// 03.09.30 //				BYTE	023H,022H,023H,023H,00AH,00AH,00AH,00BH	;  15L
;// 03.09.30 //				BYTE	023H,022H,023H,023H,00BH,00BH,00BH,00CH ;  15R
;// 03.09.30 //				BYTE	021H,020H,021H,021H,01AH,01AH,01AH,01BH ;  DL
;// 03.09.30 //				BYTE	021H,020H,021H,021H,01EH,01EH,01EH,01FH ;  FL
;// 03.09.30 //				BYTE	023H,022H,023H,023H,012H,012H,012H,013H ;  19
;// 03.09.30 //				BYTE	023H,022H,023H,023H,009H,009H,009H,00AH ;  14R
;// 03.09.30 //				BYTE	023H,022H,023H,023H,00DH,00DH,00DH,00EH ;  16R
;// 03.09.30 //				BYTE	025H,024H,025H,025H,002H,002H,002H,003H ;  21L
;// 03.09.30 //				BYTE	025H,024H,025H,025H,004H,004H,004H,005H ;  22L
;// 03.09.30 //				BYTE	025H,024H,025H,025H,005H,005H,005H,006H ;  22R
;// 03.09.30 //				BYTE	023H,022H,023H,023H,011H,011H,011H,012H ;  18R
;// 03.09.30 //				BYTE	023H,022H,023H,023H,015H,015H,015H,016H ;  1AR
;// 03.09.30 //				BYTE	021H,020H,021H,021H,01CH,01CH,01CH,01DH ;  EL
;// 03.09.30 //				BYTE	021H,020H,021H,021H,01DH,01DH,01DH,01EH ;  ER
;// 03.09.30 //				BYTE	023H,022H,023H,023H,01EH,01EH,01EH,01FH ;  1FL
;// 03.09.30 //				BYTE	025H,024H,025H,025H,006H,006H,006H,007H ;  23L
;// 03.09.30 //				BYTE	025H,024H,025H,025H,008H,008H,008H,009H ;  24L
;// 03.09.30 //				BYTE	025H,024H,025H,025H,009H,009H,009H,00AH ;  24R
;// 03.09.30 //				BYTE	025H,024H,025H,025H,00AH,00AH,00AH,00BH ;  25L
;// 03.09.30 //				BYTE	025H,024H,025H,025H,00BH,00BH,00BH,00CH ;  25R
;// 03.09.30 //				BYTE	025H,024H,025H,025H,00CH,00CH,00CH,00DH ;  26L
;// 03.09.30 //				BYTE	025H,024H,025H,025H,00DH,00DH,00DH,00EH ;  26R
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //				BYTE	021H,020H,021H,021H,009H,009H,009H,00AH
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	010H,010H,010H,011H,001H,000H,001H,001H ;OP rouya
;// 03.09.30 //				BYTE	00BH,00AH,00BH,00BH,002H,002H,002H,003H ;OP ooza
;// 03.09.30 //				BYTE	006H,006H,006H,007H,000H,000H,000H,001H ;OP sisai no heya 
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	00AH,00AH,00AH,00BH,011H,010H,011H,011H ; ura mori hole-1 
;// 03.09.30 //				BYTE	00CH,00CH,00CH,00DH,00EH,00EH,00EH,00FH ;              -2 
;// 03.09.30 //				BYTE	00CH,00CH,00CH,00DH,011H,010H,011H,011H ;              -3 
;// 03.09.30 //				BYTE	00AH,00AH,00AH,00BH,00DH,00CH,00DH,00DH ;              -4 
;// 03.09.30 //				BYTE	01CH,01CH,01CH,01DH,003H,002H,003H,003H ; mori no ki no naka 
;// 03.09.30 //				BYTE	000H,000H,000H,001H,001H,000H,001H,001H ; piramiddo ganon 
;// 03.09.30 //				BYTE	003H,002H,003H,003H,010H,010H,010H,011H ; haka migi doukutu
;// 03.09.30 //				BYTE	00AH,00AH,00AH,00BH,00BH,00AH,00BH,00BH ; castle reverse hole 
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,007H,006H,007H,007H ; koakuma no ido 
;// 03.09.30 //				BYTE	01DH,01CH,01DH,01DH,004H,004H,004H,005H ; kirikabu no naka 
;// 03.09.30 //				BYTE	005H,004H,005H,005H,01EH,01EH,01EH,01FH ; takara no ido nka
;// 03.09.30 //				BYTE	003H,002H,003H,003H,003H,002H,003H,003H ; kyoukai sita chikadou
;// 03.09.30 //				BYTE	001H,000H,001H,001H,006H,006H,006H,007H ; anaochi hijyou room
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		ISCHDT		EQU	$		; sccH               <SCCH>
;// 03.09.30 //				WORD	00900H
;// 03.09.30 //				WORD	00900H
;// 03.09.30 //				WORD	00480H,00100H,00280H,00400H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00000H,00300H,01280H,00880H,00B00H,00600H,00600H,00500H
;// 03.09.30 //				WORD	00600H,00900H,00A00H,00600H,00500H,01080H,01100H,00700H
;// 03.09.30 //				WORD	01680H,01700H,00A00H,00900H,01A80H,01B00H,01D00H,01D00H
;// 03.09.30 //				WORD	01F00H,01E80H,01E80H,01200H,01400H,01400H,00000H,01080H
;// 03.09.30 //				WORD	01480H,01000H,00C00H,00E00H,01000H,01200H,00200H,01D00H
;// 03.09.30 //				WORD	00C00H,00F00H,00800H,00A80H,00A00H,00E80H,01680H,00D00H
;// 03.09.30 //				WORD	00000H,01880H,01100H,01F00H,01900H,01800H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;			   0L    1ER     1L     1R     2L     17    3Ld    3Lu     3R
;// 03.09.30 //				WORD	00000H,01D00H,00200H,00300H,00400H,00F00H,00600H,00600H,00700H
;// 03.09.30 //		;			   5L    1FR     6L     6R     7L     7R      8     9L
;// 03.09.30 //				WORD	00A00H,01F00H,00C00H,00D00H,00E00H,00F00H,01000H,01200H
;// 03.09.30 //		;			    A      B     CL     CR    1BL    1BR    1CL    1CR
;// 03.09.30 //				WORD	01400H,01680H,01800H,01900H,01600H,01700H,01800H,01900H
;// 03.09.30 //		;			  1EL     20    10L    12R    11     12L    13L    14L
;// 03.09.30 //		  		WORD	01C00H,00100H,00000H,00500H,00200H,00400H,00600H,00800H
;// 03.09.30 //		;			  15L    15R     DL     FL    19     14R    16R    21L
;// 03.09.30 //		 		WORD	00A00H,00B00H,01A00H,01E00H,01280H,00900H,00D00H,00200H
;// 03.09.30 //		;			  22L    22R    18R    1AR    EL      ER    1FL    23L
;// 03.09.30 //				WORD	00400H,00500H,01100H,01500H,01C00H,01D00H,01E00H,00600H
;// 03.09.30 //		;			  24L    24R    25L    25R    26L    26R
;// 03.09.30 //				WORD	00800H,00900H,00A00H,00B00H,00C00H,00D00H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;							     OP1    OP2    OP3 			
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00100H,00280H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;			  H1     H2     H3     H4     H5     H6     H7     H8
;// 03.09.30 //				WORD	01100H,00E00H,01088H,00D00H,00300H,00100H,01000H,00B00H
;// 03.09.30 //		;			  H9     HA     HB     HC     HD
;// 03.09.30 //				WORD	00700H,00400H,01E00H,00300H,00600H
;// 03.09.30 //		;
;// 03.09.30 //		ISCVDT		EQU	$		; sccV               <SCCV>
;// 03.09.30 //				WORD	02110H
;// 03.09.30 //				WORD	02110H
;// 03.09.30 //				WORD	00310H,00D10H,00D10H,00D10H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	01F10H,01F10H,01910H,01110H,01110H,01110H,00D10H,01F10H
;// 03.09.30 //				WORD	01F10H,01F10H,01F10H,01D10H,01D10H,01F10H,01D10H,00510H
;// 03.09.30 //				WORD	01F10H,01D10H,01B10H,00510H,01F10H,01D10H,01F10H,01D10H
;// 03.09.30 //				WORD	01F10H,01D10H,01B10H,01F10H,01F10H,01D10H,01D10H,00510H
;// 03.09.30 //				WORD	00910H,01310H,00B10H,00B10H,00B10H,00B10H,01D10H,00110H
;// 03.09.30 //				WORD	01D10H,01D10H,01D10H,01D10H,00B10H,00F10H,01B10H,01B10H
;// 03.09.30 //				WORD	00310H,00110H,00110H,00510H,00710H,00510H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //				WORD	02110H,02310H,02110H,02110H,02110H,02310H,02110H,02000H,02110H
;// 03.09.30 //				WORD	02110H,02310H,02110H,02110H,02110H,02110H,02110H,02110H
;// 03.09.30 //				WORD	02110H,02110H,02110H,02110H,02310H,02310H,02310H,02310H
;// 03.09.30 //				WORD	02310H,02510H,02310H,02310H,02310H,02310H,02310H,02310H
;// 03.09.30 //				WORD	02310H,02310H,02110H,02110H,02310H,02310H,02310H,02510H
;// 03.09.30 //				WORD	02510H,02510H,02310H,02310H,02110H,02110H,02310H,02510H
;// 03.09.30 //				WORD	02510H,02510H,02510H,02510H,02510H,02510H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;							     OP1    OP2    OP3 			
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,01010H,00B10H,00610H
;// 03.09.30 //		;
;// 03.09.30 //		;			  H1     H2     H3     H4     H5     H6     H7     H8
;// 03.09.30 //				WORD	00A00H,00C00H,00C29H,00A00H,01C3DH,00010H,002CEH,00A10H
;// 03.09.30 //		;			  H9     HA     HB     HC     HD
;// 03.09.30 //				WORD	01D10H,01D10H,00510H,002ADH,00110H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		IYPSDT		EQU	$		; player Y-pos.      <PLYPS1>
;// 03.09.30 //				WORD	02178H
;// 03.09.30 //				WORD	021D8H
;// 03.09.30 //				WORD	003C0H,00DD8H,00DC0H,00DD8H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	01FD8H,01FC0H,019D8H,011D8H,011D8H,011D8H,00DD8H,01FD8H
;// 03.09.30 //				WORD	01FD8H,01FD8H,01FD8H,01DD8H,01DD8H,01FD8H,01DD8H,005D8H
;// 03.09.30 //				WORD	01FD8H,01DD8H,01BD8H,005D8H,01FC0H,01DD8H,01FC0H,01DD8H
;// 03.09.30 //				WORD	01FD8H,01DD8H,01BD8H,01FD8H,01FC0H,01DD8H,01DD8H,005D8H
;// 03.09.30 //				WORD	009D8H,013D8H,00BD8H,00BD8H,00BD8H,00BD8H,01DD8H,001D8H
;// 03.09.30 //				WORD	01DC0H,01DC0H,01DC0H,01DD8H,00BD8H,00FC0H,01BD8H,01BD8H
;// 03.09.30 //				WORD	003D8H,001D8H,001D8H,005D8H,007D8H,005D8H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;			   0L    1ER     1L     1R     2L     17    3Ld    3Lu     3R
;// 03.09.30 //				WORD	021D8H,023D8H,021D8H,021D8H,021D8H,023D8H,021D8H,02020H,021D8H
;// 03.09.30 //		;			   5L    1FR     6L     6R     7L     7R      8     9L
;// 03.09.30 //				WORD	021D8H,023D8H,021D8H,021D8H,021D8H,021D8H,021D8H,021D8H
;// 03.09.30 //		;			    A      B     CL     CR    1BL    1BR    1CL    1CR
;// 03.09.30 //				WORD	021C0H,021D8H,021D8H,021D8H,023C0H,023D8H,023D8H,023D8H
;// 03.09.30 //		;			  1EL     20    10L    12R    11     12L    13L    14L
;// 03.09.30 //				WORD	023D8H,025D8H,023D8H,023D8H,023D8H,023D8H,023D8H,023D8H
;// 03.09.30 //		;			  15L    15R     DL     FL    19     14R    16R    21L
;// 03.09.30 //				WORD	023D8H,023D8H,021D8H,021D8H,023D8H,023D8H,023D8H,025D8H
;// 03.09.30 //		;			  22L    22R    18R    1AR     EL    ER     1FL    23L
;// 03.09.30 //				WORD	025D8H,025D8H,023D8H,023D8H,021C0H,021C0H,023D8H,025D8H
;// 03.09.30 //		;			  24L    24R    25L    25R    26L    26R
;// 03.09.30 //				WORD	025D8H,025D8H,025D8H,025D8H,025D8H,025D8H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;							     OP1    OP2    OP3 			
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,01080H,00BA8H,00698H
;// 03.09.30 //		;
;// 03.09.30 //		;			  H1     H2     H3     H4     H5     H6     H7     H8 
;// 03.09.30 //				WORD	00A69H,00C68H,00C96H,00A68H,01CA9H,00089H,0033BH,00A96H
;// 03.09.30 //		;			  H9     HA     HB     HC     HD
;// 03.09.30 //				WORD    01D7DH,01D89H,00589H,0031AH,00197H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		IXPSDT		EQU	$		;        X-pos.      <PLXPS1>
;// 03.09.30 //				WORD	00978H
;// 03.09.30 //				WORD	00978H
;// 03.09.30 //				WORD	004F8H,00178H,002F8H,00478H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00078H,00378H,012F8H,008F8H,00B78H,00678H,00678H,00578H
;// 03.09.30 //				WORD	00678H,00978H,00A78H,00678H,00578H,010F8H,01178H,00778H
;// 03.09.30 //				WORD	016F8H,01778H,00A78H,00978H,01AF8H,01B78H,01D78H,01D78H
;// 03.09.30 //				WORD	01F78H,01EF8H,01EF8H,01278H,01478H,01478H,00078H,010F8H
;// 03.09.30 //				WORD	014F8H,01078H,00C78H,00E78H,01078H,01278H,00278H,01D78H
;// 03.09.30 //				WORD	00C78H,00F78H,00878H,00AF8H,00A78H,00EF8H,016F8H,00D78H
;// 03.09.30 //				WORD	00078H,018F8H,01178H,01F78H,01978H,01878H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00078H,01D78H,00278H,00378H,00478H,00F78H,00678H,00678H,00778H
;// 03.09.30 //				WORD	00A78H,01F78H,00C78H,00D78H,00E78H,00F78H,01078H,01278H
;// 03.09.30 //				WORD	01478H,016F8H,01878H,01978H,01678H,01778H,01878H,01978H
;// 03.09.30 //				WORD	01C78H,00178H,00078H,00578H,00278H,00478H,00678H,00878H
;// 03.09.30 //				WORD	00A78H,00B78H,01A78H,01E78H,012F8H,00978H,00D78H,00278H
;// 03.09.30 //				WORD	00478H,00578H,01178H,01578H,01C78H,01D78H,01E78H,00678H
;// 03.09.30 //				WORD	00878H,00978H,00A78H,00B78H,00C78H,00D78H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;							     OP1    OP2    OP3 			
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,001A8H,002F8H,00078H
;// 03.09.30 //		;
;// 03.09.30 //		;			  H1     H2     H3     H4     H5     H6     H7     H8
;// 03.09.30 //				WORD	01190H,00E80H,01100H,00D40H,00370H,0017FH,01073H,00B9FH
;// 03.09.30 //		;			  H9     HA     HB     HC     HD
;// 03.09.30 //				WORD	00778H,0047FH,01E61H,00393H,00677H
;// 03.09.30 //		;
;// 03.09.30 //		IUPCDT		EQU	$		; up   check data    <PYUPCT>
;// 03.09.30 //				WORD	00187H
;// 03.09.30 //				WORD	00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00074H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00187H,00187H,00187H
;// 03.09.30 //		;							     OP1    OP2    OP3 			
;// 03.09.30 //				WORD	00187H,00187H,00187H,00187H,00187H,00088H,00188H,00088H
;// 03.09.30 //		;
;// 03.09.30 //		;			  H1     H2     H3     H4     H5     H6     H7     H8
;// 03.09.30 //		;// 03.05.09 //		WORD	00084H,00076H,00068H,00070H,00080H,00078H,00183H,00000H
;// 03.09.30 //				WORD	00077H,00078H,000A1H,00077H,000B4H,00088H,00146H,00088H
;// 03.09.30 //		;			  H9     HA     HB     HC     HD
;// 03.09.30 //				WORD	00188H,00187H,00187H,00125H,00188H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		ILFCDT		EQU	$		; left               <PXLFCT>
;// 03.09.30 //				WORD	0017FH
;// 03.09.30 //				WORD	0017FH
;// 03.09.30 //				WORD	000FFH,0017FH,000FFH,0007FH
;// 03.09.30 //		;
;// 03.09.30 //				WORD	0007FH,0017FH,000FFH,000FFH,0017FH,0007FH,0007FH,0017FH
;// 03.09.30 //				WORD	0007FH,0017FH,0007FH,0007FH,0017FH,000FFH,0017FH,0017FH
;// 03.09.30 //				WORD	000FFH,0017FH,0007FH,0017FH,000FFH,0017FH,0017FH,0017FH
;// 03.09.30 //				WORD	0017FH,000FFH,000FFH,0007FH,0007FH,0007FH,0007FH,000FFH
;// 03.09.30 //				WORD	000FFH,0007FH,0007FH,0007FH,0007FH,0007FH,0007FH,0017FH
;// 03.09.30 //				WORD	0007FH,0017FH,0007FH,000FFH,0007FH,000FFH,000FFH,0017FH
;// 03.09.30 //				WORD	0007FH,000FFH,0017FH,0017FH,0017FH,0007FH,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //				WORD	0007FH,0017FH,0007FH,0017FH,0007FH,0017FH,0007FH,0007FH,0017FH
;// 03.09.30 //				WORD	0007FH,0017FH,0007FH,0017FH,0007FH,0017FH,0007FH,0007FH
;// 03.09.30 //				WORD	0007FH,000FFH,0007FH,0017FH,0007FH,0017FH,0007FH,0017FH
;// 03.09.30 //				WORD	0007FH,0017FH,0007FH,0017FH,0007FH,0007FH,0007FH,0007FH
;// 03.09.30 //				WORD	0007FH,0017FH,0007FH,0007FH,000FFH,0017FH,0017FH,0007FH
;// 03.09.30 //				WORD	0007FH,0017FH,0017FH,0017FH,0007FH,0017FH,0007FH,0007FH
;// 03.09.30 //				WORD	0007FH,0017FH,0007FH,0017FH,0007FH,0017FH,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;							     OP1    OP2    OP3 			
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,0017FH,000FFH,0007FH
;// 03.09.30 //		;
;// 03.09.30 //		;			  H1     H2     H3     H4     H5     H6     H7     H8
;// 03.09.30 //				WORD	0017FH,0007FH,00107H,0017FH,0017FH,0017FH,0007FH,0017FH
;// 03.09.30 //		;			  H9     HA     HB     HC     HD
;// 03.09.30 //				WORD	0017FH,0007FH,0007FH,0017FH,0007FH
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		BGCHPT		EQU	$		; BG. character pointer  <CHIKNO>
;// 03.09.30 //				BYTE	003H
;// 03.09.30 //				BYTE	003H
;// 03.09.30 //				BYTE	004H,004H,004H,004H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	006H,006H,005H,012H,012H,012H,012H,003H
;// 03.09.30 //				BYTE	003H,003H,003H,006H,006H,006H,006H,00DH
;// 03.09.30 //				BYTE	006H,006H,00DH,00DH,006H,006H,006H,006H
;// 03.09.30 //				BYTE	006H,006H,006H,006H,006H,006H,004H,008H
;// 03.09.30 //				BYTE	007H,00CH,009H,009H,009H,009H,006H,00BH
;// 03.09.30 //				BYTE	006H,006H,014H,014H,001H,005H,00AH,00DH
;// 03.09.30 //				BYTE	013H,00EH,006H,006H,006H,006H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //		;			 0L   1ER  1L   1R   2L   17  3Ld  3Lu   3R
;// 03.09.30 //				BYTE	003H,006H,003H,003H,003H,014H,003H,003H,003H
;// 03.09.30 //		;			 5L   1FR   6L   6R   7L   7R    8   9L
;// 03.09.30 //				BYTE	00FH,003H,003H,003H,003H,003H,003H,003H
;// 03.09.30 //		;			  A    B   CL   CR   1BL  1BR  1CL  1CR
;// 03.09.30 //				BYTE	006H,008H,006H,006H,006H,006H,003H,003H
;// 03.09.30 //		;			 1EL  20   10L  12R  11   12L  13L  14L
;// 03.09.30 //				BYTE	006H,006H,003H,014H,011H,014H,001H,006H
;// 03.09.30 //		;			 15L  15R  DL   FL   19   14R  16R  21L
;// 03.09.30 //		 		BYTE	006H,006H,008H,003H,00AH,006H,012H,011H
;// 03.09.30 //		;			 22L  22R  18R  1AR   EL   ER  1FL  23L
;// 03.09.30 //				BYTE	011H,011H,003H,00FH,014H,014H,003H,006H
;// 03.09.30 //		;			 24L  24R  25L  25R  26L  26R
;// 03.09.30 //				BYTE	006H,006H,006H,006H,006H,006H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;						  OP1  OP2  OP3
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,001H,004H,002H
;// 03.09.30 //		;
;// 03.09.30 //		;			 H1   H2   H3   H4   H5   H6   H7   H8  
;// 03.09.30 //				BYTE	009H,009H,009H,009H,006H,013H,006H,001H
;// 03.09.30 //		;			 H9   HA   HB   HC   HD
;// 03.09.30 //				BYTE	006H,006H,006H,001H,006H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		FLNODT		EQU	$		; floor no. data         <FLORNO>
;// 03.09.30 //				BYTE	000H
;// 03.09.30 //				BYTE	000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,0FFH,0FFH,0FFH,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,0FFH,0FFH,000H,001H,0FFH
;// 03.09.30 //				BYTE	000H,001H,0FEH,0FFH,000H,001H,000H,001H
;// 03.09.30 //				BYTE	0FFH,000H,001H,000H,000H,001H,001H,000H
;// 03.09.30 //				BYTE	000H,000H,0FFH,0FFH,0FFH,0FFH,0FFH,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,0FFH,001H,0FFH,000H
;// 03.09.30 //				BYTE	000H,001H,0FFH,0FFH,0FFH,0FFH,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,0FFH,0FFH,0FFH
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,001H,0FFH,0FFH
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		DJNPTD		EQU	$		; danjyon map pointer    <DJNNO>
;// 03.09.30 //				BYTE	0FFH
;// 03.09.30 //				BYTE	0FFH
;// 03.09.30 //				BYTE	000H,002H,002H,002H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	0FFH,0FFH,004H,006H,006H,006H,006H,0FFH
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,018H
;// 03.09.30 //				BYTE	0FFH,0FFH,018H,018H,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,008H,00AH
;// 03.09.30 //				BYTE	00CH,00EH,010H,010H,010H,010H,0FFH,012H
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,014H,016H,018H
;// 03.09.30 //				BYTE	0FFH,01AH,0FFH,0FFH,0FFH,0FFH,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //		;			 0L   1ER  1L   1R   2L   17  3Ld  3Lu   3R  
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;			 5L   1FR   6L   6R   7L   7R    8   9L
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;			  A    B   CL   CR   1BL  1BR  1CL  1CR
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;			 1EL  20   10L  12R  11   12L  13L  14L
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;			 15L  15R  DL   FL   19   14R  16R  21L
;// 03.09.30 //		  		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		; 			 22L  22R  18R   1AR  EL   ER  1FL  23L
;// 03.09.30 //		 		BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;			 24L  24R  25L  25R  26L  26R
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;						  OP1  OP2  OP3
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;
;// 03.09.30 //		;			 H1   H2   H3   H4   H5   H6   H7   H8  
;// 03.09.30 //				BYTE	010H,010H,010H,010H,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;			 H9   HA   HB   HC   HD
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,000H,0FFH
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		INDRDT		EQU	$		; player in-door data    <PWORK6>
;// 03.09.30 //				BYTE	000H
;// 03.09.30 //				BYTE	001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;
;// 03.09.30 //		;			 0L   1ER  1L   1R   2L   17  3Ld  3Lu   3R 
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;			 5L   1FR   6L   6R   7L   7R    8   9L
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;			  A    B   CL   CR   1BL  1BR  1CL  1CR
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;			 1EL  20   10L  12R  11   12L  13L  14L
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;			 15L  15R  DL   FL   19   14R  16R  21L
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;			 22L  22R  18R  1AR   EL   ER  1FL  23L
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;			 24L  24R  25L  25R  26L  26R
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,001H,001H,001H
;// 03.09.30 //		;						  OP1  OP2  OP3
;// 03.09.30 //				BYTE	001H,001H,001H,001H,001H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		;					    PC
;// 03.09.30 //		PBGMDT		EQU	$		; (000H) player BG. check mode data  <PLBGCKF>
;// 03.09.30 //				BYTE	000H
;// 03.09.30 //				BYTE	000H
;// 03.09.30 //				BYTE	001H,000H,001H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,001H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,001H,000H,001H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,011H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	001H,001H,001H,000H,000H,011H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	001H,000H,000H,000H,011H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,001H,001H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,011H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,001H,001H	
;// 03.09.30 //				BYTE	011H,001H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		;					    XY
;// 03.09.30 //		RCKXD0		EQU	$               ; (000H) room size              <RMCKXF,RMCKYF>
;// 03.09.30 //				BYTE	000H
;// 03.09.30 //				BYTE	000H
;// 03.09.30 //				BYTE	022H,002H,022H,022H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	022H,022H,020H,022H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,002H,022H,022H,000H
;// 03.09.30 //				BYTE	022H,002H,002H,000H,022H,022H,002H,022H
;// 03.09.30 //				BYTE	020H,020H,020H,022H,022H,022H,000H,022H
;// 03.09.30 //				BYTE	020H,020H,000H,000H,000H,002H,002H,000H
;// 03.09.30 //				BYTE	022H,022H,002H,022H,020H,022H,022H,002H
;// 03.09.30 //				BYTE	002H,022H,000H,020H,022H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,022H,002H,002H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	002H,020H,000H,002H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	002H,000H,000H,000H,000H,002H,002H,000H
;// 03.09.30 //				BYTE	002H,000H,002H,000H,020H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,002H,002H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,020H,022H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	002H,002H,022H,002H,002H,000H,002H,020H
;// 03.09.30 //				BYTE	000H,002H,020H,002H,000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		;					    XY
;// 03.09.30 //		RCKXD1		EQU	$               ; (000H)                       <RMXCPT>
;// 03.09.30 //				BYTE	002H
;// 03.09.30 //				BYTE	002H
;// 03.09.30 //				BYTE	002H,012H,002H,002H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	002H,012H,002H,002H,012H,002H,002H,012H
;// 03.09.30 //				BYTE	002H,012H,002H,002H,012H,002H,012H,012H
;// 03.09.30 //				BYTE	002H,012H,002H,012H,002H,012H,002H,012H
;// 03.09.30 //				BYTE	012H,002H,002H,002H,002H,002H,002H,002H
;// 03.09.30 //				BYTE	002H,002H,002H,002H,002H,002H,002H,012H
;// 03.09.30 //				BYTE	002H,012H,002H,002H,002H,002H,002H,012H
;// 03.09.30 //				BYTE	002H,002H,012H,012H,012H,002H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	002H,012H,002H,002H,002H,012H,002H,000H,002H
;// 03.09.30 //				BYTE	002H,012H,002H,002H,002H,002H,002H,002H
;// 03.09.30 //				BYTE	002H,002H,002H,002H,002H,002H,002H,012H
;// 03.09.30 //				BYTE	002H,012H,002H,012H,002H,002H,002H,002H
;// 03.09.30 //				BYTE	002H,012H,002H,002H,002H,012H,012H,002H
;// 03.09.30 //				BYTE	002H,012H,012H,012H,002H,012H,002H,002H
;// 03.09.30 //				BYTE	002H,012H,002H,012H,002H,012H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H,000H,010H,002H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	010H,000H,010H,010H,010H,010H,002H,010H
;// 03.09.30 //				BYTE	012H,002H,002H,012H,002H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		DDOPPDT		EQU	$		; (GDRBF0)
;// 03.09.30 //				WORD	00816H
;// 03.09.30 //				WORD	00816H
;// 03.09.30 //		;// 03.05.24 //		WORD	00AA8H
;// 03.09.30 //		;// 03.05.24 //		WORD	00AA8H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,005CCH
;// 03.09.30 //				WORD	005D4H,00BB6H,00B86H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;			   0L    1ER     1L     1R     2L     17    3Ld    3Lu   3R 
;// 03.09.30 //				WORD	00000H,00000H,00DE8H,00B98H,014CEH,00000H,01C50H,0FFFFH,01466H
;// 03.09.30 //		;			   5L    1FR     6L     6R     7L     7R      8     9L 
;// 03.09.30 //				WORD	00000H,01AB6H,00B98H,01AB6H,0040EH,09C0CH,01530H,00A98H
;// 03.09.30 //		;// 03.05.24 //		WORD	01466H,0091EH,00816H,0069EH,00A1AH,09C0CH,0142CH,00A98H
;// 03.09.30 //		;			    A      B     CL     CR    1BL    1BR    1CL    1CR
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00816H,00DE8H
;// 03.09.30 //		;			  1EL     20    10L    12R     11    12L    13L    14L
;// 03.09.30 //				WORD	00000H,00000H,00AA8H,00000H,009ACH,00000H,00000H,00000H
;// 03.09.30 //		;                         15L    15R    DL      FL     19    14R   16R     21L
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,0041AH
;// 03.09.30 //		;			  22L    22R    18R    1AR     EL    ER    1FL     23L
;// 03.09.30 //				WORD	00000H,0091EH,009ACH,00000H,00000H,00000H,007AAH,00000H
;// 03.09.30 //		;			  24L    24R    25L    25R    26L    26R 
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;                                                            OP1    OP2    OP3
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;			  H1     H2     H3     H4     H5     H6     H7     H8 
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			  H9     HA     HB     HC     HD  
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		DJSNDD		EQU	$		; danjyon sound<BGM> data    <SOUND0>
;// 03.09.30 //				BYTE	0FFH
;// 03.09.30 //				BYTE	007H
;// 03.09.30 //				BYTE	014H,010H,010H,010H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	012H,012H,011H,011H,011H,011H,011H,0F2H
;// 03.09.30 //				BYTE	0F2H,0F2H,0F2H,018H,01BH,012H,012H,016H
;// 03.09.30 //				BYTE	012H,012H,016H,016H,012H,012H,012H,012H
;// 03.09.30 //				BYTE	012H,012H,012H,012H,012H,012H,010H,016H
;// 03.09.30 //				BYTE	016H,016H,016H,016H,016H,016H,018H,016H
;// 03.09.30 //				BYTE	012H,012H,012H,012H,003H,011H,011H,016H
;// 03.09.30 //				BYTE	01CH,016H,01BH,012H,012H,012H,0FFH,0FFH
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	017H,012H,0F2H,0F2H,0F2H,012H,0F2H,0F2H,0F2H
;// 03.09.30 //				BYTE	018H,017H,017H,0F2H,0F2H,0F2H,0F2H,0F2H
;// 03.09.30 //				BYTE	018H,018H,012H,012H,018H,018H,0F2H,0F2H
;// 03.09.30 //				BYTE	01BH,01BH,017H,012H,017H,012H,018H,018H
;// 03.09.30 //		  		BYTE	018H,01BH,012H,017H,0F2H,012H,018H,0F2H
;// 03.09.30 //		 		BYTE	017H,017H,017H,018H,012H,012H,0F2H,012H
;// 03.09.30 //				BYTE	012H,012H,012H,012H,01BH,012H,0FFH,0FFH
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //				BYTE	0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH,0FFH
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	016H,016H,016H,016H,018H,015H,01BH,003H
;// 03.09.30 //				BYTE	018H,01BH,012H,010H,012H
;// 03.09.30 //		;
;
;
;
;
IIT1000		EQU	$
          	PHB
		PHK
		PLB			; (DBR) set
;
		LDA	#001H
		STA	<GMMODE		; game-mode (DANJYON) set
;
		LDA	!GOVRCFG
		BEQ	IIT1001		; gaove-over continue ?
;					; yes
		STZ	!GOVRCFG
		JMP	IIT1002
;
IIT1001		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	!GRNDNO
		STA	>GRNOBK		; ground no. push
;
		LDA	<DPMAIN
		STA	>DPMSBK		; DPMAIN & DPSUB push
;
		LDA	<SCCV2
		STA	>SCV2BK
		LDA	<SCCH2
		STA	>SCH2BK		; SCCH,V push
;
		LDA	<PLYPS1
		STA	>PLYPBK
		LDA	<PLXPS1
		STA	>PLXPBK		; Ground position push
;
		LDA	!PYUPCT
		STA	>UPCTBK
		LDA	!PXLFCT
		STA	>LFCTBK		; up,left check counter push
;
		LDA	<MPDTNO
		STA	>MPDNBK
		LDA	<SCRPNT
		STA	>SRPTBK		; Ground information push
		STZ	<MPDTNO
		STZ	<MPDTN1
;
		LDA	!SCVU+0
		STA	>SCVUBK+0
		LDA	!SCVU+2
		STA	>SCVUBK+2
		LDA	!SCVU+4
		STA	>SCVUBK+4
		LDA	!SCVU+6
		STA	>SCVUBK+6
;
		LDA	!SCKY00
		STA	>SCKYBK+0
		LDA	!SCKY10
		STA	>SCKYBK+2
		LDA	!SCKX00
		STA	>SCKXBK+0
		LDA	!SCKX10
		STA	>SCKXBK+2
;
		LDA	!UPSLCT
		STA	>USCTBK
		LDA	!DWSLCT
		STA	>DSCTBK
		LDA	!LFSLCT
		STA	>LSCTBK
		LDA	!RTSLCT
		STA	>RSCTBK
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		LDA	!CHARBK
		STA	>CHBKBK
		LDA	!CHIKNO
		STA	>CHNOBK
		LDA	!RBGCPT
		STA	>RBGPBK
		LDA	!ROBJCPT
		STA	>ROJPBK
IIT1002		EQU	$
		MEM16
		IDX16
		REP	#00110000B	; memory,index 16bit mode
;
;// 02.08.16 //		LDA	!GRNDNO
;// 02.08.16 //		STA	>GRNORM		; ground no. push
;// 02.08.16 //;
;// 02.08.16 //		LDA	<DPMAIN
;// 02.08.16 //		STA	>DPMSRM		; DPMAIN & DPSUB push
;// 02.08.16 //;
;// 02.08.16 //		LDA	<SCCV1
;// 02.08.16 //		STA	>SCV1RM
;// 02.08.16 //		LDA	<SCCH1
;// 02.08.16 //		STA	>SCH1RM
;// 02.08.16 //		LDA	<SCCV2
;// 02.08.16 //		STA	>SCV2RM
;// 02.08.16 //		LDA	<SCCH2
;// 02.08.16 //		STA	>SCH2RM		; SCCH,V push
;// 02.08.16 //;
;// 02.08.16 //		LDA	<PLYPS1
;// 02.08.16 //		STA	>PLYPRM
;// 02.08.16 //		LDA	<PLXPS1
;// 02.08.16 //		STA	>PLXPRM		; Ground position push
;// 02.08.16 //;
;// 02.08.16 //		LDA	!PYUPCT
;// 02.08.16 //		STA	>UPCTRM
;// 02.08.16 //		LDA	!PYDWCT
;// 02.08.16 //		STA	>DWCTRM
;// 02.08.16 //		LDA	!PXLFCT
;// 02.08.16 //		STA	>LFCTRM
;// 02.08.16 //		LDA	!PXRTCT
;// 02.08.16 //		STA	>RTCTRM		; up,dwon,left,right check counter push
;// 02.08.16 //;
;// 02.08.16 //		LDA	<MPDTNO
;// 02.08.16 //		STA	>MPDNRM
;// 02.08.16 //		LDA	<YWRITE
;// 02.08.16 //		STA	>YWTERM
;// 02.08.16 //		LDA	<XWRITE
;// 02.08.16 //		STA	>XWTERM
;// 02.08.16 //		LDA	<SCRPNT
;// 02.08.16 //		STA	>SRPTRM		; Ground information push
;// 02.08.16 //;
;// 02.08.16 //		LDA	!SCVU+0
;// 02.08.16 //		STA	>SCVURM+0
;// 02.08.16 //		LDA	!SCVU+2
;// 02.08.16 //		STA	>SCVURM+2
;// 02.08.16 //		LDA	!SCVU+4
;// 02.08.16 //		STA	>SCVURM+4
;// 02.08.16 //		LDA	!SCVU+6
;// 02.08.16 //		STA	>SCVURM+6
;// 02.08.16 //;
;// 02.08.16 //		LDA	!SCKY00
;// 02.08.16 //		STA	>SCKYRM+0
;// 02.08.16 //		LDA	!SCKY10
;// 02.08.16 //		STA	>SCKYRM+2
;// 02.08.16 //		LDA	!SCKX00
;// 02.08.16 //		STA	>SCKXRM+0
;// 02.08.16 //		LDA	!SCKX10
;// 02.08.16 //		STA	>SCKXRM+2
;
		STZ	!YUREXD
		STZ	!YUREYD
;
		STZ	!GOVRCFG	; game-over check flag off!!
		LDA	>OPMODE
		CMP	#jjsmv
		BEQ	IIT1004		; option (jiji) ?
;					; no
		LDA	!RESTSFG
		BEQ	IIT1005		; restart ?
;					; yes
IIT1004		EQU	$
		JMP	IIT0000
;
IIT1005		EQU	$
		LDA	!GOPOSF
		AND	#000FFH
		ASL	A
		TAX
		ASL	A
		ASL	A
;// 03.08.28 //		ASL	A
		TAY
;
		LDA	STRMDT,X
		STA	<RMXYCT		; init. room no.
		STA	!ERXYCT
;;;;;;;;		STA	<NXRMCT
;
		LDA	ISCVDT,X
		STA	<SCCV2
		STA	<SCCV1
		STA	!SSCCV2
		STA	!SSCCV1
		LDA	ISCHDT,X
		STA	<SCCH2
		STA	<SCCH1		; scroll count set
		STA	!SSCCH2
		STA	!SSCCH1
;
		LDA	>MODTBL0
		BEQ	IIT1010		; start demo ?
;					; no
		LDA	IYPSDT,X
		STA	<PLYPS1
		LDA	IXPSDT,X
		STA	<PLXPS1		; player position set
IIT1010		EQU	$
		LDA	IUPCDT,X
		STA	!PYUPCT
;// 03.01.30 //		LDA	IDNCDT,X
		INC	A
		INC	A
		STA	!PYDWCT
		LDA	ILFCDT,X
		STA	!PXLFCT
;// 03.01.30 //		LDA	IRTCDT,X
		INC	A
		INC	A
		STA	!PXRTCT		; up,dwon,left,right check counter set
;
		LDA	#001F8H
		STA	<PSCKRM		; Danjyon pos. check ram set
;
		LDA	DDOPPDT,X
		STA	!GDRBF0
		STZ	!GDRBF1
;
;
;// 03.08.28 //		LDA	ISCTDT+0,Y
;// 03.08.28 //		STA	!SCVU
;// 03.08.28 //		LDA	ISCTDT+2,Y
;// 03.08.28 //		STA	!SCVU1
;// 03.08.28 //		LDA	ISCTDT+4,Y
;// 03.08.28 //		STA	!SCVD
;// 03.08.28 //		LDA	ISCTDT+6,Y
;// 03.08.28 //		STA	!SCVD1
;// 03.08.28 //		LDA	ISCTDT+8,Y
;// 03.08.28 //		STA	!SCHL
;// 03.08.28 //		LDA	ISCTDT+10,Y
;// 03.08.28 //		STA	!SCHL1
;// 03.08.28 //		LDA	ISCTDT+12,Y
;// 03.08.28 //		STA	!SCHR
;// 03.08.28 //		LDA	ISCTDT+14,Y
;// 03.08.28 //		STA	!SCHR1
;
;
		LDA	#00000H
		STA	!SCKY00
		LDA	#00110H
		STA	!SCKY10
		LDA	#00000H
		STA	!SCKX00
		LDA	#00100H
		STA	!SCKX10		; scroll end check data init. set
;
;
		LDA	!GOPOSF
		AND	#000FFH
		TAX
;
		MEM8
		SEP	#00100000B	; memory 16bit mode
;
		LDA	ISCTDT+0,Y
		STA	!SCVU+1
		LDA	ISCTDT+1,Y
		STA	!SCVU1+1
		LDA	ISCTDT+2,Y
		STA	!SCVD+1
		LDA	ISCTDT+3,Y
		STA	!SCVD1+1
		LDA	ISCTDT+4,Y
		STA	!SCHL+1
		LDA	ISCTDT+5,Y
		STA	!SCHL1+1
		LDA	ISCTDT+6,Y
		STA	!SCHR+1
		LDA	ISCTDT+7,Y
		STA	!SCHR1+1
;
		STZ	!SCVU
		STZ	!SCVU1
		LDA	#010H
		STA	!SCVD
		STA	!SCVD1
		STZ	!SCHL
		STZ	!SCHL1
		STZ	!SCHR
		STZ	!SCHR1
;
;
		LDA	#002H
		CPX	#000H
		BEQ	IIT1040		; start ?
;					; no
		CPX	#(STRMD0-STRMDT)/2
		BEQ	IIT1040		;
;					;
		LDA	#000H
IIT1040		EQU	$
		STA	<PLMKCH		; init. player muki set
;
;// 02.12.07 //		LDA	OJCHPT,X
;// 02.12.07 //		STA	!CHARBK
;// 02.12.07 //		STA	!ROBJCPT
		LDA	BGCHPT,X
		STA	!CHIKNO
;// 02.12.07 //		STA	!RBGCPT
;
		LDA	DJSNDD,X
		STA	!SNDSFG0	; <sound0> set flag
		CMP	#003H
		BNE	IIT1050		; shiro-nukemichi ?
;					; yes
		LDA	>MODTBL0
		CMP	#002H
		BCC	IIT1050		; zen-han ?
;					; no
		LDA	#012H
		STA	!SNDSFG0
IIT1050		EQU	$
		LDA	FLNODT,X
		STA	<FLORNO		; init. floor no.
		LDA	DJNPTD,X
		STA	!DJNNO		; danjyon map pointer
		LDA	INDRDT,X
		STA	<PWORK6		; init player in-door data set
;
		LDA	PBGMDT,X
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	<PLBGCKF	; init player BG. check mode set
;// 03.08.29 //		LDA	CBGMDT,X
		LDA	PBGMDT,X
		AND	#00001111B
		STA	!CDBGCKF
;
		LDA	RCKXD0,X
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	<RMCKXF
;// 03.08.29 //		LDA	RCKYD0,X
		LDA	RCKXD0,X
		AND	#00001111B
		STA	<RMCKYF
;
		LDA	RCKXD1,X
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	<RMXCPT
;// 03.08.29 //		LDA	RCKYD1,X
		LDA	RCKXD1,X
		AND	#00001111B
		STA	<RMYCPT
;
		LDX	<RMXYCT
		CPX	#00100H
		BCC	IIT1070		; minka ?
;					; yes
		STZ	<FLORNO
IIT1070		EQU	$
		LDA	#080H
		STA	<KNCRXP
		STA	<KNCRYP
		LDA	#00FH
		STA	<PLMVKY		; Y player move key flag
		STA	<PLMVKY1	; X
		LDA	#0FFH
		STA	<PLZPS1
		STA	<PLZSPD
;
		MEM8
		IDX8
		SEP	#00110000B	; memory,index 8bit mode
;
		PLB			; (DBR) reset
;
		PHB
		LDA	#BANK DJINFTBL
		PHA
		PLB			; (DBR) set
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDX	#000H
IIT1080		EQU	$
		LDA	>DJNBDT+000H,X
		STA	BLKTBUF+000H,X
		LDA	>DJNBDT+080H,X
		STA	BLKTBUF+080H,X
		LDA	>DJNBDT+100H,X
		STA	BLKTBUF+100H,X
		LDA	>DJNBDT+180H,X
		STA	BLKTBUF+180H,X	; block data table set
;
		LDA	>DJNLDT+000H,X
		STA	LMPTBUF+000H,X
		LDA	>DJNLDT+080H,X
		STA	LMPTBUF+080H,X
		LDA	>DJNLDT+100H,X
		STA	LMPTBUF+100H,X	; lamp data table set
		INX
		INX
		CPX	#(3*080H)/3
		BNE	IIT1080		; set end ?
;					; yes
		LDX	#(16*16)/4-2
		LDA	#00000H
IIT1090		EQU	$
		STA	DJINFTBL+000H,X
		STA	DJINFTBL+040H,X
		STA	DJINFTBL+080H,X
		STA	DJINFTBL+0C0H,X
;
		STA	DJBITRM+000H,X
		STA	DJBITRM+040H,X
		STA	DJBITRM+080H,X
		STA	DJBITRM+0C0H,X
		STA	DJBITRM+100H,X
		STA	DJBITRM+140H,X
		STA	DJBITRM+180H,X
		STA	DJBITRM+1C0H,X
		STA	DJBITRM+200H,X
		STA	DJBITRM+240H,X
		DEX
		DEX
		BPL	IIT1090		; danjyon information clear end ?
;					; yes
		STA	>TAMAFLG	; tama-yuka flag off
		STZ	!SWYKPT		; swich-yuka flag off
;// 03.07.26 //		MEM16
;// 03.07.26 //		REP	#00100000B	; memory 16bit mode
;// 03.07.26 //;
;// 03.07.26 //		LDX	#004H
;// 03.07.26 //		LDA	<RMXYCT
;// 03.07.26 //		CMP	#000F2H
;// 03.07.26 //		BEQ	IIT1160		;
;// 03.07.26 //;					;
;// 03.07.26 //		LDX	#010H
;// 03.07.26 //IIT1120		EQU	$
;// 03.07.26 //		DEX
;// 03.07.26 //		DEX
;// 03.07.26 //		BMI	IIT1180		; check end ?
;// 03.07.26 //;					; yes
;// 03.07.26 //		CMP	>GWPCKD,X
;// 03.07.26 //		BNE	IIT1120		; check room ?
;// 03.07.26 //;					; yes
;// 03.07.26 //IIT1160		EQU	$
;// 03.07.26 //		LDA	>MAPPPS1
;// 03.07.26 //		ORA	>BITCD0+10H,X
;// 03.07.26 //		STA	>MAPPPS1
;// 03.07.26 //IIT1180		EQU	$
		MEM8
		IDX8
		SEP	#00110000B	; memory,index 8bit mode
;
		PLB			; (DBR) reset
		RTS
;
;
;
;
		MEM16
		IDX16
;************************************************************************
;*		Restart Initial RAM  set  [Danjyon]	(IIT0000)	*
;************************************************************************
RESTRMDT	EQU	$		; start room no.     <RMXYCT>
		WORD	00104H,00012H,00080H,00055H,00051H,000F0H,000E4H
;
REISCTDT	EQU	$		; scroll limit data  <SCVU>
		BYTE	021H,020H,021H,021H,009H,009H,009H,00AH	; LINK-HOUSE
		BYTE	002H,002H,002H,003H,004H,004H,004H,005H	; CHAPEL
		BYTE	010H,010H,010H,011H,001H,000H,001H,001H	; ROU-YA
		BYTE	00AH,00AH,00AH,00BH,00BH,00AH,00BH,00BH	; SHIRO URA-ENTER
		BYTE	00AH,00AH,00AH,00BH,002H,002H,002H,003H	; GYOKU-ZA
		BYTE	01EH,01EH,01EH,01FH,001H,000H,001H,001H	; YAMA JIJI
		BYTE	01DH,01CH,01DH,01DH,008H,008H,008H,009H	; YAMA JIJI HOUSE
;
;// 03.08.28 //REISCTDT	EQU	$		; scroll limit data  <SCVU>
;// 03.08.28 //		WORD	02100H,02000H,02110H,02110H,00900H,00900H,00900H,00A00H	; LINK-HOUSE
;// 03.08.28 //		WORD	00200H,00200H,00210H,00310H,00400H,00400H,00400H,00500H	; CHAPEL
;// 03.08.28 //		WORD	01000H,01000H,01010H,01110H,00100H,00000H,00100H,00100H	; ROU-YA
;// 03.08.28 //		WORD	00A00H,00A00H,00A10H,00B10H,00B00H,00A00H,00B00H,00B00H	; SHIRO URA-ENTER
;// 03.08.28 //		WORD	00A00H,00A00H,00A10H,00B10H,00200H,00200H,00200H,00300H	; GYOKU-ZA
;// 03.08.28 //		WORD	01E00H,01E10H,01E10H,01F10H,00100H,00000H,00100H,00100H	; YAMA JIJI
;
;
REISCHDT	EQU	$		; sccH               <SCCH>
		WORD	00900H,00480H,000DBH,00A8EH,00280H,00100H,00800H
;
REISCVDT	EQU	$		; sccV               <SCCV>
		WORD	02110H,00231H,01000H,00A03H,00A22H,01E8CH,01D10H
;
REIYPSDT	EQU	$		; player Y-pos.      <PLYPS1>
		WORD	02178H,0029CH,01041H,00A70H,00A8FH,01EF8H,01D98H
;
REIXPSDT	EQU	$		;        X-pos.      <PLXPS1>
		WORD	00978H,004F8H,00160H,00B06H,002F8H,001A8H,00878H
;
REIUPCDT	EQU	$		; up   check data    <PYUPCT>
		WORD	0017FH,000A7H,00083H,0007BH,0009AH,00103H,00187H
;
REILFCDT	EQU	$		; left               <PXLFCT>
		WORD	0017FH,000FFH,00167H,0010DH,000FFH,0017FH,0007FH
;
REBGCHPT	EQU	$		; BG. character pointer  <CHIKNO>
		BYTE	003H,004H,004H,001H,004H,006H,014H
;
REFLNODT	EQU	$		; floor no. data         <FLORNO>
		BYTE	000H,000H,0FDH,0FFH,001H,000H,000H
;
REDJNPTD	EQU	$		; danjyon map pointer    <DJNNO>
		BYTE	0FFH,000H,002H,0FFH,002H,0FFH,0FFH
;
REPBGMDT	EQU	$		; player BG. check mode data  <PLBGCKF>
		BYTE	000H,000H,000H,001H,000H,000H,001H
;
;// 03.08.29 //;
;// 03.08.29 //REPBGMDT	EQU	$		; player BG. check mode data  <PLBGCKF>
;// 03.08.29 //		BYTE	000H,000H,000H,000H,000H,000H
;// 03.08.29 //;
;// 03.08.29 //RECBGMDT	EQU	$		; char. BG. check mode data   <CDBGCKF>
;// 03.08.29 //		BYTE	000H,000H,000H,001H,000H,000H
;
RERCKXD0	EQU	$               ; room size              <RMCKXF>
		BYTE	000H,022H,020H,020H,022H,022H,002H
;
;// 03.08.29 //;/
;// 03.08.29 //RERCKXD0	EQU	$               ; room size              <RMCKXF>
;// 03.08.29 //		BYTE	000H,002H,002H,002H,002H,002H
;// 03.08.29 //;
;// 03.08.29 //RERCKYD0	EQU	$               ;                        <RMCKYF>
;// 03.08.29 //		BYTE	000H,002H,000H,000H,002H,002H
;
RERCKXD1	EQU	$               ;                        <RMXCPT>
		BYTE	002H,000H,010H,010H,000H,010H,002H
;
;// 03.08.29 //;/
;// 03.08.29 //RERCKXD1	EQU	$               ;                        <RMXCPT>
;// 03.08.29 //		BYTE	000H,000H,001H,001H,000H,001H
;// 03.08.29 //;
;// 03.08.29 //RERCKYD1	EQU	$               ;                        <RMYCPT>
;// 03.08.29 //		BYTE	002H,000H,000H,000H,000H,000H
;
REDDOPPD	EQU	$		; (GDRBF0)
		WORD	00816H,00000H,00000H,00000H,00000H,00000H,00000H
;
GOPOSFRM	EQU	$		;                        <GOPOSF>
		WORD	00000H,00002H,00002H,00032H,00004H,00006H,00030H
;
REDJSNDD	EQU	$		; B.G.M.
		HEX	007H,014H,010H,003H,010H,012H,012H
;
;
IIT0000		EQU	$
		LDA	>MODTBL3
		AND	#000FFH
		ASL	A
		TAX
		ASL	A
		ASL	A
;// 03.08.28 //		ASL	A
		TAY
;
		LDA	GOPOSFRM,X
		STA	!GOPOSF
;
		LDA	RESTRMDT,X
		STA	<RMXYCT		; init. room no.
		STA	!ERXYCT
;
		LDA	REISCVDT,X
		STA	<SCCV2
		STA	<SCCV1
		STA	!SSCCV2
		STA	!SSCCV1
		LDA	REISCHDT,X
		STA	<SCCH2
		STA	<SCCH1		; scroll count set
		STA	!SSCCH2
		STA	!SSCCH1
;
		LDA	>MODTBL0
		BEQ	IIT0010		; start demo ?
;					; no
		LDA	REIYPSDT,X
		STA	<PLYPS1
		LDA	REIXPSDT,X
		STA	<PLXPS1		; player position set
IIT0010		EQU	$
		LDA	REIUPCDT,X
		STA	!PYUPCT
		INC	A
		INC	A
		STA	!PYDWCT
		LDA	REILFCDT,X
		STA	!PXLFCT
		INC	A
		INC	A
		STA	!PXRTCT		; up,dwon,left,right check counter set
;
		LDA	#001F8H
		STA	<PSCKRM		; Danjyon pos. check ram set
		LDA	REDDOPPD,X
		STA	!GDRBF0
;
;
;// 03.08.28 //		LDX	#00000H
;// 03.08.28 //IIT0020		EQU	$
;// 03.08.28 //		LDA	REISCTDT,Y
;// 03.08.28 //		STA	!SCVU,X
;// 03.08.28 //		INY
;// 03.08.28 //		INY
;// 03.08.28 //		INX
;// 03.08.28 //		INX
;// 03.08.28 //		CPX	#00010H
;// 03.08.28 //		BNE	IIT0020		;
;// 03.08.28 //;					;
;
		LDA	#00000H
		STA	!SCKY00
		LDA	#00110H
		STA	!SCKY10
		LDA	#00000H
		STA	!SCKX00
		LDA	#00100H
		STA	!SCKX10		; scroll end check data init. set
;
;
		LDA	>MODTBL3
		AND	#000FFH
		TAX
;
		MEM8
		SEP	#00100000B	; memory 16bit mode
;
		LDA	REISCTDT+0,Y
		STA	!SCVU+1
		LDA	REISCTDT+1,Y
		STA	!SCVU1+1
		LDA	REISCTDT+2,Y
		STA	!SCVD+1
		LDA	REISCTDT+3,Y
		STA	!SCVD1+1
		LDA	REISCTDT+4,Y
		STA	!SCHL+1
		LDA	REISCTDT+5,Y
		STA	!SCHL1+1
		LDA	REISCTDT+6,Y
		STA	!SCHR+1
		LDA	REISCTDT+7,Y
		STA	!SCHR1+1
;
		STZ	!SCVU
		STZ	!SCVU1
		LDA	#010H
		STA	!SCVD
		STA	!SCVD1
		STZ	!SCHL
		STZ	!SCHL1
		STZ	!SCHR
		STZ	!SCHR1
;
		LDA	#002H
		STA	<PLMKCH		; init. player muki set
;
;// 02.12.07 //		LDA	OJCHPT,X
;// 02.12.07 //		STA	!CHARBK
;// 02.12.07 //		STA	!ROBJCPT
		LDA	REBGCHPT,X
		STA	!CHIKNO
;// 02.12.07 //		STA	!RBGCPT
;
		LDA	REFLNODT,X
		STA	<FLORNO		; init. floor no.
		LDA	REDJNPTD,X
		STA	!DJNNO		; danjyon map pointer
		STZ	<PWORK6		; init player in-door data set
;
		LDA	REPBGMDT,X
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	<PLBGCKF	; init player BG. check mode set
;// 03.08.29 //		LDA	RECBGMDT,X
		LDA	REPBGMDT,X
		AND	#00001111B
		STA	!CDBGCKF
;
		LDA	RERCKXD0,X
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	<RMCKXF
;// 03.08.29 //		LDA	RERCKYD0,X
		LDA	RERCKXD0,X
		AND	#00001111B
		STA	<RMCKYF
;
		LDA	RERCKXD1,X
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	<RMXCPT
;// 03.08.29 //		LDA	RERCKYD1,X
		LDA	RERCKXD1,X
		AND	#00001111B
		STA	<RMYCPT
;
		LDA	REDJSNDD,X
		STA	!SNDSFG0
		CPX	#000H
		BNE	IIT0020		; link-house ?
;					; yes
		LDA	>MODTBL0
		BNE	IIT0020		; zen-han ?
;					; yes
		LDA	#0FFH
		STA	!SNDSFG0
IIT0020		EQU	$
		STZ	!RESTSFG
;
		JMP	IIT1070
;
;
;
;
		MEM8
		IDX8
;************************************************************************
;*		Initial RAM  set  [Ground]		(IIT2000)	*
;************************************************************************
DROOMDT		EQU	$		; (RMXYCT) check
		WORD	00104H
		WORD	00012H,00060H,00061H,00062H,0FFFFH,00020H
;
		WORD	000F0H,000F1H,000C9H,00084H,00085H,00083H,00063H,000F2H
		WORD	000F3H,000F4H,000F5H,000E3H,000E2H,000F8H,000E8H,00023H
		WORD	000FBH,000EBH,000D5H,00024H,000FDH,000EDH,000FEH,000EEH
		WORD	000FFH,000EFH,000DFH,000F9H,000FAH,000EAH,000E0H,00028H
		WORD	0004AH,00098H,00056H,00057H,00058H,00059H,00077H,0000EH
		WORD	000E6H,000E7H,000E4H,000E5H,00055H,000D6H,000DBH,000E1H
		WORD	00010H,0000CH,00008H,0002FH,0003CH,0002CH,00003H
		WORD	01000H,01002H,01004H,01006H,01008H,0100AH,0100CH,0100EH
		WORD	01010H,01012H,01014H,01016H,01018H
;
;// 03.07.08 //		WORD	00180H,00181H,00182H,00183H,00880H,00881H
		WORD	00180H,00181H,00182H,00189H
DRMDTE		EQU	$
;
DMPDNRM		EQU	$		; (MPDTNO)
;			 104
		BYTE	02CH
;			  12   60   61   62
		BYTE	013H,01BH,01BH,01BH,00FH,05BH
;			  F0   F1   C9   84   85   83   63   F2
		BYTE	00AH,003H,01EH,030H,030H,030H,030H,018H
;			  F3   F4   F5   E3   E2   F8   E8   23
		BYTE	018H,028H,029H,022H,002H,045H,045H,045H
;			  FB   EB   D5   24   FD   ED   FE   EE
		BYTE	04AH,04AH,045H,045H,005H,005H,005H,005H
;			  FF   EF   DF   F9   FA   EA   E0   28
		BYTE	005H,005H,005H,003H,003H,003H,01BH,07BH
;                         4A   98   56   57   58   59   77   0E 
		BYTE	05EH,070H,040H,040H,040H,040H,003H,075H
;			  E6   E7   E4   E5   55   D6   DB   E1
		BYTE	00AH,003H,003H,003H,01BH,047H,058H,000H
;			  10   0C   08   2F   3C   2C   03  
		BYTE	05BH,043H,015H,018H,045H,045H,02CH
;			 ED1  ED2  ED3  ED4  ED5  ED6  ED7  ED8		
		BYTE	01BH,018H,003H,02CH,005H,002H,01EH,018H
;			 ED9  EDA  EDB  EDC  EDD    		
		BYTE	081H,030H,016H,02AH,000H
;
		BYTE	080H,080H,081H,088H
;
;// 03.08.28 //;
;// 03.08.28 //DMPDNRM		EQU	$		; (MPDTNO)
;// 03.08.28 //;			  104
;// 03.08.28 //		WORD	0002CH
;// 03.08.28 //;// 03.05.23 //		WORD	0001AH
;// 03.08.28 //;			   12     60     61    62
;// 03.08.28 //		WORD	00013H,0001BH,0001BH,0001BH,0000FH,0005BH
;// 03.08.28 //;			   F0     F1     C9    84      85     83     63     F2
;// 03.08.28 //		WORD	0000AH,00003H,0001EH,00030H,00030H,00030H,00030H,00018H
;// 03.08.28 //;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.08.28 //		WORD	00018H,00028H,00029H,00022H,00002H,00045H,00045H,00045H
;// 03.08.28 //;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.08.28 //		WORD	0004AH,0004AH,00045H,00045H,00005H,00005H,00005H,00005H
;// 03.08.28 //;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.08.28 //		WORD	00005H,00005H,00005H,00003H,00003H,00003H,0001BH,0007BH
;// 03.08.28 //;                          4A     98     56    57      58     59     77     0E 
;// 03.08.28 //		WORD	0005EH,00070H,00040H,00040H,00040H,00040H,00003H,00075H
;// 03.08.28 //;			   E6	  E7     E4    E5      55     D6     DB     E1
;// 03.08.28 //		WORD	0000AH,00003H,00003H,00003H,0001BH,00047H,00058H,00000H
;// 03.08.28 //;			   10     0C                    
;// 03.08.28 //		WORD	0005BH,00043H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.08.28 //;
;// 03.08.28 //		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.08.28 //;// 03.07.08 //		WORD	00080H,00080H,00081H,00083H,00086H,0001EH
;// 03.08.28 //		WORD	00080H,00080H,00081H,00088H,00086H,0001EH
;// 03.08.28 //;
;
DSRPTRM		EQU	$		; (SCRPNT)
;			  104
		WORD	00506H
;// 03.05.23 //		WORD	0079AH
;			   12     60     61    62
		WORD	0001CH,00016H,00530H,0004AH,0001CH,0002EH
;			   F0     F1     C9    84      85     83     63     F2
		WORD	003A0H,01402H,0005AH,00314H,002A8H,00280H,00016H,002BCH
;			   F3     F4     F5    E3      E2     F8     E8     23
		WORD	002C4H,008A0H,00880H,00412H,00118H,00EE0H,00460H,007CAH
;			   FB     EB     D5    24      FD     ED     FE     EE
		WORD	003A0H,000A0H,00AD4H,007E0H,00DD4H,00AD4H,00CCAH,007C8H
;			   FF     EF     DF    F9      FA     EA     E0     28
		WORD	00EE0H,017E0H,00460H,00D9CH,00EACH,0092CH,00032H,0049EH
;                          4A     98     56    57      58     59     77     0E 
		WORD	0005AH,00414H,00C8EH,00EB8H,00F4CH,00282H,00050H,00BC6H
;			   E6	  E7     E4    E5      55     D6     DB     E1
		WORD	000A0H,00D82H,0181AH,010C6H,0044AH,00712H,00B2EH,00F4EH
;			   10     0C     08    2F      3C     2C     03
		WORD	00B0EH,00052H,00088H,00386H,004DAH,0004CH,00506H
;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
		WORD	01230H,00448H,00050H,0009AH,0034EH,0049AH,007C0H,01100H
;			  ED9    EDA    EDB    EDC    EDD    
		WORD	00040H,00916H,0000AH,00910H,00A3AH
;
;// 03.07.08 //		WORD	01800H,00020H,01782H,00000H,01800H,00410H
		WORD	00000H,00020H,01782H,00000H
;
DSCCVRM		EQU	$		; (SCCV2,SCCV1)
;			  104
		WORD	00A9AH
;// 03.05.23 //		WORD	006E6H
;			   12     60     61    62
		WORD	00400H,00600H,00692H,00600H,00200H,00600H
;			   F0     F1     C9    84      85     83     63     F2
		WORD	00264H,00294H,00600H,00C56H,00C4AH,00C46H,00C00H,0064CH
;			   F3     F4     F5    E3      E2     F8     E8     23
		WORD	0064AH,00B06H,00B07H,0087AH,00015H,001E4H,00093H,00103H
;			   FB     EB     D5    24      FD     ED     FE     EE
		WORD	00263H,0020AH,00164H,00103H,001C4H,00163H,001A3H,00108H
;			   FF     EF     DF    F9      FA     EA     E0     28
		WORD	001E3H,00304H,00093H,001C3H,001E3H,00133H,00600H,00E8CH
;                          4A     98     56    57      58     59     77     0E 
		WORD	00600H,00C79H,001A6H,001E6H,001F6H,00066H,00014H,00D6AH
;			   E6     E7     E4    E5      55     D6     DB     E1
		WORD	00205H,001C4H,0031EH,00224H,0067AH,000DAH,0075AH,001F6H
;			   10     0C     08    2F      3C     2C     03
		WORD	0075AH,00000H,00400H,00665H,000A3H,00000H,00A9AH
;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
		WORD	00842H,00674H,00000H,00A0BH,0005CH,00089H,006E4H,00826H
;			  ED9    EDA    EDB    EDC    EDD    
		WORD	00010H,00D20H,00400H,00B1EH,0016AH
;
;// 03.07.08 //		WORD	00320H,00000H,00320H,00020H,00320H,00080H
		WORD	00120H,00000H,00320H,00000H
;
DSCCHRM		EQU	$		; (SCCH2,SCCH1)
;			  104
		WORD	00832H
;// 03.05.23 //		WORD	004C2H
;			   12     60     61    62
		WORD	006DEH,006AEH,00784H,00856H,00EE2H,00778H
;			   F0     F1     C9    84      85     83     63     F2
		WORD	00500H,00604H,00ED6H,000A6H,00142H,00003H,000A2H,001E2H
;			   F3     F4     F5    E3      E2     F8     E8     23
		WORD    00222H,00100H,00200H,0048EH,004C6H,00D00H,00D00H,00C46H
;			   FB     EB     D5    24      FD     ED     FE     EE
		WORD    00500H,00500H,00CA6H,00D00H,00CA6H,00CA6H,00C56H,00C46H
;			   FF     EF     DF    F9      FA     EA     E0     28
		WORD    00D00H,00D00H,00D00H,006D4H,00754H,00754H,00784H,006F2H
;                          4A     98     56    57      58     59     77     0E 
		WORD	00ED6H,000A6H,00062H,001C2H,00262H,00016H,0087CH,00C3EH
;                          E6     E7     E4    E5      55     D6     DB     E1
		WORD	00500H,00600H,006B4H,00814H,00854H,00E96H,00176H,00262H
;			   10     0C     08    2F      3C     2C     03
		WORD	00674H,00884H,00A36H,00032H,00CD6H,00C56H,00832H
;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
		WORD	0077FH,0024BH,00878H,008D7H,00C6DH,004CFH,00DFEH,00001H
;			  ED9    EDA    EDB    EDC    EDD    
		WORD	00401H,000AAH,00C57H,00478H,001CFH
;
;// 03.07.08 //		WORD	00000H,00100H,0021EH,00600H,00C00H,00078H
		WORD	00000H,00100H,0021EH,00000H
;
DPLYPRM		EQU	$		; (PLYPS1)
;			  104
		WORD	00AF8H-10H
;// 03.05.23 //		WORD	00748H-10H
;			   12         60         61         62
		WORD	00438H-24H,00628H-24H,006F0H-24H,00628H-24H,00213H-10H,0065CH-00H
;			   F0         F1         C9         84         85         83         63         F2
		WORD	002C8H-10H,002F8H-10H,00628H-10H,00CB8H-10H,00CA8H-10H,00CA8H-10H,00C38H-10H,006A8H-10H
;			   F3         F4         F5         E3         E2         F8         E8         23
		WORD    006A8H-10H,00B68H-10H,00B68H-10H,008D8H-10H,00077H-10H,00248H-10H,000F7H-10H,00167H-10H
;			   FB         EB         D5         24         FD         ED         FE         EE
		WORD    002C7H-10H,00268H-10H,001C8H-10H,00167H-10H,00228H-10H,001C7H-10H,00207H-10H,00168H-10H
;			   FF         EF         DF         F9         FA         EA         E0         28
		WORD    00247H-10H,00368H-10H,000F7H-10H,00227H-10H,00247H-10H,00197H-10H,00658H-24H,00EE8H-10H
;                          4A         98         56         57         58         59         77         0E
		WORD	00638H-10H,00CD7H-10H,00208H-10H,00248H-10H,00258H-10H,000C8H-10H,00078H-10H,00DC8H-10H
;                          E6         E7         E4         E5         55         D6         DB         E1
		WORD	00267H-10H,00228H-10H,003B7H-10H,00288H-10H,006D8H-10H,00138H-10H,007B8H-10H,00258H-10H
;			   10         0C         08         2F         3C         2C         03     
		WORD	007B8H-10H,00038H-10H,00458H-10H,006C7H-10H,00107H-00H,00038H-00H,00AF8H-10H
;			   ED1        ED2        ED3        ED4        ED5        ED6        ED7        ED8 
		WORD	008A0H-10H,006D2H-10H,0005DH-10H,00A69H-10H,000BAH-10H,000EBH-10H,00742H-10H,00884H-10H
;			   ED9        EDA        EDB        EDC        EDD        
		WORD	0007EH-10H,00D82H-10H,0045DH-10H,00B82H-10H,001CEH-10H
;
;// 03.07.08 //		WORD	003E8H,00080H,003E8H,000E8H,003E8H,000E8H
		WORD	001E8H,00080H,003E8H,00100H
; 
DPLXPRM		EQU	$		; (PLXPS1)
;			  104
		WORD	008B8H
;// 03.05.23 //		WORD	00548H
;			   12     60     61    62
		WORD	00758H,00728H,007F8H,008C8H,00F50H,007F0H
;			   F0     F1     C9    84      85     83     63     F2
		WORD	005A8H,00678H,00F50H,00128H,001C8H,00088H,00128H,00268H
;			   F3     F4     F5    E3      E2     F8     E8     23
		WORD	002A8H,001B8H,00238H,00508H,00548H,00D78H,00DB8H,00CB8H
;			   FB     EB     D5    24      FD     ED     FE     EE
		WORD	005A8H,005B8H,00D18H,00D78H,00D18H,00D18H,00CC8H,00CB8H
;			   FF     EF     DF    F9      FA     EA     E0     28
		WORD	00DA8H,00DC8H,00DB8H,00748H,007C8H,007C8H,007F8H,00778H
;                          4A     98     56    57      58     59     77     0E 
		WORD	00F50H,00128H,000E8H,00248H,002E8H,00098H,008F0H,00CB8H
;                          E6     E7     E4    E5      55     D6     DB     E1
		WORD	005B8H,00648H,00728H,00888H,008C8H,00F08H,001F8H,002E8H
;			   10     0C     08    2F      3C     2C     03
		WORD	006E8H,008F8H,00AA8H,000B8H,00D48H,00CC8H,008B8H
;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
		WORD	007F3H,002CDH,008E6H,0094FH,00CDFH,00551H,00E7CH,00083H
;			  ED9    EDA    EDB    EDC    EDD    
		WORD	0047DH,00130H,00CD1H,004FEH,00255H
;
;// 03.07.08 //		WORD	00080H,001F0H,0029EH,006A8H,00C70H,000F0H
		WORD	00080H,001F0H,0029EH,00080H
;
DUPCTRM		EQU	$		; (PYUPCT)
;			  104
		WORD	00B07H
;// 03.05.23 //		WORD	00753H
;			   12     60     61    62
		WORD	0046DH,0066DH,006FFH,0066DH,0026DH,0066DH
;			   F0     F1     C9    84      85     83     63     F2
		WORD	002D3H,00303H,0066DH,00CC3H,00CB7H,00CB3H,00C6DH,006B9H
;			   F3     F4     F5    E3      E2     F8     E8     23
		WORD	006B7H,00B73H,00B74H,008E7H,00082H,00253H,00102H,00172H
;			   FB     EB     D5    24      FD     ED     FE     EE
		WORD	002D2H,00277H,001D3H,00172H,00233H,001D2H,00212H,00177H
;			   FF     EF     DF    F9      FA     EA     E0     28
		WORD	00252H,00373H,00102H,00232H,00252H,001A2H,0066DH,00EF9H
;                          4A     98     56    57      58     59     77     0E 
		WORD	0066DH,00CE6H,00213H,00253H,00263H,000D3H,00083H,00DD7H
;			   E6     E7     E4    E5      55     D6     DB     E1     
		WORD	00272H,00233H,0038DH,00293H,006E7H,00147H,007C7H,00263H
;			   10     0C     08    2F      3C     2C     03
		WORD	007C7H,0006FH,0046FH,006D2H,00112H,0006FH,00B07H
;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
		WORD	008AFH,006E1H,0006DH,00A78H,000C9H,000F6H,00751H,00893H
;			  ED9    EDA    EDB    EDC    EDD    
		WORD	0008DH,00D8DH,0046DH,00B8DH,001D9H
;
;// 03.07.08 //		WORD	0039DH,0008FH,0039DH,0009DH,0039DH,000F5H
		WORD	0019DH,0008FH,0039DH,0009DH
;
DLFCTRM		EQU	$		; (PXLFCT)
;			  104
		WORD	008BFH
;// 03.05.23 //		WORD	0054FH
;			   12     60     61    62
		WORD	00763H,00733H,00803H,008D3H,00F57H,007F7H
;			   F0     F1     C9    84      85     83     63     F2
		WORD	0058DH,00683H,00F5BH,00133H,001CFH,00090H,0012FH,0026FH
;			   F3     F4     F5    E3      E2     F8     E8     23
		WORD	002AFH,0018DH,0028DH,00513H,00553H,00D7DH,00D7DH,00CC3H
;			   FB     EB     D5    24      FD     ED     FE     EE
		WORD	0058DH,0058DH,00D23H,00D7DH,00D23H,00D23H,00CD3H,00CC3H
;			   FF     EF     DF    F9      FA     EA     E0     28
		WORD	00D7DH,00D7DH,00D7DH,00753H,007D3H,007D3H,00803H,0077FH
;                          4A     98     56    57      58     59     77     0E 
		WORD	00F5BH,00133H,000EFH,0024FH,002EFH,000A3H,008FBH,00CC3H
;			   E6     E7     E4    E5      55     D6     DB     E1
		WORD	0058DH,0067FH,00733H,00893H,008D3H,00F13H,00203H,002EFH
;			   10     0C     08    2F      3C     2C     03         
		WORD	006F3H,00903H,00AB3H,000BFH,00D53H,00CD3H,008BFH
;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
		WORD	007FEH,002D8H,008EDH,00956H,00CEAH,0055CH,00E83H,0008EH
;			  ED9    EDA    EDB    EDC    EDD    
		WORD	00484H,00137H,00CDCH,00505H,0025CH
;
;// 03.07.08 //		WORD	00083H,0018DH,002A1H,00683H,00C7DH,000FBH
		WORD	00083H,0018DH,002A1H,00083H
;
DUPSCRM		EQU	$		; (UPSLCT)
;			 104
		BYTE	006H
;			  12   60   61   62
		BYTE	000H,000H,00EH,000H,000H,000H
;			  F0   F1   C9   84   85   83   63   F2
		BYTE	00AH,00AH,000H,00AH,006H,00AH,000H,004H
;			  F3   F4   F5   E3   E2   F8   E8   23
		BYTE	006H,00AH,009H,006H,00BH,00AH,00BH,00BH
;			  FB   EB   D5   24   FD   ED   FE   EE
		BYTE	00BH,006H,00AH,00BH,00AH,00BH,00BH,006H
;			  FF   EF   DF   F9   FA   EA   E0   28
		BYTE	00BH,00AH,00BH,00BH,00BH,00BH,000H,004H
;                         4A   98   56   57   58   59   77   0E
		BYTE	000H,007H,00AH,00AH,00AH,00AH,00AH,006H
;			  E6   E7   E4   E5   55   D6   DB   E1
		BYTE	00BH,00AH,000H,00AH,006H,006H,006H,00AH
;			  10   0C   08   2F   3C   2C   03           
		BYTE	006H,000H,000H,00BH,00BH,000H,006H
;			 ED1  ED2  ED3  ED4  ED5  ED6  ED7  ED8 
		BYTE	0FEH,00CH,000H,005H,004H,001H,007H,0FAH
;			 ED9  EDA  EDB  EDC  EDD  
		BYTE	000H,000H,000H,000H,0F4H
;
		BYTE	000H,000H,000H,000H
;
DLFSCRM		EQU	$		; (LFSLCT)
;			 104
		BYTE	0FEH
;			  12   60   61   62
		BYTE	002H,002H,0FAH,0FAH,0FEH,0F8H
;			  F0   F1   C9   84   85   83   63   F2
		BYTE	000H,0FCH,0FAH,0FAH,0FEH,0FDH,00EH,0FEH
;			  F3   F4   F5   E3   E2   F8   E8   23
		BYTE	0FEH,000H,000H,002H,0FAH,000H,000H,00AH
;			  FB   EB   D5   24   FD   ED   FE   EE
		BYTE	000H,000H,0FAH,000H,0FAH,0FAH,0FAH,0FAH
;			  FF   EF   DF   F9   FA   EA   E0   28
		BYTE	000H,000H,000H,0FCH,0FCH,0FCH,00AH,0FEH
;                         4A   98   56   57   58   59   77   0E
		BYTE	0FAH,0FAH,00EH,0FEH,0FEH,0FAH,0F4H,0F2H
;			  E6   E7   E4   E5   55   D6   DB   E1
		BYTE	000H,000H,00CH,00CH,0FAH,0FAH,0FAH,00EH
;			  10   0C   08   2F   3C   2C   03           
		BYTE	0FAH,0FCH,00AH,0FEH,0FAH,00AH,0FEH
;			 ED1  ED2  ED3  ED4  ED5  ED6  ED7  ED8 
		BYTE	0FFH,0F5H,008H,0F9H,003H,001H,002H,0FFH
;			 ED9  EDA  EDB  EDC  EDD  
		BYTE	0FFH,006H,0F9H,008H,001H
;
		BYTE	000H,000H,0F2H,000H
;
;// 03.08.28 //;
;// 03.08.28 //DUPSCRM		EQU	$		; (UPSLCT)
;// 03.08.28 //;			  104
;// 03.08.28 //		WORD	00006H
;// 03.08.28 //;// 03.05.23 //		WORD	0000AH
;// 03.08.28 //;			   12     60     61    62
;// 03.08.28 //		WORD	00000H,00000H,0000EH,00000H,00000H,0FFF6H
;// 03.08.28 //;			   F0     F1     C9    84      85     83     63     F2
;// 03.08.28 //		WORD	0000AH,0000AH,00000H,0000AH,00006H,0000AH,00000H,00004H
;// 03.08.28 //;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.08.28 //		WORD	00006H,0000AH,00009H,00006H,0000BH,0000AH,00007H,00006H
;// 03.08.28 //;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.08.28 //		WORD	0000BH,00006H,00007H,00006H,0000BH,0000BH,0000AH,0000BH
;// 03.08.28 //;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.08.28 //		WORD	0000AH,0000BH,0000AH,00006H,0000BH,0000BH,00000H,00004H
;// 03.08.28 //;                          4A     98     56    57      58     59     77     0E 
;// 03.08.28 //		WORD	00000H,00007H,0000AH,0000AH,0000AH,0000AH,00009H,00006H
;// 03.08.28 //;			   E6	  E7     E4    E5      55     D6     DB     E1
;// 03.08.28 //		WORD	0000BH,0000AH,00000H,0000AH,00006H,0000BH,00006H,0000AH
;// 03.08.28 //;			   10     0C                    
;// 03.08.28 //		WORD	00006H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.08.28 //;
;// 03.08.28 //		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.08.28 //;
;// 03.08.28 //		WORD	00000H,00000H,00000H,00000H,00000H,00000H
;// 03.08.28 //;
;// 03.08.28 //DLFSCRM		EQU	$		; (LFSLCT)
;// 03.08.28 //;			  104
;// 03.08.28 //		WORD	0FFFEH
;// 03.08.28 //;// 03.05.23 //		WORD	0000EH
;// 03.08.28 //;			   12     60     61    62
;// 03.08.28 //		WORD	00002H,00002H,0FFFAH,0FFFAH,0FFFEH,0FFF8H
;// 03.08.28 //;			   F0     F1     C9    84      85     83     63     F2
;// 03.08.28 //		WORD	00000H,00000H,0FFFAH,0FFFAH,0FFFEH,0FFFDH,0000EH,0FFFEH
;// 03.08.28 //;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.08.28 //		WORD	0FFFEH,00000H,00000H,00002H,0FFFAH,0FFF6H,00000H,00006H
;// 03.08.28 //;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.08.28 //		WORD	00000H,00000H,00006H,0FFF6H,00002H,0FFF6H,0FFF2H,00002H
;// 03.08.28 //;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.08.28 //		WORD	00000H,00000H,00000H,00002H,00002H,00002H,0000AH,0FFFEH
;// 03.08.28 //;                          4A     98     56    57      58     59     77     0E 
;// 03.08.28 //		WORD	0FFFAH,0FFFAH,0000EH,0FFFEH,0FFFEH,0FFFAH,0FFFAH,0FFF2H
;// 03.08.28 //;			   E6	  E7     E4    E5      55     D6     DB     E1
;// 03.08.28 //		WORD	00000H,00000H,00002H,0FFF2H,0FFFAH,00002H,0FFFAH,0000EH
;// 03.08.28 //;			   10     0C                    
;// 03.08.28 //		WORD	0FFFAH,00002H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.08.28 //;
;// 03.08.28 //		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.08.28 //;
;// 03.08.28 //		WORD	00000H,00000H,0FFF2H,00000H,00000H,00000H
;// 03.08.28 //;
;
DGDRSP0		EQU	$		; (GDRBF0)
;			  104
		WORD	00816H
;// 03.05.23 //		WORD	00AA8H
;			   12     60     61    62
		WORD	00000H,00000H,00000H,00000H,00000H,00000H
;			   F0     F1     C9    84      85     83     63     F2
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,005CCH
;			   F3     F4     F5    E3      E2     F8     E8     23
		WORD	005D4H,00BB6H,00B86H,00000H,00000H,00000H,00000H,00000H
;			   FB     EB     D5    24      FD     ED     FE     EE
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			   FF     EF     DF    F9      FA     EA     E0     28
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;                          4A     98     56    57      58     59     77     0E 
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			   E6	  E7     E4    E5      55     D6     DB     E1
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			   10     0C     08    2F      3C     2C     03         
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00816H
;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			  ED9    EDA    EDB    EDC    EDD    
		WORD	00000H,00000H,00000H,00000H,00000H
;
		WORD	00000H,00000H,00000H,00000H
;
DGDRSP1		EQU	$		; (GDRBF1)
;			  104
		WORD	00000H
;			   12     60     61    62
		WORD	001AAH,08124H,087BEH,08158H,00000H,00000H
;			   F0     F1     C9    84      85     83     63     F2
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			   F3     F4     F5    E3      E2     F8     E8     23
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			   FB     EB     D5    24      FD     ED     FE     EE
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			   FF     EF     DF    F9      FA     EA     E0     28
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,082BEH,00000H
;                          4A     98     56    57      58     59     77     0E 
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			   E6	  E7     E4    E5      55     D6     DB     E1
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			   10     0C     08    2F      3C     2C     03         
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;			  ED9    EDA    EDB    EDC    EDD    
		WORD	00000H,00000H,00000H,00000H,00000H
;
		WORD	00000H,00000H,00000H,00000H
;
;
;// 03.09.30 //		DROOMDT		EQU	$		; (RMXYCT) check
;// 03.09.30 //				WORD	00104H
;// 03.09.30 //				WORD	00012H,00060H,00061H,00062H,0FFFFH,00020H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	000F0H,000F1H,000C9H,00084H,00085H,00083H,00063H,000F2H
;// 03.09.30 //				WORD	000F3H,000F4H,000F5H,000E3H,000E2H,000F8H,000E8H,00023H
;// 03.09.30 //				WORD	000FBH,000EBH,000D5H,00024H,000FDH,000EDH,000FEH,000EEH
;// 03.09.30 //				WORD	000FFH,000EFH,000DFH,000F9H,000FAH,000EAH,000E0H,00028H
;// 03.09.30 //				WORD	0004AH,00098H,00056H,00057H,00058H,00059H,00077H,0000EH
;// 03.09.30 //				WORD	000E6H,000E7H,000E4H,000E5H,00055H,000D6H,000DBH,000E1H
;// 03.09.30 //				WORD	00010H,0000CH,00008H,0002FH,0003CH,0002CH,00003H,00000H
;// 03.09.30 //				WORD	01000H,01002H,01004H,01006H,01008H,0100AH,0100CH,0100EH
;// 03.09.30 //				WORD	01010H,01012H,01014H,01016H,01018H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;// 03.07.08 //		WORD	00180H,00181H,00182H,00183H,00880H,00881H
;// 03.09.30 //				WORD	00180H,00181H,00182H,00189H
;// 03.09.30 //		DRMDTE		EQU	$
;// 03.09.30 //		;
;// 03.09.30 //		DMPDNRM		EQU	$		; (MPDTNO)
;// 03.09.30 //		;			 104
;// 03.09.30 //				BYTE	02CH
;// 03.09.30 //		;			  12   60   61   62
;// 03.09.30 //				BYTE	013H,01BH,01BH,01BH,00FH,05BH
;// 03.09.30 //		;			  F0   F1   C9   84   85   83   63   F2
;// 03.09.30 //				BYTE	00AH,003H,01EH,030H,030H,030H,030H,018H
;// 03.09.30 //		;			  F3   F4   F5   E3   E2   F8   E8   23
;// 03.09.30 //				BYTE	018H,028H,029H,022H,002H,045H,045H,045H
;// 03.09.30 //		;			  FB   EB   D5   24   FD   ED   FE   EE
;// 03.09.30 //				BYTE	04AH,04AH,045H,045H,005H,005H,005H,005H
;// 03.09.30 //		;			  FF   EF   DF   F9   FA   EA   E0   28
;// 03.09.30 //				BYTE	005H,005H,005H,003H,003H,003H,01BH,07BH
;// 03.09.30 //		;                         4A   98   56   57   58   59   77   0E 
;// 03.09.30 //				BYTE	05EH,070H,040H,040H,040H,040H,003H,075H
;// 03.09.30 //		;			  E6   E7   E4   E5   55   D6   DB   E1
;// 03.09.30 //				BYTE	00AH,003H,003H,003H,01BH,047H,058H,000H
;// 03.09.30 //		;			  10   0C   08   2F   3C   2C   03  
;// 03.09.30 //				BYTE	05BH,043H,015H,018H,045H,045H,02CH,000H
;// 03.09.30 //		;			 ED1  ED2  ED3  ED4  ED5  ED6  ED7  ED8		
;// 03.09.30 //				BYTE	01BH,018H,003H,02CH,005H,002H,01EH,018H
;// 03.09.30 //		;			 ED9  EDA  EDB  EDC  EDD    		
;// 03.09.30 //				BYTE	081H,030H,016H,02AH,000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	080H,080H,081H,088H
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		DSRPTRM		EQU	$		; (SCRPNT)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	00506H
;// 03.09.30 //		;// 03.05.23 //		WORD	0079AH
;// 03.09.30 //		;			   12     60     61    62
;// 03.09.30 //				WORD	0001CH,00016H,00530H,0004AH,0001CH,0002EH
;// 03.09.30 //		;			   F0     F1     C9    84      85     83     63     F2
;// 03.09.30 //				WORD	003A0H,01402H,0005AH,00314H,002A8H,00280H,00016H,002BCH
;// 03.09.30 //		;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.09.30 //				WORD	002C4H,008A0H,00880H,00412H,00118H,00EE0H,00460H,007CAH
;// 03.09.30 //		;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.09.30 //				WORD	003A0H,000A0H,00AD4H,007E0H,00DD4H,00AD4H,00CCAH,007C8H
;// 03.09.30 //		;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.09.30 //				WORD	00EE0H,017E0H,00460H,00D9CH,00EACH,0092CH,00032H,0049EH
;// 03.09.30 //		;                          4A     98     56    57      58     59     77     0E 
;// 03.09.30 //				WORD	0005AH,00414H,00C8EH,00EB8H,00F4CH,00282H,00050H,00BC6H
;// 03.09.30 //		;			   E6	  E7     E4    E5      55     D6     DB     E1
;// 03.09.30 //				WORD	000A0H,00D82H,0181AH,010C6H,0044AH,00712H,00B2EH,00F4EH
;// 03.09.30 //		;			   10     0C     08    2F      3C     2C     03
;// 03.09.30 //				WORD	00B0EH,00052H,00088H,00386H,004DAH,0004CH,00506H,00000H
;// 03.09.30 //		;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
;// 03.09.30 //				WORD	01230H,00448H,00050H,0009AH,0034EH,0049AH,007C0H,01100H
;// 03.09.30 //		;			  ED9    EDA    EDB    EDC    EDD    
;// 03.09.30 //				WORD	00040H,00916H,0000AH,00910H,00A3AH,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;// 03.07.08 //		WORD	01800H,00020H,01782H,00000H,01800H,00410H
;// 03.09.30 //				WORD	00000H,00020H,01782H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		DSCCVRM		EQU	$		; (SCCV2,SCCV1)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	00A9AH
;// 03.09.30 //		;// 03.05.23 //		WORD	006E6H
;// 03.09.30 //		;			   12     60     61    62
;// 03.09.30 //				WORD	00400H,00600H,00692H,00600H,00200H,00600H
;// 03.09.30 //		;			   F0     F1     C9    84      85     83     63     F2
;// 03.09.30 //				WORD	00264H,00294H,00600H,00C56H,00C4AH,00C46H,00C00H,0064CH
;// 03.09.30 //		;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.09.30 //				WORD	0064AH,00B06H,00B07H,0087AH,00015H,001E4H,00093H,00103H
;// 03.09.30 //		;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.09.30 //				WORD	00263H,0020AH,00164H,00103H,001C4H,00163H,001A3H,00108H
;// 03.09.30 //		;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.09.30 //				WORD	001E3H,00304H,00093H,001C3H,001E3H,00133H,00600H,00E8CH
;// 03.09.30 //		;                          4A     98     56    57      58     59     77     0E 
;// 03.09.30 //				WORD	00600H,00C79H,001A6H,001E6H,001F6H,00066H,00014H,00D6AH
;// 03.09.30 //		;			   E6     E7     E4    E5      55     D6     DB     E1
;// 03.09.30 //				WORD	00205H,001C4H,0031EH,00224H,0067AH,000DAH,0075AH,001F6H
;// 03.09.30 //		;			   10     0C     08    2F      3C     2C     03
;// 03.09.30 //				WORD	0075AH,00000H,00400H,00665H,000A3H,00000H,00A9AH,00000H
;// 03.09.30 //		;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
;// 03.09.30 //				WORD	00842H,00674H,00000H,00A0BH,0005CH,00089H,006E4H,00826H
;// 03.09.30 //		;			  ED9    EDA    EDB    EDC    EDD    
;// 03.09.30 //				WORD	00010H,00D20H,00400H,00B1EH,0016AH,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;// 03.07.08 //		WORD	00320H,00000H,00320H,00020H,00320H,00080H
;// 03.09.30 //				WORD	00120H,00000H,00320H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		DSCCHRM		EQU	$		; (SCCH2,SCCH1)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	00832H
;// 03.09.30 //		;// 03.05.23 //		WORD	004C2H
;// 03.09.30 //		;			   12     60     61    62
;// 03.09.30 //				WORD	006DEH,006AEH,00784H,00856H,00EE2H,00778H
;// 03.09.30 //		;			   F0     F1     C9    84      85     83     63     F2
;// 03.09.30 //				WORD	00500H,00604H,00ED6H,000A6H,00142H,00003H,000A2H,001E2H
;// 03.09.30 //		;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.09.30 //				WORD    00222H,00100H,00200H,0048EH,004C6H,00D00H,00D00H,00C46H
;// 03.09.30 //		;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.09.30 //				WORD    00500H,00500H,00CA6H,00D00H,00CA6H,00CA6H,00C56H,00C46H
;// 03.09.30 //		;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.09.30 //				WORD    00D00H,00D00H,00D00H,006D4H,00754H,00754H,00784H,006F2H
;// 03.09.30 //		;                          4A     98     56    57      58     59     77     0E 
;// 03.09.30 //				WORD	00ED6H,000A6H,00062H,001C2H,00262H,00016H,0087CH,00C3EH
;// 03.09.30 //		;                          E6     E7     E4    E5      55     D6     DB     E1
;// 03.09.30 //				WORD	00500H,00600H,006B4H,00814H,00854H,00E96H,00176H,00262H
;// 03.09.30 //		;			   10     0C     08    2F      3C     2C     03
;// 03.09.30 //				WORD	00674H,00884H,00A36H,00032H,00CD6H,00C56H,00832H,00000H
;// 03.09.30 //		;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
;// 03.09.30 //				WORD	0077FH,0024BH,00878H,008D7H,00C6DH,004CFH,00DFEH,00001H
;// 03.09.30 //		;			  ED9    EDA    EDB    EDC    EDD    
;// 03.09.30 //				WORD	00401H,000AAH,00C57H,00478H,001CFH,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;// 03.07.08 //		WORD	00000H,00100H,0021EH,00600H,00C00H,00078H
;// 03.09.30 //				WORD	00000H,00100H,0021EH,00000H
;// 03.09.30 //		;
;// 03.09.30 //		DPLYPRM		EQU	$		; (PLYPS1)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	00AF8H-10H
;// 03.09.30 //		;// 03.05.23 //		WORD	00748H-10H
;// 03.09.30 //		;			   12         60         61         62
;// 03.09.30 //				WORD	00438H-24H,00628H-24H,006F0H-24H,00628H-24H,00213H-10H,0065CH-00H
;// 03.09.30 //		;			   F0         F1         C9         84         85         83         63         F2
;// 03.09.30 //				WORD	002C8H-10H,002F8H-10H,00628H-10H,00CB8H-10H,00CA8H-10H,00CA8H-10H,00C38H-10H,006A8H-10H
;// 03.09.30 //		;			   F3         F4         F5         E3         E2         F8         E8         23
;// 03.09.30 //				WORD    006A8H-10H,00B68H-10H,00B68H-10H,008D8H-10H,00077H-10H,00248H-10H,000F7H-10H,00167H-10H
;// 03.09.30 //		;			   FB         EB         D5         24         FD         ED         FE         EE
;// 03.09.30 //				WORD    002C7H-10H,00268H-10H,001C8H-10H,00167H-10H,00228H-10H,001C7H-10H,00207H-10H,00168H-10H
;// 03.09.30 //		;			   FF         EF         DF         F9         FA         EA         E0         28
;// 03.09.30 //				WORD    00247H-10H,00368H-10H,000F7H-10H,00227H-10H,00247H-10H,00197H-10H,00658H-24H,00EE8H-10H
;// 03.09.30 //		;                          4A         98         56         57         58         59         77         0E
;// 03.09.30 //				WORD	00638H-10H,00CD7H-10H,00208H-10H,00248H-10H,00258H-10H,000C8H-10H,00078H-10H,00DC8H-10H
;// 03.09.30 //		;                          E6         E7         E4         E5         55         D6         DB         E1
;// 03.09.30 //				WORD	00267H-10H,00228H-10H,003B7H-10H,00288H-10H,006D8H-10H,00138H-10H,007B8H-10H,00258H-10H
;// 03.09.30 //		;			   10         0C         08         2F         3C         2C         03     
;// 03.09.30 //				WORD	007B8H-10H,00038H-10H,00458H-10H,006C7H-10H,00107H-00H,00038H-00H,00AF8H-10H,00000H
;// 03.09.30 //		;			   ED1        ED2        ED3        ED4        ED5        ED6        ED7        ED8 
;// 03.09.30 //				WORD	008A0H-10H,006D2H-10H,0005DH-10H,00A69H-10H,000BAH-10H,000EBH-10H,00742H-10H,00884H-10H
;// 03.09.30 //		;			   ED9        EDA        EDB        EDC        EDD        
;// 03.09.30 //				WORD	0007EH-10H,00D82H-10H,0045DH-10H,00B82H-10H,001CEH-10H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;// 03.07.08 //		WORD	003E8H,00080H,003E8H,000E8H,003E8H,000E8H
;// 03.09.30 //				WORD	001E8H,00080H,003E8H,00100H
;// 03.09.30 //		; 
;// 03.09.30 //		DPLXPRM		EQU	$		; (PLXPS1)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	008B8H
;// 03.09.30 //		;// 03.05.23 //		WORD	00548H
;// 03.09.30 //		;			   12     60     61    62
;// 03.09.30 //				WORD	00758H,00728H,007F8H,008C8H,00F50H,007F0H
;// 03.09.30 //		;			   F0     F1     C9    84      85     83     63     F2
;// 03.09.30 //				WORD	005A8H,00678H,00F50H,00128H,001C8H,00088H,00128H,00268H
;// 03.09.30 //		;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.09.30 //				WORD	002A8H,001B8H,00238H,00508H,00548H,00D78H,00DB8H,00CB8H
;// 03.09.30 //		;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.09.30 //				WORD	005A8H,005B8H,00D18H,00D78H,00D18H,00D18H,00CC8H,00CB8H
;// 03.09.30 //		;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.09.30 //				WORD	00DA8H,00DC8H,00DB8H,00748H,007C8H,007C8H,007F8H,00778H
;// 03.09.30 //		;                          4A     98     56    57      58     59     77     0E 
;// 03.09.30 //				WORD	00F50H,00128H,000E8H,00248H,002E8H,00098H,008F0H,00CB8H
;// 03.09.30 //		;                          E6     E7     E4    E5      55     D6     DB     E1
;// 03.09.30 //				WORD	005B8H,00648H,00728H,00888H,008C8H,00F08H,001F8H,002E8H
;// 03.09.30 //		;			   10     0C     08    2F      3C     2C     03
;// 03.09.30 //				WORD	006E8H,008F8H,00AA8H,000B8H,00D48H,00CC8H,008B8H,00000H
;// 03.09.30 //		;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
;// 03.09.30 //				WORD	007F3H,002CDH,008E6H,0094FH,00CDFH,00551H,00E7CH,00083H
;// 03.09.30 //		;			  ED9    EDA    EDB    EDC    EDD    
;// 03.09.30 //				WORD	0047DH,00130H,00CD1H,004FEH,00255H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;// 03.07.08 //		WORD	00080H,001F0H,0029EH,006A8H,00C70H,000F0H
;// 03.09.30 //				WORD	00080H,001F0H,0029EH,00080H
;// 03.09.30 //		;
;// 03.09.30 //		DUPCTRM		EQU	$		; (PYUPCT)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	00B07H
;// 03.09.30 //		;// 03.05.23 //		WORD	00753H
;// 03.09.30 //		;			   12     60     61    62
;// 03.09.30 //				WORD	0046DH,0066DH,006FFH,0066DH,0026DH,0066DH
;// 03.09.30 //		;			   F0     F1     C9    84      85     83     63     F2
;// 03.09.30 //				WORD	002D3H,00303H,0066DH,00CC3H,00CB7H,00CB3H,00C6DH,006B9H
;// 03.09.30 //		;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.09.30 //				WORD	006B7H,00B73H,00B74H,008E7H,00082H,00253H,00102H,00172H
;// 03.09.30 //		;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.09.30 //				WORD	002D2H,00277H,001D3H,00172H,00233H,001D2H,00212H,00177H
;// 03.09.30 //		;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.09.30 //				WORD	00252H,00373H,00102H,00232H,00252H,001A2H,0066DH,00EF9H
;// 03.09.30 //		;                          4A     98     56    57      58     59     77     0E 
;// 03.09.30 //				WORD	0066DH,00CE6H,00213H,00253H,00263H,000D3H,00083H,00DD7H
;// 03.09.30 //		;			   E6     E7     E4    E5      55     D6     DB     E1     
;// 03.09.30 //				WORD	00272H,00233H,0038DH,00293H,006E7H,00147H,007C7H,00263H
;// 03.09.30 //		;			   10     0C     08    2F      3C     2C     03
;// 03.09.30 //				WORD	007C7H,0006FH,0046FH,006D2H,00112H,0006FH,00B07H,00000H
;// 03.09.30 //		;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
;// 03.09.30 //				WORD	008AFH,006E1H,0006DH,00A78H,000C9H,000F6H,00751H,00893H
;// 03.09.30 //		;			  ED9    EDA    EDB    EDC    EDD    
;// 03.09.30 //				WORD	0008DH,00D8DH,0046DH,00B8DH,001D9H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;// 03.07.08 //		WORD	0039DH,0008FH,0039DH,0009DH,0039DH,000F5H
;// 03.09.30 //				WORD	0019DH,0008FH,0039DH,0009DH
;// 03.09.30 //		;
;// 03.09.30 //		;
;// 03.09.30 //		DLFCTRM		EQU	$		; (PXLFCT)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	008BFH
;// 03.09.30 //		;// 03.05.23 //		WORD	0054FH
;// 03.09.30 //		;			   12     60     61    62
;// 03.09.30 //				WORD	00763H,00733H,00803H,008D3H,00F57H,007F7H
;// 03.09.30 //		;			   F0     F1     C9    84      85     83     63     F2
;// 03.09.30 //				WORD	0058DH,00683H,00F5BH,00133H,001CFH,00090H,0012FH,0026FH
;// 03.09.30 //		;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.09.30 //				WORD	002AFH,0018DH,0028DH,00513H,00553H,00D7DH,00D7DH,00CC3H
;// 03.09.30 //		;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.09.30 //				WORD	0058DH,0058DH,00D23H,00D7DH,00D23H,00D23H,00CD3H,00CC3H
;// 03.09.30 //		;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.09.30 //				WORD	00D7DH,00D7DH,00D7DH,00753H,007D3H,007D3H,00803H,0077FH
;// 03.09.30 //		;                          4A     98     56    57      58     59     77     0E 
;// 03.09.30 //				WORD	00F5BH,00133H,000EFH,0024FH,002EFH,000A3H,008FBH,00CC3H
;// 03.09.30 //		;			   E6     E7     E4    E5      55     D6     DB     E1
;// 03.09.30 //				WORD	0058DH,0067FH,00733H,00893H,008D3H,00F13H,00203H,002EFH
;// 03.09.30 //		;			   10     0C     08    2F      3C     2C     03         
;// 03.09.30 //				WORD	006F3H,00903H,00AB3H,000BFH,00D53H,00CD3H,008BFH,00000H
;// 03.09.30 //		;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
;// 03.09.30 //				WORD	007FEH,002D8H,008EDH,00956H,00CEAH,0055CH,00E83H,0008EH
;// 03.09.30 //		;			  ED9    EDA    EDB    EDC    EDD    
;// 03.09.30 //				WORD	00484H,00137H,00CDCH,00505H,0025CH,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		;// 03.07.08 //		WORD	00083H,0018DH,002A1H,00683H,00C7DH,000FBH
;// 03.09.30 //				WORD	00083H,0018DH,002A1H,00083H
;// 03.09.30 //		;
;// 03.09.30 //		DUPSCRM		EQU	$		; (UPSLCT)
;// 03.09.30 //		;			 104
;// 03.09.30 //				BYTE	006H
;// 03.09.30 //		;			  12   60   61   62
;// 03.09.30 //				BYTE	000H,000H,00EH,000H,000H,000H
;// 03.09.30 //		;			  F0   F1   C9   84   85   83   63   F2
;// 03.09.30 //				BYTE	00AH,00AH,000H,00AH,006H,00AH,000H,004H
;// 03.09.30 //		;			  F3   F4   F5   E3   E2   F8   E8   23
;// 03.09.30 //				BYTE	006H,00AH,009H,006H,00BH,00AH,00BH,00BH
;// 03.09.30 //		;			  FB   EB   D5   24   FD   ED   FE   EE
;// 03.09.30 //				BYTE	00BH,006H,00AH,00BH,00AH,00BH,00BH,006H
;// 03.09.30 //		;			  FF   EF   DF   F9   FA   EA   E0   28
;// 03.09.30 //				BYTE	00BH,00AH,00BH,00BH,00BH,00BH,000H,004H
;// 03.09.30 //		;                         4A   98   56   57   58   59   77   0E
;// 03.09.30 //				BYTE	000H,007H,00AH,00AH,00AH,00AH,00AH,006H
;// 03.09.30 //		;			  E6   E7   E4   E5   55   D6   DB   E1
;// 03.09.30 //				BYTE	00BH,00AH,000H,00AH,006H,006H,006H,00AH
;// 03.09.30 //		;			  10   0C   08   2F   3C   2C   03           
;// 03.09.30 //				BYTE	006H,000H,000H,00BH,00BH,000H,006H,000H
;// 03.09.30 //		;			 ED1  ED2  ED3  ED4  ED5  ED6  ED7  ED8 
;// 03.09.30 //				BYTE	0FEH,00CH,000H,005H,004H,001H,007H,0FAH
;// 03.09.30 //		;			 ED9  EDA  EDB  EDC  EDD  
;// 03.09.30 //				BYTE	000H,000H,000H,000H,0F4H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //		DLFSCRM		EQU	$		; (LFSLCT)
;// 03.09.30 //		;			 104
;// 03.09.30 //				BYTE	0FEH
;// 03.09.30 //		;			  12   60   61   62
;// 03.09.30 //				BYTE	002H,002H,0FAH,0FAH,0FEH,0F8H
;// 03.09.30 //		;			  F0   F1   C9   84   85   83   63   F2
;// 03.09.30 //				BYTE	000H,0FCH,0FAH,0FAH,0FEH,0FDH,00EH,0FEH
;// 03.09.30 //		;			  F3   F4   F5   E3   E2   F8   E8   23
;// 03.09.30 //				BYTE	0FEH,000H,000H,002H,0FAH,000H,000H,00AH
;// 03.09.30 //		;			  FB   EB   D5   24   FD   ED   FE   EE
;// 03.09.30 //				BYTE	000H,000H,0FAH,000H,0FAH,0FAH,0FAH,0FAH
;// 03.09.30 //		;			  FF   EF   DF   F9   FA   EA   E0   28
;// 03.09.30 //				BYTE	000H,000H,000H,0FCH,0FCH,0FCH,00AH,0FEH
;// 03.09.30 //		;                         4A   98   56   57   58   59   77   0E
;// 03.09.30 //				BYTE	0FAH,0FAH,00EH,0FEH,0FEH,0FAH,0F4H,0F2H
;// 03.09.30 //		;			  E6   E7   E4   E5   55   D6   DB   E1
;// 03.09.30 //				BYTE	000H,000H,00CH,00CH,0FAH,0FAH,0FAH,00EH
;// 03.09.30 //		;			  10   0C   08   2F   3C   2C   03           
;// 03.09.30 //				BYTE	0FAH,0FCH,00AH,0FEH,0FAH,00AH,0FEH,000H
;// 03.09.30 //		;			 ED1  ED2  ED3  ED4  ED5  ED6  ED7  ED8 
;// 03.09.30 //				BYTE	0FFH,0F5H,008H,0F9H,003H,001H,002H,0FFH
;// 03.09.30 //		;			 ED9  EDA  EDB  EDC  EDD  
;// 03.09.30 //				BYTE	0FFH,006H,0F9H,008H,001H,000H,000H,000H
;// 03.09.30 //		;
;// 03.09.30 //				BYTE	000H,000H,0F2H,000H
;// 03.09.30 //		;
;// 03.09.30 //		DGDRSP0		EQU	$		; (GDRBF0)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	00816H
;// 03.09.30 //		;// 03.05.23 //		WORD	00AA8H
;// 03.09.30 //		;			   12     60     61    62
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   F0     F1     C9    84      85     83     63     F2
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,005CCH
;// 03.09.30 //		;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.09.30 //				WORD	005D4H,00BB6H,00B86H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;                          4A     98     56    57      58     59     77     0E 
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   E6	  E7     E4    E5      55     D6     DB     E1
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   10     0C     08    2F      3C     2C     03         
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00816H,00000H
;// 03.09.30 //		;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			  ED9    EDA    EDB    EDC    EDD    
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //		DGDRSP1		EQU	$		; (GDRBF1)
;// 03.09.30 //		;			  104
;// 03.09.30 //				WORD	00000H
;// 03.09.30 //		;			   12     60     61    62
;// 03.09.30 //				WORD	001AAH,08124H,087BEH,08158H,00000H,00000H
;// 03.09.30 //		;			   F0     F1     C9    84      85     83     63     F2
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   F3     F4     F5    E3      E2     F8     E8     23
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   FB     EB     D5    24      FD     ED     FE     EE
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   FF     EF     DF    F9      FA     EA     E0     28
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,082BEH,00000H
;// 03.09.30 //		;                          4A     98     56    57      58     59     77     0E 
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   E6	  E7     E4    E5      55     D6     DB     E1
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			   10     0C     08    2F      3C     2C     03         
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			  ED1    ED2    ED3    ED4    ED5    ED6    ED7    ED8 
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;			  ED9    EDA    EDB    EDC    EDD    
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;// 03.09.30 //				WORD	00000H,00000H,00000H,00000H
;// 03.09.30 //		;
;
;
;
;
IIT2000		EQU	$
		PHB
		PHK
		PLB			; (DBR) set
;
		STZ	<GMMODE		; game-mode (GROUND) set
		STZ	!LGTWFG		; light-wipe off
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	#00000H
		STA	>DKRMCG
		LDA	#000FFH
		STA	!DJNNO
		STZ	!GDMMPT		; ground memory buffer pointer clear
;
		LDA	<RMXYCT
		CMP	#00104H
		BEQ	IIT205		; link-house ?
;					; no
		CMP	#00180H
		BCS	IIT205		; minka ?
;					; yes
		CMP	#00100H
		BCC	IIT205		; minka ?
;					; yes
		JSR	IIT2100
		JMP	IIT240
;
IIT205		EQU	$
		LDX	#DRMDTE-DROOMDT
IIT210		EQU	$
		DEX
		DEX
		CMP	DROOMDT,X
		BNE	IIT210		;
;					;
;// 03.05.10 //		LDA	DDPMSRM,X
;// 03.05.10 //		STA	<DPMAIN		; DPMAIN,DPSUB pull
;
		LDA	DSCCVRM,X
		STA	<SCCV1
		STA	<SCCV2
		STA	!SSCCV2
		STA	!SSCCV1
		LDA	DSCCHRM,X
		STA	<SCCH1
		STA	<SCCH2		; SCCH,V pull
		STA	!SSCCH2
		STA	!SSCCH1
;
		LDA	DPLYPRM,X
		STA	<PLYPS1
		LDA	DPLXPRM,X
		STA	<PLXPS1		; Ground position pull
;
;// 03.08.28 //		LDA	DUPSCRM,X
;// 03.08.28 //		STA	!UPSLCT
;// 03.08.28 //		LDA	#00000H
;// 03.08.28 //		SEC
;// 03.08.28 //		SBC	!UPSLCT
;// 03.08.28 //		STA	!DWSLCT
;// 03.08.28 //		LDA	DLFSCRM,X
;// 03.08.28 //		STA	!LFSLCT
;// 03.08.28 //		LDA	#00000H
;// 03.08.28 //		SEC
;// 03.08.28 //		SBC	!LFSLCT
;// 03.08.28 //		STA	!RTSLCT
;// 03.08.28 //;
;// 03.08.28 //		LDA	DMPDNRM,X
;// 03.08.28 //		STA	<MPDTNO
;// 03.08.28 //		STA	!GRNDNO
		LDA	DSRPTRM,X
		STA	<SCRPNT		; Ground information pull
		SEC
		SBC	#00400H
		AND	#00F80H
		ASL	A
		XBA
		STA	<YWRITE
		LDA	<SCRPNT
		SEC
		SBC	#00010H
		AND	#0003EH
		LSR	A
		STA	<XWRITE
;
		LDA	DUPCTRM,X
		STA	!PYUPCT
;// 03.02.01 //		LDA	DDWCTRM,X
		DEC	A
		DEC	A
		STA	!PYDWCT
		LDA	DLFCTRM,X
		STA	!PXLFCT
;// 03.02.01 //		LDA	DRTCTRM,X
		DEC	A
		DEC	A
		STA	!PXRTCT		; up,dwon,left,right check counter pull
		LDA	#00002H
		STA	<PLMKCH
;
		LDA	DGDRSP0,X
		STA	!GDRBF0
		LDA	DGDRSP1,X
		STA	!GDRBF1
;
		TXA
		LSR	A
		TAX
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		LDA	DMPDNRM,X
		STA	<MPDTNO
		STA	!GRNDNO
		STZ	<MPDTNO+1
		STZ	!GRNDNO+1
;
		LDA	DUPSCRM,X
		STA	!UPSLCT
		STZ	!UPSLCT+1
		ASL	A
		BCC	IIT220		;
;					;
		DEC	!UPSLCT+1
IIT220		EQU	$
		LDA	DLFSCRM,X
		STA	!LFSLCT
		STZ	!LFSLCT+1
		ASL	A
		BCC	IIT230		;
;					;
		DEC	!LFSLCT+1
IIT230		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	#00000H
		SEC
		SBC	!UPSLCT
		STA	!DWSLCT
		LDA	#00000H
		SEC
		SBC	!LFSLCT
		STA	!RTSLCT
IIT240		EQU	$
		PLB			; (DBR) reset
IIT250		EQU	$
		LDA	#0FFF8H
		STA	<PSCKRM		; Ground pos. check ram set
;
		MEM8
		IDX8
		SEP	#00110000B	; memory,index 8bit mode
;
		PHB
		PHK
		PLB			; (DBR) set
;
		JSR	GDMCK800	; information ram set
		LDA	#0E4H
		STA	!GRMSZ1
		STZ	!GRMSZ0+1
;
		LDA	<MPDTNO
		AND	#00111111B
		ASL	A
		TAY
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDX	#000H
		LDA	!GRMSZ0
		BEQ	IIT260		; 4x4 room ?
;					; yes
		INX
		INX
IIT260		EQU	$
		JSR	GSLC400		; scroll check RAM set
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		PLB			; (DBR) reset
;
		STZ	<RMXCPT
		LDA	#002H
		STA	<RMYCPT
		STA	<RMCKXF
		STA	<RMCKYF
;
		LDA	#080H
		STA	<KNCRXP
		STA	<KNCRYP
		LDA	#00FH
		STA	<PLMVKY		; Y player move key flag
		STA	<PLMVKY1	; X
		LDA	#0FFH
		STA	<PLZPS1
		STA	<PLZSPD
		RTS
;
;
IIT2100		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	>GRNOBK
		STA	!GRNDNO		; grond no. pull
;
		LDA	>DPMSBK
		STA	<DPMAIN		; DPMAIN,DPSUB pull
;
		LDA	>SCV2BK
		STA	<SCCV2
		STA	!SSCCV2
		STA	<SCCV1
		STA	!SSCCV1
		LDA	>SCH2BK
		STA	<SCCH2		; SCCH,V pull
		STA	!SSCCH2
		STA	<SCCH1
		STA	!SSCCH1
;
		LDA	>PLXPBK
		STA	<PLXPS1		; Ground position pull
;// 03.04.02 //		AND	#0000FH
;// 03.04.02 //		STA	!RTSLCT
;// 03.04.02 //		ORA	#0FFF0H
;// 03.04.02 //		STA	!LFSLCT
		LDA	>PLYPBK
		STA	<PLYPS1
;// 03.04.02 //		AND	#0000FH
;// 03.04.02 //		STA	!DWSLCT
;// 03.04.02 //		ORA	#0FFF0H
;// 03.04.02 //		STA	!UPSLCT
		LDA	<RMXYCT
		CMP	#00124H
		BCS	IIT2130		;
;					;
		LDA	<PLYPS1
		SEC
		SBC	#00010H
		STA	<PLYPS1
IIT2130		EQU	$
		LDA	#00002H
		STA	<PLMKCH
		LDA	!GDRBF0
		CMP	#0FFFFH
		BNE	IIT2140		;
;					;
		LDA	<PLYPS1
		CLC
		ADC	#00020H
		STA	<PLYPS1
		STZ	<PLMKCH
IIT2140		EQU	$
		LDA	>MPDNBK
		STA	<MPDTNO
		LDA	>SRPTBK
		STA	<SCRPNT		; Ground information pull
		SEC
		SBC	#00400H
		AND	#00F80H
		ASL	A
		XBA
		STA	<YWRITE
		LDA	<SCRPNT
		SEC
		SBC	#00010H
		AND	#0003EH
		LSR	A
		STA	<XWRITE
;
;
		LDA	>UPCTBK
		STA	!PYUPCT
		DEC	A
		DEC	A
		STA	!PYDWCT
		LDA	>LFCTBK
		STA	!PXLFCT
		DEC	A
		DEC	A
		STA	!PXRTCT		; up,dwon,left,right check counter pull
;
		LDA	>SCVUBK+0
		STA	!SCVU+0
		LDA	>SCVUBK+2
		STA	!SCVU+2
		LDA	>SCVUBK+4
		STA	!SCVU+4
		LDA	>SCVUBK+6
		STA	!SCVU+6
;
		LDA	>SCKYBK+0
		STA	!SCKY00
		LDA	>SCKYBK+2
		STA	!SCKY10
		LDA	>SCKXBK+0
		STA	!SCKX00
		LDA	>SCKXBK+2
		STA	!SCKX10		; scroll end check data init. set
;
		LDA	>USCTBK
		STA	!UPSLCT
		LDA	>DSCTBK
		STA	!DWSLCT
		LDA	>LSCTBK
		STA	!LFSLCT
		LDA	>RSCTBK
		STA	!RTSLCT
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		LDA	>CHBKBK
		STA	!CHARBK
		LDA	>CHNOBK
		STA	!CHIKNO
		LDA	>RBGPBK
		STA	!RBGCPT
		LDA	>ROJPBK
		STA	!ROBJCPT
;
		MEM16
		REP	#00100000B	; memory 16bit mode
		RTS
;
;
;
		MEM8
;************************************************************************
;*		Initial RAM  set  [Ground --> Event]	(IIT3000)	*
;************************************************************************
GCCKYD		EQU	$		; ground charcater y-pos. check data
SCVU0DT		EQU	$
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	00200H,00200H,00000H,00000H,00000H,00000H,00000H,00000H
;;;;;;;;		WORD	00400H,00400H,00400H,00400H,00400H,00400H,00400H,00400H
;;;;;;;;		WORD	00600H,00600H,00600H,00600H,00600H,00600H,00600H,00600H
;;;;;;;;		WORD	00600H,00600H,00800H,00600H,00600H,00800H,00600H,00600H
;;;;;;;;		WORD	00A00H,00A00H,00A00H,00A00H,00A00H,00A00H,00A00H,00A00H
;;;;;;;;		WORD	00C00H,00C00H,00C00H,00C00H,00C00H,00C00H,00C00H,00C00H
;;;;;;;;		WORD	00C00H,00C00H,00E00H,00E00H,00E00H,00C00H,00C00H,00E00H
;
SCVU1DT		EQU	$
		WORD	00120H,00020H,00320H,00020H,00000H,00000H,00320H,00320H
		WORD	00320H,00220H,00000H,00000H,00000H,00000H,00320H,00320H
;;;;;;;;		WORD	00400H,00400H,00400H,00400H,00400H,00400H,00400H,00400H
;;;;;;;;		WORD	00600H,00600H,00600H,00600H,00600H,00600H,00600H,00600H
;;;;;;;;		WORD	00600H,00600H,00800H,00600H,00600H,00800H,00600H,00600H
;;;;;;;;		WORD	00A00H,00A00H,00A00H,00A00H,00A00H,00A00H,00A00H,00A00H
;;;;;;;;		WORD	00C00H,00C00H,00C00H,00C00H,00C00H,00C00H,00C00H,00C00H
;;;;;;;;		WORD	00C00H,00C00H,00E00H,00E00H,00E00H,00C00H,00C00H,00E00H
;
SCHU0DT		EQU	$
		WORD	00000H,00100H,00200H,00600H,00600H,00A00H,00C00H,00C00H
		WORD	00000H,00100H,00200H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00200H,00400H,00600H,00800H,00A00H,00C00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00200H,00400H,00600H,00800H,00A00H,00C00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00800H,00A00H,00A00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00800H,00A00H,00A00H,00E00H
;
SCHU1DT		EQU	$
		WORD	00000H,00100H,00500H,00600H,00600H,00A00H,00C00H,00C00H
		WORD	00000H,00100H,00400H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00200H,00400H,00600H,00800H,00A00H,00C00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00200H,00400H,00600H,00800H,00A00H,00C00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00800H,00A00H,00A00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00800H,00A00H,00A00H,00E00H
;
;
SCKY0DT		EQU	$
		WORD	0FF20H,0FF20H,0FF20H,0FF20H,0FF20H,0FF20H,0FF20H,0FF20H
		WORD	0FF20H,0FF20H,00120H,0FF20H,0FF20H,0FF20H,0FF20H,00120H
;;;;;;;;		WORD	00320H,00320H,00320H,00320H,00320H,00320H,00320H,00320H
;;;;;;;;		WORD	00520H,00520H,00520H,00520H,00520H,00520H,00520H,00520H
;;;;;;;;		WORD	00520H,00520H,00720H,00520H,00520H,00720H,00520H,00520H
;;;;;;;;		WORD	00920H,00920H,00920H,00920H,00920H,00920H,00920H,00920H
;;;;;;;;		WORD	00B20H,00B20H,00B20H,00B20H,00B20H,00B20H,00B20H,00B20H
;;;;;;;;		WORD	00B20H,00B20H,00D20H,00D20H,00D20H,00B20H,00B20H,00D20H
;
SCKX0DT		EQU	$
		WORD	0FFFCH,00100H,00300H,00100H,00500H,00900H,00B00H,00B00H
		WORD	0FFFCH,00100H,00300H,00500H,00500H,00900H,00B00H,00B00H
;;;;;;;;		WORD	0FF00H,00100H,00300H,00500H,00700H,00900H,00B00H,00D00H
;;;;;;;;		WORD	0FF00H,0FF00H,00300H,00500H,00500H,00900H,00B00H,00B00H
;;;;;;;;		WORD	0FF00H,0FF00H,00300H,00500H,00500H,00900H,00B00H,00B00H
;;;;;;;;		WORD	0FF00H,00100H,00300H,00500H,00700H,00900H,00B00H,00D00H
;;;;;;;;		WORD	0FF00H,0FF00H,00300H,00500H,00700H,00900H,00900H,00D00H
;;;;;;;;		WORD	0FF00H,0FF00H,00300H,00500H,00700H,00900H,00900H,00D00H
;
SCKY1DT		EQU	$
		WORD	0FF20H,0FF20H,0FF20H,0FF20H,0FF20H,0FF20H,00400H,00400H
		WORD	0FF20H,0FF20H,00120H,0FF20H,0FF20H,0FF20H,00400H,00400H
;;;;;;;;		WORD	00320H,00320H,00320H,00320H,00320H,00320H,00320H,00320H
;;;;;;;;		WORD	00520H,00520H,00520H,00520H,00520H,00520H,00520H,00520H
;;;;;;;;		WORD	00520H,00520H,00720H,00520H,00520H,00720H,00520H,00520H
;;;;;;;;		WORD	00920H,00920H,00920H,00920H,00920H,00920H,00920H,00920H
;;;;;;;;		WORD	00B20H,00B20H,00B20H,00B20H,00B20H,00B20H,00B20H,00B20H
;;;;;;;;		WORD	00B20H,00B20H,00D20H,00D20H,00D20H,00B20H,00B20H,00D20H
;
SCKX1DT		EQU	$
		WORD	00004H,00104H,00300H,00100H,00500H,00900H,00B00H,00B00H
		WORD	00004H,00104H,00300H,00100H,00500H,00900H,00B00H,00B00H
;;;;;;;;		WORD	0FF00H,00100H,00300H,00500H,00700H,00900H,00B00H,00D00H
;;;;;;;;		WORD	0FF00H,0FF00H,00300H,00500H,00500H,00900H,00B00H,00B00H
;;;;;;;;		WORD	0FF00H,0FF00H,00300H,00500H,00500H,00900H,00B00H,00B00H
;;;;;;;;		WORD	0FF00H,00100H,00300H,00500H,00700H,00900H,00B00H,00D00H
;;;;;;;;		WORD	0FF00H,0FF00H,00300H,00500H,00700H,00900H,00900H,00D00H
;;;;;;;;		WORD	0FF00H,0FF00H,00300H,00500H,00700H,00900H,00900H,00D00H
;
;
GCCKXD		EQU	$		;                  x-pos. check data
		WORD	00000H,00000H,00200H,00600H,00600H,00A00H,00C00H,00C00H
		WORD	00000H,00000H,00200H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00200H,00400H,00600H,00800H,00A00H,00C00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00600H,00A00H,00C00H,00C00H
;;;;;;;;		WORD	00000H,00200H,00400H,00600H,00800H,00A00H,00C00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00800H,00A00H,00A00H,00E00H
;;;;;;;;		WORD	00000H,00000H,00400H,00600H,00800H,00A00H,00A00H,00E00H
;
;
EPMKDT		EQU	$		; event player muki data
		HEX	00,04,00,00,00,00,00,00
		HEX	00,00,00,00,00,00,00,00
;;;;;;;;		HEX	00,00,00,00,00,00,00,00
;;;;;;;;		HEX	00,00,00,00,00,00,00,00
;;;;;;;;		HEX	00,00,00,00,00,00,00,00
;;;;;;;;		HEX	00,00,00,00,00,00,00,00
;;;;;;;;		HEX	00,00,00,00,00,00,00,00
;;;;;;;;		HEX	00,00,00,00,00,00,00,00
;
;
ROBJCDT		EQU	$
		HEX	0C,0C,0E,0E,0E,10,10,10
		HEX	0E,0E,0E,0E,10,10,10,10
;;;;;;;;		HEX	10,12,10,13,13,10,12,12
;;;;;;;;		HEX	10,10,12,11,11,12,10,10
;;;;;;;;		HEX	10,10,10,11,11,10,10,10
;;;;;;;;		HEX	10,10,10,10,10,12,10,10
;;;;;;;;		HEX	10,10,12,12,12,12,10,10
;;;;;;;;		HEX	10,10,10,10,10,10,10,10
;
RBGCDT		EQU	$
		HEX	2F,2F,2F,2F,2F,2F,2F,2F
		HEX	2F,2F,2F,2F,2F,2F,2F,2F
;;;;;;;;		HEX	2F,2F,2F,2F,2F,2F,2F,2F
;;;;;;;;		HEX	2F,2F,2F,2F,2F,2F,2F,2F
;;;;;;;;		HEX	2F,2F,2F,2F,2F,2F,2F,2F
;;;;;;;;		HEX	2F,2F,2F,2F,2F,2F,2F,2F
;;;;;;;;		HEX	2F,2F,2F,2F,2F,2F,2F,2F
;;;;;;;;		HEX	2F,2F,2F,2F,2F,2F,2F,2F
;
ECGPTDT		EQU	$
		HEX	0A,0A,0A,0A,02,02,02,0A
		HEX	02,02,0A,02,02,02,02,0A
;;;;;;;;		HEX	0A,0A,0A,09,09,0A,0A,0A
;;;;;;;;		HEX	03,03,0A,04,04,07,05,05
;;;;;;;;		HEX	03,03,0A,04,04,07,05,05
;;;;;;;;		HEX	0A,0A,0A,0A,0A,0A,0A,0A
;;;;;;;;		HEX	06,06,0A,0A,0A,07,07,0A
;;;;;;;;		HEX	06,06,0A,0A,0A,07,07,0A
;
EOJCTBL		EQU	$
		HEX	01,08,08,08,00,00,00,00
		HEX	00,00,08,00,00,00,00,02
;;;;;;;;		HEX	04,04,00,00,00,00,02,02
;;;;;;;;		HEX	04,04,00,01,01,02,00,00
;;;;;;;;		HEX	04,04,04,01,01,02,00,00
;;;;;;;;		HEX	04,00,00,00,00,02,00,00
;;;;;;;;		HEX	03,03,00,02,02,02,02,02
;;;;;;;;		HEX	03,03,00,02,02,02,02,02
;
;
;
;
IIT3000		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		STZ	!GDMMPT		; ground memory buffer pointer clear
;
		LDA	!GRNDNO
;// 03.08.08 //		CMP	#00081H
;// 03.08.08 //		BNE	IIT3005		;
;// 03.08.08 //;					;
;// 03.08.08 //		JMP	IIT3010
;// 03.08.08 //;
;// 03.08.08 //IIT3005		EQU	$
		STA	>GRNORM		; ground no. push
;
		LDA	<DPMAIN
		STA	>DPMSRM		; DPMAIN & DPSUB push
;
		LDA	<SCCV2
		STA	>SCV2RM
		LDA	<SCCH2
		STA	>SCH2RM		; SCCH,V push
;
		LDA	<PLYPS1
		STA	>PLYPRM
		LDA	<PLXPS1
		STA	>PLXPRM		; Ground position push
;
		LDA	!PYUPCT
		STA	>UPCTRM
		LDA	!PXLFCT
		STA	>LFCTRM		; up,left check counter push
;
		LDA	<MPDTNO
		STA	>MPDNRM
		LDA	<SCRPNT
		STA	>SRPTRM		; Ground information push
;
		LDA	!SCVU+0
		STA	>SCVURM+0
		LDA	!SCVU+2
		STA	>SCVURM+2
		LDA	!SCVU+4
		STA	>SCVURM+4
		LDA	!SCVU+6
		STA	>SCVURM+6
;
		LDA	!SCKY00
		STA	>SCKYRM+0
		LDA	!SCKY10
		STA	>SCKYRM+2
		LDA	!SCKX00
		STA	>SCKXRM+0
		LDA	!SCKX10
		STA	>SCKXRM+2
;
		LDA	!UPSLCT
		STA	>USCTRM
		LDA	!DWSLCT
		STA	>DSCTRM
		LDA	!LFSLCT
		STA	>LSCTRM
		LDA	!RTSLCT
		STA	>RSCTRM
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
;// 03.03.27 //		LDA	!GDWTFG
;// 03.03.27 //		STA	>SLFGRM
;
		LDA	!CHARBK
		STA	>CHBKRM
		LDA	!CHIKNO
		STA	>CHNORM
		LDA	!RBGCPT
		STA	>RBGPRM
		LDA	!ROBJCPT
		STA	>ROJPRM
IIT3010		EQU	$
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		JSR	IIT2000		; initial RAM set
;
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	<RMXYCT
		CMP	#01010H
		BNE	IIT3015		; ending spot (zora) ?
;					; yes
		LDA	#00182H
		STA	<RMXYCT
IIT3015		EQU	$
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		PHB
		PHK
		PLB			; (DBR) set
;
		LDA	<RMXYCT
		PHA			; (A) push
		SEC
		SBC	#080H
		STA	<RMXYCT
		TAX
		LDA	>EPMKDT,X
		STA	<PLMKCH		; player muki set
		STZ	!CCHGPT
		LDA	>ROBJCDT,X
		STA	!ROBJCPT
		LDA	>RBGCDT,X
		STA	!RBGCPT		; reset OBJ,BG. character point set
		PHX			; (X) push
		LDA	>EOJCTBL,X
		STA	<WORK0		; (work0) <-- Obj. CG. pointer
		LDA	>ECGPTDT,X
		JSL	>GCGCHNG	; CG. reset
		PLX			; (X) pull
;
		MEM16
		IDX16
		REP	#00110000B	; memory,index 16bit mode
;
;// 03.03.25 //		TXA
;// 03.03.25 //		AND	#0003FH
;// 03.03.25 //		TAX
;// 03.03.25 //		LDA	>RMSZD0,X
;// 03.03.25 //		AND	#000FFH
;// 03.03.25 //		ASL	A
;// 03.03.25 //		TAX
;// 03.03.25 //		LDA	>RMYRPD,X
;// 03.03.25 //		STA	<WORK0
;// 03.03.25 //		LDA	>RMXRPD,X
;// 03.03.25 //		STA	<WORK2
		LDA	#003F0H
		STA	<WORK0
;
;
		LDA	<RMXYCT
		AND	#0003FH
		ASL	A
		TAX
		LDA	>GCCKYD,X
		STA	!GCCKY0
		LDA	>GCCKXD,X
		LSR	A
		LSR	A
		LSR	A
		STA	!GCCKX0
;
		LDA	<WORK0
		STA	!GCCKY1
;// 03.03.25 //		LDA	<WORK2
		LDA	<WORK0
		LSR	A
		LSR	A
		LSR	A
		STA	!GCCKX1
;
;
		LDA	<RMXYCT
		ASL	A
		TAY
;
		IDX8
		SEP	#00010000B	; index 8bit mode
;
		LDA	SCVU0DT,Y
		STA	!SCVU+0
		LDA	SCVU1DT,Y
		STA	!SCVU+2
		LDA	SCHU0DT,Y
		STA	!SCVU+4
		LDA	SCHU1DT,Y
		STA	!SCVU+6
;
		LDA	SCKY0DT,Y
		STA	!SCKY00
		LDA	SCKY1DT,Y
		STA	!SCKY10
		LDA	SCKX0DT,Y
		STA	!SCKX00
		LDA	SCKX1DT,Y
		STA	!SCKX10
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		PLA			; (A) pull
		STA	<RMXYCT
;
		PLB			; (DBR) reset
;
		JSL	>NKCGST1	; nuki CG. set
		RTS
;
;
;
;
;************************************************************************
;*		Initial RAM  set  [Event --> Ground]	(IIT4000)	*
;************************************************************************
IIT4000		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		STZ	!GDMMPT		; ground memory buffer pointer clear
;
		LDA	>GRNORM
		STA	!GRNDNO		; grond no. pull
;
		LDA	>DPMSRM
		STA	<DPMAIN		; DPMAIN,DPSUB pull
;
		LDA	>SCV2RM
		STA	<SCCV2
		STA	!SSCCV2
		STA	<SCCV1
		STA	!SSCCV1
		LDA	>SCH2RM
		STA	<SCCH2		; SCCH,V pull
		STA	!SSCCH2
		STA	<SCCH1
		STA	!SSCCH1
;
		LDA	>PLYPRM
		STA	<PLYPS1
;// 03.04.02 //		AND	#0000FH
;// 03.04.02 //		STA	!DWSLCT
;// 03.04.02 //		ORA	#0FFF0H
;// 03.04.02 //		STA	!UPSLCT
		LDA	>PLXPRM
		STA	<PLXPS1		; Ground position pull
;// 03.04.02 //		AND	#0000FH
;// 03.04.02 //		STA	!RTSLCT
;// 03.04.02 //		ORA	#0FFF0H
;// 03.04.02 //		STA	!LFSLCT
;
		LDA	>MPDNRM
		STA	<MPDTNO
		LDA	>SRPTRM
		STA	<SCRPNT		; Ground information pull
		SEC
		SBC	#00400H
		AND	#00F80H
		ASL	A
		XBA
		STA	<YWRITE
		LDA	<SCRPNT
		SEC
		SBC	#00010H
		AND	#0003EH
		LSR	A
		STA	<XWRITE
;
		LDA	>UPCTRM
		STA	!PYUPCT
		DEC	A
		DEC	A
		STA	!PYDWCT
		LDA	>LFCTRM
		STA	!PXLFCT
		DEC	A
		DEC	A
		STA	!PXRTCT		; up,dwon,left,right check counter pull
;
;
		LDA	>SCVURM+0
		STA	!SCVU+0
		LDA	>SCVURM+2
		STA	!SCVU+2
		LDA	>SCVURM+4
		STA	!SCVU+4
		LDA	>SCVURM+6
		STA	!SCVU+6
;
		LDA	>SCKYRM+0
		STA	!SCKY00
		LDA	>SCKYRM+2
		STA	!SCKY10
		LDA	>SCKXRM+0
		STA	!SCKX00
		LDA	>SCKXRM+2
		STA	!SCKX10		; scroll end check data init. set
;
		LDA	>USCTRM
		STA	!UPSLCT
		LDA	>DSCTRM
		STA	!DWSLCT
		LDA	>LSCTRM
		STA	!LFSLCT
		LDA	>RSCTRM
		STA	!RTSLCT
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
;// 03.03.27 //		LDA	>SLFGRM
;// 03.03.27 //		STA	!GDWTFG
;// 03.03.27 //		STZ	!GDWTFG
;// 03.03.27 //		LDX	#004H
;// 03.03.27 //IIT4040		EQU	$
;// 03.03.27 //		DEX
;// 03.03.27 //		LSR	A
;// 03.03.27 //		BCC	IIT4040		;
;// 03.03.27 //;					;
;// 03.03.27 //		STX	!SCRLFG
;// 03.03.27 //		STX	!GATMFG
;
		LDA	>CHBKRM
		STA	!CHARBK
		LDA	>CHNORM
		STA	!CHIKNO
		LDA	>RBGPRM
		STA	!RBGCPT
		LDA	>ROJPRM
		STA	!ROBJCPT
		LDX	<MPDTNO
		LDA	>ROJCTBL,X
		STA	<WORK0		; (work0) <-- Obj. CG. pointer
		LDA	>CGPTDT,X
		JSL	>GCGCHNG	; CG. reset
		JSL	>NKCGST1	; nuki CG. set
;
		STZ	<RMXCPT
		LDA	#002H
		STA	<RMYCPT
		STA	<RMCKXF
		STA	<RMCKYF
;
		LDA	#080H
		STA	<KNCRXP
		STA	<KNCRYP
		LDA	#00FH
		STA	<PLMVKY		; Y player move key flag
		STA	<PLMVKY1	; X
		LDA	#0FFH
		STA	<PLZPS1
		STA	<PLZSPD
;
		MEM8
		IDX8
		SEP	#00110000B	; memory,index 8bit mode
;
		JSL	>SWSPCL1	; swimming flag clear
;
		JSR	GDMCK800	; information ram set
		LDA	#0E4H
		STA	!GRMSZ1
		STZ	!GRMSZ0+1
		RTS
;
;
;
;
;************************************************************************
;*		Initial RAM  set  [Warp]		(IIT5000)	*
;************************************************************************
WMPDNRM		EQU	$		; (MPDTNO)
		WORD	00003H,00016H,00018H,0002CH,0002FH,00030H,0003BH,0003FH
;
		WORD	0005BH
;
		WORD	00035H,0000FH,00015H,00033H,00012H,0003FH,00055H,0007FH
WSRPTRM		EQU	$		; (SCRPNT)
		WORD	01600H,00888H,00B30H,00588H,00798H,01880H,0069EH,00810H
;
		WORD	0002EH
;
		WORD	01242H,00680H,00112H,0059EH,0048EH,00280H,00112H,00280H
WSCCVRM		EQU	$		; (SCCV2,SCCV1)
		WORD	002CAH,00516H,00759H,00AB9H,00AFAH,00F1EH,00EDFH,00F05H
;
		WORD	00600H
;
		WORD	00E46H,002C6H,0042AH,00CBAH,0049AH,00E56H,0042AH,00E56H
WSCCHRM		EQU	$		; (SCCH2,SCCH1)
		WORD    0060EH,00C4EH,0017EH,00840H,00EB2H,00000H,006F2H,00E75H
;
		WORD	00778H
;
		WORD	00C0AH,00E06H,00A8AH,006EAH,00462H,00E00H,00A8AH,00E00H
WPLYPRM		EQU	$		; (PLYPS1)
		WORD	00328H,00578H,007B7H,00B17H,00B58H,00FA8H,00F3DH,00F67H
;
		WORD	0065CH
;
		WORD	00EA8H,00328H,00488H,00D18H,004F8H,00EB8H,00488H,00EB8H
WPLXPRM		EQU	$		; (PLXPS1)
		WORD	00678H,00CC8H,00200H,008B8H,00F30H,00078H,00778H,00EF3H
;
		WORD	007F0H
;
		WORD	00C90H,00E80H,00B10H,00770H,004E8H,00E68H,00B10H,00E68H
WUPCTRM		EQU	$		; (PYUPCT)
		WORD	00337H,00583H,007C6H,00B26H,00B67H,00F8DH,00F4CH,00F72H
;
		WORD	0066DH
;
		WORD	00EB3H,00333H,00497H,00D27H,00507H,00EC3H,00497H,00EC3H
WLFCTRM		EQU	$		; (PXLFCT)
		WORD	00683H,00CD3H,0020BH,008BFH,00F37H,0008DH,0077FH,00EFAH
;
		WORD	007F7H
;
		WORD	00C97H,00E8BH,00B17H,00777H,004EFH,00E85H,00B17H,00E85H
WUPSCRM		EQU	$		; (UPSLCT)
		WORD	0FFF6H,0FFFAH,00007H,0FFF7H,0FFF6H,00000H,0FFF1H,0FFFBH
;
		WORD	00000H
;
		WORD	0FFFAH,0000AH,0FFF6H,0FFF6H,0FFF6H,0FFFAH,0FFF6H,0FFFAH
WLFSCRM		EQU	$		; (LFSLCT)
		WORD	0FFF2H,0FFF2H,00002H,00000H,0000EH,00000H,0FFFEH,0000BH
;
		WORD	0FFF8H
;
		WORD	00006H,0FFFAH,0FFFAH,00006H,0000EH,00000H,0FFFAH,00000H
;
;
;
IIT5000		EQU	$
		PHB
		PHK
		PLB			; (DBR) set
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		STZ	!GDMMPT		; ground memory buffer pointer clear
;
		ASL	!MEMSTT
		LDX	!MEMSTT
;// 03.05.10 //		LDA	WDPMSRM,X
;// 03.05.10 //		STA	<DPMAIN		; DPMAIN,DPSUB pull
;
IIT5100		EQU	$
		LDA	WSCCVRM,X
		STA	<SCCV1
		STA	<SCCV2
		STA	!SSCCV2
		STA	!SSCCV1
		LDA	WSCCHRM,X
		STA	<SCCH1
		STA	<SCCH2		; SCCH,V pull
		STA	!SSCCH2
		STA	!SSCCH1
;
		LDA	WPLYPRM,X
		STA	<PLYPS1
		LDA	WPLXPRM,X
		STA	<PLXPS1		; Ground position pull
;
		LDA	WUPSCRM,X
		STA	!UPSLCT
		LDA	#00000H
		SEC
		SBC	!UPSLCT
		STA	!DWSLCT
		LDA	WLFSCRM,X
		STA	!LFSLCT
		LDA	#00000H
		SEC
		SBC	!LFSLCT
		STA	!RTSLCT
;
		LDA	WMPDNRM,X
		STA	<MPDTNO
		STA	!GRNDNO
		LDA	WSRPTRM,X
		STA	<SCRPNT		; Ground information pull
		SEC
		SBC	#00400H
		AND	#00F80H
		ASL	A
		XBA
		STA	<YWRITE
		LDA	<SCRPNT
		SEC
		SBC	#00010H
		AND	#0003EH
		LSR	A
		STA	<XWRITE
;
		LDA	WUPCTRM,X
		STA	!PYUPCT
;// 03.02.01 //		LDA	DDWCTRM,X
		DEC	A
		DEC	A
		STA	!PYDWCT
		LDA	WLFCTRM,X
		STA	!PXLFCT
;// 03.02.01 //		LDA	DRTCTRM,X
		DEC	A
		DEC	A
		STA	!PXRTCT		; up,dwon,left,right check counter pull
;
		STZ	!GDRBF0
		STZ	!GDRBF1
;
		PLB			; (DBR) reset
		JSR	IIT250		;
;
		JSL	>ALCLER		; enemy clear
		JSL	>GREDS2		; ground enemy set
;
		STZ	<PWORK6
		JSR	PFLGCL		; player flag clear
		RTL
;
;
IIT5800		EQU	$
		JSR	INCLST1
		LDX	<MPDTNO
		LDA	>ROJCTBL,X
		STA	<WORK0
		LDA	>CGPTDT,X
		JSL	>GCGCHNG	; ground cg. set
		JSL	>NKCGST0	; nuki
;
		JSR	CGWKST		; (CGWORK) set
		RTL
;
;
;
;
;************************************************************************
;*		Initial RAM  set  [Warp]		(IIT6000)	*
;************************************************************************
WPCKRMD		EQU	$
		WORD	0000FH,00035H,00033H,00015H,0003FH,00012H
		WORD	0007FH,00055H
WPCKED		EQU	$
;
;
IIT6000		EQU	$
		PHB
		PHK
		PLB			; (DBR) set
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDX	#WPCKED-WPCKRMD
		LDA	<MPDTNO
IIT6040		EQU	$
		DEX
		DEX
		CMP	>WPCKRMD,X
		BNE	IIT6040		; check ok ?
;					; yes
		TXA
		CLC
		ADC	#00012H
		TAX
		STZ	!GDMMPT		; ground memory buffer pointer clear
		JMP	IIT5100
;
;
;
;
;
;
;***************************** GROUND ***********************************
;************************************************************************
;*		Ground BG. write			(GNDRWT0)	*
;************************************************************************
GNDRWT0		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	<SCRPNT
		PHA			; (A) push
		LDA	<XWRITE
		PHA			; (A) push
		LDA	<YWRITE
		PHA			; (A) push
;
		LDX	<MPDTNO
		LDA	>MPSIZE,X
		AND	#000FFH
		BEQ	GDRW200		; small ?
;					; yes
		LDA	#00390H
		STA	<SCRPNT
		SEC
		SBC	#00400H
		AND	#00F80H
		ASL	A
		XBA
		STA	<YWRITE
		LDA	<SCRPNT
		SEC
		SBC	#00010H
		AND	#0003EH
		LSR	A
		STA	<XWRITE
;
		BRA	GDRW200
;
;
;
;************************************************************************
;*		Ground BG. write			(GNDRWT1)	*
;************************************************************************
GNDRWT1		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	<SCRPNT
		PHA			; (A) push
		LDA	<XWRITE
		PHA			; (A) push
		LDA	<YWRITE
		PHA			; (A) push
;
		LDX	<MPDTNO
		LDA	>MPSIZE,X
		AND	#000FFH
		BEQ	GDRW140		; small ?
;					; yes
		LDA	#00390H
		STA	<SCRPNT
		SEC
		SBC	#00400H
		AND	#00F80H
		ASL	A
		XBA
		STA	<YWRITE
		LDA	<SCRPNT
		SEC
		SBC	#00010H
		AND	#0003EH
		LSR	A
		STA	<XWRITE
GDRW140		EQU	$
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		JSR	MPTOGD
;
GDRW200		EQU	$
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		LDA	#0FFFFH
		STA	<CWORK0
		STZ	<CWORK2
		STZ	<CWORK4
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		JSR	MPALST		; ground all write
;
		MEM16
		REP	#00100000B	; memory 16bit mode
;
		PLA			; (A) pull
		STA	<YWRITE
		PLA			; (A) pull
		STA	<XWRITE
		PLA			; (A) pull
		STA	<SCRPNT
;
		MEM8
		SEP	#00100000B	; memory 8bit mode
;
		LDA	#bgw4
		STA	<BGWTFG
		STA	!GMAPDF
		INC	<GAMEMD
		STZ	<BLKFLG		; blanking off
		RTS
;
;
;
;************************************************************************
;*		data o >GDBUF0 & >GDBUF1 ni okuru			*
;************************************************************************
MPINT0		EQU	$
		JSR	GNDRWT1		; BG. write
;
                LDA     #MD_wpin
                STA     <SLMODE
                STZ     <JRSBPT
		STZ	<GAMEMD
		RTS
;
;
;
;
;************************************************************************
;*		data o >GDBUF0 & >GDBUF1 ni okuru			*
;************************************************************************
BDRADRD		EQU	$		; bomb-door address data
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	01C0CH,01C0CH,00000H,00000H,00000H,00000H,00000H,00000H
;
		WORD	01C0CH,01C0CH,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;
		WORD	00000H,00000H,00000H,00000H,003B0H,0180CH,0180CH,00288H
		WORD	00000H,00000H,00000H,00000H,00000H,0180CH,0180CH,00000H
;
;
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
		WORD	01AB6H,01AB6H,00000H,00E2EH,00E2EH,00000H,00000H,00000H
;
		WORD	01AB6H,01AB6H,00000H,00E2EH,00E2EH,00000H,00000H,00000H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;
		WORD	00000H,00000H,00000H,00000H,003B0H,00000H,00000H,00288H
		WORD	00000H,00000H,00000H,00000H,00000H,00000H,00000H,00000H
;
;
;
MPTOGD		EQU	$
		MEM16
		IDX16
		REP	#00110000B
;
		JSR	MPCNG
;
		LDX	#0001EH
		LDA	#betaut
MPG40		EQU	$
		STA	>GDBUF2+000H,X
		STA	>GDBUF2+020H,X
		STA	>GDBUF2+020H,X
		STA	>GDBUF2+040H,X
		STA	>GDBUF2+060H,X
		DEX
		DEX
		BPL	MPG40		;
;					;
		LDX	!GDRBF0
		BEQ	MPG200		; door open ?
;					; yes
		CPX	#0FFFFH
		BEQ	MPG200		;
;					;
		CPX	#08000H
		BCS	MPG80		;
;					;
		LDA	#drut0
		STA	>GDBUF0,X
		JSL	>GDMMSET	; ground memory set
		LDA	#drut1
		BRA	MPG100
;
MPG80		EQU	$
		TXA
		AND	#01FFFH
		TAX
		LDA	#drutE
		JSL	>GDMMSET	; ground memory set
		STA	>GDBUF0,X
		LDA	#drutF
MPG100		EQU	$
		STA	>GDBUF0+2,X
		INX
		INX
		JSL	>GDMMSET	; ground memory set
		DEX
		DEX
		STZ	!GDRBF0
MPG200		EQU	$
		LDA	#plisi0
		LDX	<MPDTNO
		CPX	#00033H
		BNE	MPG220		; iwa set ?
;					; yes
		STA	>GDBUF0+02A8H
MPG220		EQU	$
		CPX	#0002FH
		BNE	MPG240		; iwa set ?
;					; yes
		STA	>GDBUF0+0BB2H
MPG240		EQU	$
MPG280		EQU	$
		MEM8
		IDX8
		SEP	#00110000B	; memory,index 8bit mode
;
		LDX	<MPDTNO
		CPX	#080H
		BCS	MPG300		; ground ?
;					; yes
		LDA	>GNDTBL,X
		AND	#00100000B
		BEQ	MPG300		; shikake on ?
;					; yes
;// 03.07.09 //		MEM16
;// 03.07.09 //		IDX16
;// 03.07.09 //		REP	#00110000B	; memory,index 16bit mode
;// 03.07.09 //;
;// 03.07.09 //		LDA	<MPDTNO
;// 03.07.09 //		ASL	A
;// 03.07.09 //		TAX
;// 03.07.09 //		JSR	(GOPTNDT,X)
;// 03.07.09 //;
;// 03.07.09 //		MEM8
;// 03.07.09 //		IDX8
;// 03.07.09 //		SEP	#00110000B
		JSL	>GDSKKCK	; ground shikake check
MPG300		EQU	$
		LDX	<MPDTNO
		LDA	>GNDTBL,X
		AND	#00000010B
		BEQ	MPG400		; bomb-door open ?
;					; yes
		MEM16
		IDX16
		REP	#00110000B	; memory,index 16bit mode
;
		LDA	<MPDTNO
		ASL	A
		TAX
		LDA	>BDRADRD,X
		TAX
		LDA	#drutE
		STA	>GDBUF0,X
		LDA	#drutF
		STA	>GDBUF0+2,X
;
		MEM8
		IDX8
		SEP	#00110000B	; memory,index 8bit mode
MPG400		EQU	$
		RTS
;
;
;
;
;
MPBGUP		EQU	$		;matomete ? retu kaku
                MEM8
                IDX8
                SEP     #00110000B
;
                LDA     #08H
                STA     !GDWTFG
;
		LDA	#bgw3
		STA	<BGWTFG
;
                MEM16
                IDX16
                REP     #00110000B
;
		LDY	<WORK+14
;// 03.06.27 //		LDA	#0007FH		;]VRAMD+4 ni kosuu(007F) o set
		LDA	#00080H
;// 02.12.25 //		STA	VRAMD+2,Y	;]
;// 03.02.06 //		STA	!RWBUFF,Y	;]
		STA	!BGCWBF,Y
		INY
		INY
		STY	<WORK+14
MPBGUP1         EQU     $
		JSR	MPUDLN		;ue(sita) no BG o kaku
;
		LDA	<SCRPNT		;]
		SEC			; ]SCRPNT=SCRPNT-64
		SBC	#0128		; ]gamen no kihonten
		STA	<SCRPNT		;]
;
		LDA	<YWRITE		;]
		DEC	A		; ]unit tani no tate no iti
		AND	#001FH		; ]
		STA	<YWRITE		;]
;
		DEC	<WORK+8
		BNE	MPBGUP1
;
		LDA	#0FFFFH
		LDX	<WORK+14
;// 02.12.25 //		STA	VRAMD+2,X
;// 03.02.06 //		STA	!RWBUFF,X
		STA	!BGCWBF,X
		RTS
;
;
MPBGLF		EQU	$		;matomete ? retu kaku
		MEM8
		IDX8
		SEP	#00110000B
;
                LDA     #02H
                STA     !GDWTFG
;
		LDA	#bgw3
		STA	<BGWTFG
;
		MEM16
		IDX16
		REP	#00110000B
;
		LDY	<WORK+14
;// 03.06.27 //		LDA	#0803FH		;]BG no kosu set 803F
		LDA	#08040H
;// 02.12.25 //		STA	VRAMD+2,Y	;]		 tate kosuu
;// 03.02.06 //		STA	!RWBUFF,Y	;]		 tate kosuu
		STA	!BGCWBF,Y
		INY
		INY
		STY	<WORK+14
MPBGLF1		EQU	$
		JSR	MPRLLN		;yoko no BG o kaku
;
		DEC	<SCRPNT		; ]SCRPNT=SCRPNT-2
		DEC	<SCRPNT		; ]gamen no kihonten
;
		LDA	<XWRITE		;]
		DEC	A		; ]unit tani no yoko no iti
		AND	#001FH		; ]
		STA	<XWRITE		;]
;
		DEC	<WORK+8
		BNE	MPBGLF1
;
		LDA	#0FFFFH
		LDX	<WORK+14
;// 02.12.25 //		STA	VRAMD+2,X
;// 03.02.06 //		STA	!RWBUFF,X
		STA	!BGCWBF,X
		RTS
;
;
;
;************************************************************************
;*              map o kaeru			                        *
;************************************************************************
GNXBGWT		EQU	$
                MEM16
                IDX16
                REP     #00110000B
;
                JSR     MPCNG           ;data no tensou
;
		LDX	#0001EH
		LDA	#betaut
GNXBW20		EQU	$
		STA	>GDBUF2+000H,X
		STA	>GDBUF2+020H,X
		STA	>GDBUF2+040H,X
		STA	>GDBUF2+060H,X
		DEX
		DEX
		BPL	GNXBW20		;
;					;
;// 03.06.26 //		LDA	#plisi1
;// 03.06.26 //		LDX	<MPDTNO
;// 03.06.26 //		CPX	#0002AH
;// 03.06.26 //		BNE	GNXBW220	; black-iwa set ?
;// 03.06.26 //;					; yes
;// 03.06.26 //		STA	>GDBUF0+042EH
;// 03.06.26 //GNXBW220	EQU	$
;// 03.06.26 //		CPX	#0002FH
;// 03.06.26 //		BNE	GNXBW240	; black-iwa set ?
;// 03.06.26 //;					; yes
;// 03.06.26 //		STA	>GDBUF0+0B32H
;// 03.06.26 //GNXBW240	EQU	$
;// 03.06.26 //		CPX	#00033H
;// 03.06.26 //		BNE	GNXBW260	; black-iwa set ?
;// 03.06.26 //;					; yes
;// 03.06.26 //		STA	>GDBUF0+02A8H
;// 03.06.26 //GNXBW260	EQU	$
;// 03.06.26 //                MEM8
;// 03.06.26 //                IDX8
;// 03.06.26 //                SEP     #00110000B
;// 03.06.26 //;
;// 03.06.26 //		LDX	<MPDTNO
;// 03.06.26 //		LDA	>GNDTBL,X
;// 03.06.26 //		AND	#00100000B
;// 03.06.26 //		BEQ	GNXBW400	; shikake on ?
;// 03.06.26 //;					; yes
;// 03.06.26 //		MEM16
;// 03.06.26 //		IDX16
;// 03.06.26 //		REP	#00110000B	; memory,index 16bit mode
;// 03.06.26 //;
;// 03.06.26 //		LDA	<MPDTNO
;// 03.06.26 //		ASL	A
;// 03.06.26 //		TAX
;// 03.06.26 //		JSR	(GOPTNDT,X)
;// 03.06.26 //;
;// 03.06.26 //		MEM8
;// 03.06.26 //		IDX8
;// 03.06.26 //		SEP	#00110000B
;// 03.06.26 //GNXBW400	EQU	$
		JSR	MPG200		; GDBUF0 set
;
		INC	<GAMEMD		;MPSUBx1CALL ni iku
                RTS

;
;
;
		MEM8
		IDX8
;************************************************************************
;*		map o kaetatoki ni saisyo ni kaku			*
;************************************************************************
WTVRTBL		EQU	$
                WORD    MPTFG0		;0
                WORD    WTVRAM4		;1 (R)
                WORD    WTVRAM3		;2 (L)
                WORD    MPTFG0		;3
                WORD    WTVRAM2		;4 (D)
                WORD    MPTFG0		;5
                WORD    MPTFG0		;6
                WORD    MPTFG0		;7
                WORD    WTVRAM1		;8 (U)
;
WTVRTBL1	EQU	$
                WORD    MPTFG0		;0
                WORD    WTVRAM14	;1 (R)
                WORD    WTVRAM13	;2 (L)
                WORD    MPTFG0		;3
                WORD    WTVRAM12	;4 (D)
                WORD    MPTFG0		;5
                WORD    MPTFG0		;6
                WORD    MPTFG0		;7
                WORD    WTVRAM11	;8 (U)
;
;
WTVRAM		EQU	$
		MEM8
		IDX8
		SEP	#00110000B
;
		LDX	<MPDTNO
		LDA	>MPSIZE,X
		BNE	WTVRAM10
;
;
                LDA     !GDWTFG
		ASL	A
		TAX
		JMP	(WTVRTBL,X)
;
;
WTVRAM10	EQU	$
                LDA     !GDWTFG
		ASL	A
		TAX
		JMP	(WTVRTBL1,X)
;
;
XYWKEI		EQU	$
		MEM16
		IDX16
		LDA	<SCRPNT
		SEC
		SBC	#00400H
		AND	#00F80H
		ASL	A
		XBA
		AND	#0001FH
		STA	<YWRITE
		LDA	<SCRPNT
		SEC
		SBC	#00010H
		AND	#0003EH
		LSR	A
		AND	#0001FH
		STA	<XWRITE
;
		RTS
;
WTVRAM1        EQU     $		;ue
                MEM16
                IDX16
                REP     #00110000B
;
                LDA     <SCRPNT         ;SCRPNT + 2380H
                CLC
                ADC     #0380H
                STA     <SCRPNT
;
		LDA     #0001FH
		STA     <YWRITE
;
                STZ     <WORK+14        ;VRAMD+2,? ? o cls
;
                LDA     #0007H          ;nanretu BG o kakuka
                STA     <WORK+8
;
                JSR     MPBGUP          ;BG o ue ni kaku
;
                MEM8
                IDX8
                SEP     #00110000B
                RTS

;
;
;
;
WTVRAM2         EQU     $		;sita
                MEM16
                IDX16
                REP     #00110000B
;
		LDA	<SCRPNT		
WTVRAM21	EQU	$
		CMP	#0080H
		BCC	WTVRAM22
		SBC	#0080H
		BRA	WTVRAM21
WTVRAM22	EQU	$
                CLC
                ADC     #0780H
                STA     <SCRPNT
;
                STZ     <WORK+14        ;VRAMD+2,? ? o cls
		LDA	#007H
                STA     <YWRITE
;
                LDA     #0008H          ;nanretu BG o kakuka
                STA     <WORK+8
;
                JSR     MPBGUP          ;BG o ue ni kaku
;
                LDA     <YWRITE         ;Y no BG o kaku ichi
                CLC
                ADC     #0009H
                AND     #001FH
                STA     <YWRITE
;
                LDA     <SCRPNT         ;SCRPNT += B80H
                SEC
                SBC     #0B80H
                STA     <SCRPNT
;
                MEM8
                IDX8
                SEP     #00110000B
;
                RTS
;
;
;
;
WTVRAM3         EQU     $		;hidari
                MEM16
                IDX16
                REP     #00110000B
;
                LDA     <SCRPNT         ;SCRPNT + 8EH
                CLC
                ADC     #000EH
                STA     <SCRPNT
;
		LDA	#001FH
		STA	<XWRITE
;
                STZ     <WORK+14        ;VRAMD+2,? ? o cls
;
                LDA     #0007H          ;nanretu BG o kakuka
                STA     <WORK+8
;
                JSR     MPBGLF          ;BG o ue ni kaku
;
                MEM8
                IDX8
                SEP     #00110000B
;
                RTS
;
;
;
;
WTVRAM4         EQU     $		;migi
                MEM16
                IDX16
                REP     #00110000B
;
                LDA     <SCRPNT         ;SCRPNT - 40H + 1EH
                SEC
                SBC     #0060H
                CLC
                ADC     #001EH
                STA     <SCRPNT
;
                STZ     <WORK+14        ;VRAMD+2,? ? o cls
;
		LDA	#00007H
		STA	<XWRITE
;
                LDA     #0008H          ;nanretu BG o kakuka
                STA     <WORK+8
;
                JSR     MPBGLF          ;BG o ue ni kaku
;
                LDA     <XWRITE         ;Y no BG o kaku ichi
                CLC
                ADC     #0009H
                AND     #001FH
                STA     <XWRITE
;
                LDA     <SCRPNT         ;SCRPNT -= 2EH
                SEC
                SBC     #002EH
                STA     <SCRPNT
;
                MEM8
                IDX8
                SEP     #00110000B
;
                RTS
;
;
;
;
WTVRAM11        EQU     $		;ue
                MEM16
                IDX16
                REP     #00110000B
;
		LDA	<SCRPNT		;SAVE
		SEC
		SBC	#00700H
		STA	>SRPTSB
;
		LDA	<XWRITE
		STA	>XWRTSB
;
		LDA	#0000AH
		STA	>YWRTSB
;
		LDA	#01390H
		STA	<SCRPNT
                STZ     <XWRITE
		LDA	#0001FH
                STA     <YWRITE
;
                STZ     <WORK+14        ;VRAMD+2,? ? o cls
;
                LDA     #0007H          ;nanretu BG o kakuka
                STA     <WORK+8
;
                JSR     MPBGUP          ;BG o ue ni kaku
;
                MEM8
                IDX8
                SEP     #00110000B
                RTS

;
;
;
;
WTVRAM12        EQU     $		;sita
                MEM16
                IDX16
                REP     #00110000B
;
		LDA	<SCRPNT		;SAVE
		AND	#000FFH
		STA	>SRPTSB
;
		LDA	<XWRITE
		STA	>XWRTSB
;
		LDA	#00018H
		STA	>YWRTSB
;
		LDA	#00790H
		STA	<SCRPNT
                STZ     <XWRITE
		LDA	#007H
                STA     <YWRITE
;
                STZ     <WORK+14        ;VRAMD+2,? ? o cls
;
                LDA     #0008H          ;nanretu BG o kakuka
                STA     <WORK+8
;
                JSR     MPBGUP          ;BG o ue ni kaku
;
                LDA     <YWRITE         ;Y no BG o kaku ichi
                CLC
                ADC     #0009H
                AND     #001FH
                STA     <YWRITE
;
                LDA     <SCRPNT         ;SCRPNT += B80H
                SEC
                SBC     #0B80H
                STA     <SCRPNT
;
                MEM8
                IDX8
                SEP     #00110000B
;
                RTS
;
;
;
;
WTVRAM13         EQU     $		;hidari
                MEM16
                IDX16
                REP     #00110000B
;
		LDA	<SCRPNT		;SAVE
		SEC
		SBC	#00020H
		STA	>SRPTSB
;
		LDA	#00008H
		STA	>XWRTSB
;
		LDA	<YWRITE
		STA	>YWRTSB
;
		LDA	#0044EH
		STA	<SCRPNT
                STZ     <YWRITE
		LDA	#0001FH
		STA	<XWRITE
;
                STZ     <WORK+14        ;VRAMD+2,? ? o cls
;
                LDA     #0007H          ;nanretu BG o kakuka
                STA     <WORK+8
;
                JSR     MPBGLF          ;BG o ue ni kaku
;
                MEM8
                IDX8
                SEP     #00110000B
;
                RTS
;
;
;
;
WTVRAM14         EQU     $		;migi
                MEM16
                IDX16
                REP     #00110000B
;
		LDA	<SCRPNT		;SAVE
		SEC
		SBC	#00060H
		STA	>SRPTSB
;
		LDA	#00018H
		STA	>XWRTSB
;
		LDA	<YWRITE
		STA	>YWRTSB
;
		LDA	#0041EH
		STA	<SCRPNT
                STZ     <YWRITE
		LDA	#00007H
		STA	<XWRITE
;
                STZ     <WORK+14        ;VRAMD+2,? ? o cls
;
                LDA     #0008H          ;nanretu BG o kakuka
                STA     <WORK+8
;
                JSR     MPBGLF          ;BG o ue ni kaku
;
                LDA     <XWRITE         ;Y no BG o kaku ichi
                CLC
                ADC     #0009H
                AND     #001FH
                STA     <XWRITE
;
                LDA     <SCRPNT         ;SCRPNT -= 2EH
                SEC
                SBC     #002EH
                STA     <SCRPNT
;
                MEM8
                IDX8
                SEP     #00110000B
;
                RTS
;
;
;
;
;************************************************************************
;*              sukuroru                                                 *
;************************************************************************
GSLBTBL		EQU	$
                WORD    MPTFG0          ;0
                WORD    MPSUB42         ;1 (R)
                WORD    MPSUB32         ;2 (L)
                WORD    MPTFG0          ;3
                WORD    MPSUB22         ;4 (D)
                WORD    MPTFG0          ;5
                WORD    MPTFG0          ;6
                WORD    MPTFG0          ;7
                WORD    MPSUB12         ;8 (U)
;
;
GSLBGWT		EQU	$
                MEM8
                IDX8
                SEP     #00110000B
;
                LDA     !GDWTFG
		ASL	A
		TAX
		JMP	(GSLBTBL,X)
;
;
;
;
MPSUB12         EQU     $
                MEM16
                IDX16
                REP     #00110000B
;
                STZ     <WORK+14
;
;// 03.02.04 //		LDY	<WORK+14
;// 03.02.04 //		LDA	#0007FH		;]VRAMD+4 ni kosuu(007F) o set
;// 03.02.04 //		STA	!WBGBUF,Y
;// 03.02.04 //		INY
;// 03.02.04 //		INY
;// 03.02.04 //		STY	<WORK+14
;// 03.02.04 //;
;// 03.02.04 //                JSR     MPUDLN          ;ue(sita) no BG o kaku
;// 03.02.04 //;
;// 03.02.04 //                LDA     <SCRPNT         ;]
;// 03.02.04 //                SEC                     ; ]SCRPNT=SCRPNT-64(unit)
;// 03.02.04 //                SBC     #0128           ; ]gamen no kihonten
;// 03.02.04 //                STA     <SCRPNT         ;]
;// 03.02.04 //;
;// 03.02.04 //                LDA     <YWRITE         ;]
;// 03.02.04 //                DEC     A               ; ]unit tani no tate no iti
;// 03.02.04 //                AND     #001FH          ; ]
;// 03.02.04 //                STA     <YWRITE         ;]
		JSR	MPUP0
MPSUBEXT	EQU	$
                LDY     <WORK+14        ;VRAMD+2,Y ni #0FFFFH(END) o kaku
                LDA     #0FFFFH         ;
;// 02.12.25 //                STA     VRAMD+2,Y       ;
;// 03.02.06 //                STA     !RWBUFF,Y       ;
		STA	!BGCWBF,Y
;// 02.12.25 //                STA     VRAMD+4,Y       ;
;// 03.02.06 //                STA     !RWBUFF+2,Y       ;
		STA	!BGCWBF+2,Y
		CPY	#00000H
		BEQ	MPSUBEXT2
;
                MEM8
                IDX8
                SEP     #00110000B
;
		LDA	#bgw3
		STA	<BGWTFG
MPSUBEXT2	EQU	$
		SEP	#00110000B
                RTS
;
;
;
;
MPSUB22         EQU     $
                MEM16
                IDX16
                REP     #00110000B
;
                STZ     <WORK+14
;
;// 03.02.04 //		LDY	<WORK+14
;// 03.02.04 //		LDA	#0007FH		;]VRAMD+4 ni kosuu(007F) o set
;// 03.02.04 //		STA	!WBGBUF,Y
;// 03.02.04 //		INY
;// 03.02.04 //		INY
;// 03.02.04 //		STY	<WORK+14
;// 03.02.04 //;
;// 03.02.04 //                JSR     MPUDLN          ;ue(sita) no BG o kaku
;// 03.02.04 //;
;// 03.02.04 //                LDA     <SCRPNT         ;]
;// 03.02.04 //                CLC                     ; ]SCRPNT=SCRPNT+64(unit)
;// 03.02.04 //                ADC     #0128           ; ]
;// 03.02.04 //                STA     <SCRPNT         ;]
;// 03.02.04 //;
;// 03.02.04 //                LDA     <YWRITE         ;]
;// 03.02.04 //                INC     A               ; ]unit tani no tate no iti
;// 03.02.04 //                AND     #001FH          ; ]
;// 03.02.04 //                STA     <YWRITE         ;]
;
		JSR	MPDOWN0
;
		BRA	MPSUBEXT
;
;
;
;
MPSUB32         EQU     $
                MEM16
                IDX16
                REP     #00110000B
;
                STZ     <WORK+14
;
;// 03.02.04 //		LDY	<WORK+14
;// 03.02.04 //		LDA	#0803FH		;]BG no kosu set 803F
;// 03.02.04 //		STA	!WBGBUF,Y
;// 03.02.04 //		INY
;// 03.02.04 //		INY
;// 03.02.04 //		STY	<WORK+14
;// 03.02.04 //;
;// 03.02.04 //                JSR     MPRLLN          ;hidari(migi) no BG o kaku
;// 03.02.04 //;
;// 03.02.04 //                DEC     <SCRPNT         ;]SCRPNT=SCRPNT-1(unit)
;// 03.02.04 //                DEC     <SCRPNT         ;]
;// 03.02.04 //;
;// 03.02.04 //                LDA     <XWRITE         ;]
;// 03.02.04 //                DEC     A               ; ]unit tani no yoko no iti
;// 03.02.04 //                AND     #001FH          ; ]
;// 03.02.04 //                STA     <XWRITE         ;]
;
		JSR	MPLEFT0
;
		BRA	MPSUBEXT
;
;
;
;
MPSUB42         EQU     $
                MEM16
                IDX16
                REP     #00110000B
;
                STZ     <WORK+14
;
;// 03.02.04 //		LDY	<WORK+14
;// 03.02.04 //		LDA	#0803FH		;]BG no kosu set 803F
;// 03.02.04 //		STA	!WBGBUF,Y
;// 03.02.04 //		INY
;// 03.02.04 //		INY
;// 03.02.04 //		STY	<WORK+14
;// 03.02.04 //;
;// 03.02.04 //                JSR     MPRLLN          ;hidari(migi) no BG o kaku
;// 03.02.04 //;
;// 03.02.04 //                INC     <SCRPNT         ;]SCRPNT=SCRPNT+1(unit)
;// 03.02.04 //                INC     <SCRPNT         ;]
;// 03.02.04 //;
;// 03.02.04 //                LDA     <XWRITE         ;]
;// 03.02.04 //                INC     A               ; ]unit tani no yoko no iti
;// 03.02.04 //                AND     #001FH          ; ]
;// 03.02.04 //                STA     <XWRITE         ;]
;
		JSR	MPRIGHT0
;
		BRA	MPSUBEXT
;
;
;
;
;************************************************************************
;*              hutuu ni BG o kaku                                      *
;************************************************************************
MPBWTBL		EQU	$
		WORD	MPTFG0
		WORD	MPTFG1
		WORD	MPTFG2
		WORD	MPTFG0
		WORD	MPTFG4
		WORD	MPTFG5
		WORD	MPTFG6
		WORD	MPTFG0
		WORD	MPTFG8
		WORD	MPTFG9
		WORD	MPTFGA
		WORD	MPTFG0
		WORD	MPTFG0
		WORD	MPTFG0
		WORD	MPTFG0
		WORD	MPTFG0
;
;
MPMAIN		EQU	$
MPBGWT		EQU	$
		MEM16
		IDX16
		REP	#00110000B
;
		STZ	<WORK+14
;
		MEM8
		IDX8
		SEP	#00110000B
;
		LDA	!GDWTFG
		ASL	A
		TAX
		JSR	(MPBWTBL,X)
;
		MEM16
		IDX16
		REP	#00110000B
;
		LDY	<WORK+14	;VRAMD+2,Y ni #0FFFFH(END) o kaku
		LDA	#0FFFFH		;
		STA	!BGCWBF,Y
		STA	!BGCWBF+2,Y
		CPY	#00000H
		BEQ	MPBGWT0		; write ?
;					; yes
		MEM8
		IDX8
		SEP	#00110000B
;
		LDA	#bgw3
		STA	<BGWTFG
MPBGWT0		EQU	$
		SEP	#00110000B	; memory,index 8bit mode
;
		LDA	!GDWTFG		;]GEWTFG o yokeru(test)
		STA	!SCRLFG		;]
		RTS
;
;
;
MPTFG0		EQU	$
		STZ	<GAMEMD
		RTS
;
MPTFG1		EQU	$
		JSR	MPRIGHT
		STZ	!GDWTFG		;doko ni kakuka no flg o cls
		RTS
;
MPTFG2		EQU	$
		JSR	MPLEFT
		STZ	!GDWTFG		;doko ni kakuka no flg o cls
		RTS
;
MPTFG4		EQU	$
		JSR	MPDOWN
		STZ	!GDWTFG		;doko ni kakuka no flg o cls
		RTS
;
MPTFG5		EQU	$
MPTFG6		EQU	$
;;;;;;;;		JSR	MPRIGHT
		JSR	MPDOWN
		SEP	#00110000B
		LDA	!GDWTFG
		AND	#003H
		STA	!GDWTFG		;doko ni kakuka no flg o cls
		RTS
;
;// 03.05.28 //MPTFG6		EQU	$
;// 03.05.28 //;;;;;;;;		JSR	MPLEFT
;// 03.05.28 //		JSR	MPDOWN
;// 03.05.28 //		SEP	#00110000B
;// 03.05.28 //		LDA	!GDWTFG
;// 03.05.28 //		AND	#003H
;// 03.05.28 //		STA	!GDWTFG		;doko ni kakuka no flg o cls
;// 03.05.28 //		RTS
;
MPTFG8		EQU	$
		JSR	MPUP
		STZ	!GDWTFG		;doko ni kakuka no flg o cls
		RTS
;
MPTFG9		EQU	$
MPTFGA		EQU	$
;;;;;;;;		JSR	MPRIGHT
		JSR	MPUP
		SEP	#00110000B
		LDA	!GDWTFG
		AND	#003H
		STA	!GDWTFG		;doko ni kakuka no flg o cls
		RTS
;
;// 03.05.28 //MPTFGA		EQU	$
;// 03.05.28 //;;;;;;;;		JSR	MPLEFT
;// 03.05.28 //		JSR	MPUP
;// 03.05.28 //		SEP	#00110000B
;// 03.05.28 //		LDA	!GDWTFG
;// 03.05.28 //		AND	#003H
;// 03.05.28 //		STA	!GDWTFG		;doko ni kakuka no flg o cls
;// 03.05.28 //		RTS
;
;
MPUP		EQU	$
		MEM16
		IDX16
		REP	#00110000B
;
		LDA	<SCRPNT		;]
		CMP	#0128		; ]
		BMI	MPUP1		;]gamen no ue o koeta ka?
;					;n
		LDX	<MPDTNO
		LDA	>MPSIZE,X
		AND	#00FFH
		BNE	MPUP2
;
MPUP0		EQU	$
		LDY	<WORK+14
;// 03.06.27 //		LDA	#0007FH		;]VRAMD+4 ni kosuu(007F) o set
		LDA	#00080H
		STA	!BGCWBF,Y
		INY
		INY
		STY	<WORK+14
;
		JSR	MPUDLN		;ue(sita) no BG o kaku
;
MPUP2		EQU	$
		LDA	<SCRPNT		;]
		SEC			; ]SCRPNT=SCRPNT-64
		SBC	#0128		; ]gamen no kihonten
		STA	<SCRPNT		;]
;
		LDA	<YWRITE		;]
		DEC	A		; ]unit tani no tate no iti
		AND	#001FH		; ]
		STA	<YWRITE		;]
MPUP1		EQU	$
		RTS
;
;
;MPSTPD		EQU	$
;		WORD	01800H,01000H,00800H,00000H
MPDOWN		EQU	$
		MEM16
		IDX16
		REP	#00110000B
;
;		LDX	<MPDTNO
;		LDA	>MPSIZE,X
;		AND	#000FFH
;		ASL	A
;		TAX
;
		LDA	<SCRPNT		;]
		CMP	#1800H		; ]gamen no sita o koeta ka?
		BCS	MPDOWN1		;]
;					;n
		LDX	<MPDTNO
		LDA	>MPSIZE,X
		AND	#00FFH
		BNE	MPDOWN2
;
MPDOWN0		EQU	$
		LDY	<WORK+14
;// 03.06.27 //		LDA	#0007FH		;]VRAMD+4 ni kosuu(007F) o set
		LDA	#00080H
		STA	!BGCWBF,Y
		INY
		INY
		STY	<WORK+14
;
		JSR	MPUDLN		;ue(sita) no BG o kaku
;
MPDOWN2		EQU	$
		LDA	<SCRPNT		;]
		CLC			; ]SCRPNT=SCRPNT+64
		ADC	#0128		; ]
		STA	<SCRPNT		;]
;
		LDA	<YWRITE		;]
		INC	A		; ]unit tani no tate no iti
		AND	#001FH		; ]
		STA	<YWRITE		;]
MPDOWN1		EQU	$
		RTS
;
;
MPLEFT		EQU	$
		MEM16
		IDX16
		REP	#00110000B
;
		LDA	<SCRPNT		;]
MPLEFT1		EQU	$
		CMP	#0080H
		BCC	MPLEFT2
		SBC	#0080H
		BRA	MPLEFT1
MPLEFT2		EQU	$
		CMP	#00000H
		BEQ	MPLEFT3		; ]hidari hasi ka?
;					;n
		LDX	<MPDTNO
		LDA	>MPSIZE,X
		AND	#00FFH
		BNE	MPLEFT4
;
MPLEFT0		EQU	$
		LDY	<WORK+14
;// 03.06.27 //		LDA	#0803FH		;]BG no kosu set 803F
		LDA	#08040H
		STA	!BGCWBF,Y
		INY
		INY
		STY	<WORK+14
;
		JSR	MPRLLN		;hidari(migi) no BG o kaku
;
MPLEFT4		EQU	$
		DEC	<SCRPNT		;]SCRPNT=SCRPNT-2
		DEC	<SCRPNT		;]
;
		LDA	<XWRITE		;]
		DEC	A		; ]unit tani no yoko no iti
		AND	#001FH		; ]
		STA	<XWRITE		;]
MPLEFT3		EQU	$
		RTS
;
;
;MPSTPR		EQU	$
;		WORD	00080H,00060H,00040H,00020H,00000H
MPRIGHT		EQU	$
		MEM16
		IDX16
		REP	#00110000B
;
;		LDX	<MPDTNO
;		LDA	>MPSIZE,X
;		AND	#000FFH
;		ASL	A
;		TAX
;
		LDA	<SCRPNT		;]
MPRIGHT1	EQU	$
		CMP	#00080H		;CMP	>MPSTPR,X
		BCC	MPRIGHT2
		SBC	#00080H		;>MPSTPR,X
		BRA	MPRIGHT1
MPRIGHT2	EQU	$
;		CMP	#0040H		; ]migi hasi ka?
		CMP	#00060H		;>MPSTPR+2,X
		BCS	MPRIGHT3	;]
;					;n
		LDX	<MPDTNO
		LDA	>MPSIZE,X
		AND	#00FFH
		BNE	MPRIGHT4
;
MPRIGHT0	EQU	$
		LDY	<WORK+14
;// 03.06.27 //		LDA	#0803FH		;]BG no kosu set 803F
		LDA	#08040H
		STA	!BGCWBF,Y
		INY
		INY
		STY	<WORK+14
;
		JSR	MPRLLN		;hidari(migi) no BG o kaku
;
MPRIGHT4	EQU	$
		INC	<SCRPNT		;]SCRPNT=SCRPNT+2
		INC	<SCRPNT		;]
;
		LDA	<XWRITE		;]
		INC	A		; ]unit tani no yoko no iti
		AND	#001FH		; ]
		STA	<XWRITE		;]
MPRIGHT3	EQU	$
		RTS
;
;
;************************************************************************
;*									*
;*		MAIN no SUB PROGRAM					*
;*					ALL 16 bit MODE			*
;************************************************************************
		MEM16
		IDX16
;
;************************************************************************
;*		left & right (#) ni BG o hiku	sub program		*
;******************************+*****************************************
MPRLLN		EQU	$
		LDA	!GDWTFG		;]]]
		AND	#0002H		;   ]key ga hidari ka migika o mite
		TAX			;   ]hidari SCRPNT-1040=Y
		LDA	<SCRPNT		;   ]migi   SCRPNT-976=Y
		SEC			;   ]
		SBC	>RLDATA,X	;   ] RLDATA 976,1040
		TAY
;
		LDA	<YWRITE		;]
		ASL	A		; ]X=YWRITE*2
		TAX			;]
;
		LDA	#GDBUF0
		STA	<WORK0
		LDA	#BANK GDBUF0	;// 02.12.10 //
		STA	<WORK2		;// 02.12.10 //
		LDA	#0032/2		;MPRLL1 o kurikaesu kaisu(1 retu no kazu)
		STA	<WORK+3
MPRLL1		EQU	$
		LDA	[<WORK],Y	;MPDATA --> map data
		STA	DATBUF,X	;DATBUF --> data o ireru toko
		INX
		INX
		TXA			;]
		AND	#003FH		; ]X>1F --> X=0 (0<=X<=1F)
		TAX			;]
		TYA
		CLC			; ]Y=Y+128
		ADC	#0128		; ]tate ni data o totekuru
		TAY
;
		LDA	[<WORK],Y	;MPDATA --> map data
		STA	DATBUF,X	;DATBUF --> data o ireru toko
		INX
		INX
		TXA			;]
		AND	#003FH		; ]X>1F --> X=0 (0<=X<=1F)
		TAX			;]
		TYA
		CLC			; ]Y=Y+128
		ADC	#0128		; ]tate ni data o totekuru
		TAY
		DEC	<WORK+3
		BNE	MPRLL1		;1 retu bun no data o DATBUF ni okutaka
;
		STZ	<WORK		;			]]]]]]   ________
		LDA	<XWRITE		;			      ]  |       |  
		STA	<WORK+2		;			      ]  +-------+
		CMP	#00016		;			      ]  ----+----
		BCC	MPRLL2		;tonari no gamen ka?	      ]  |   |   |
;					;y			      ]  +-------+
		AND	#000FH		;			      ]
		STA	<WORK+2		;			      ]
		LDA	#0400H		;			      ]
		STA	<WORK		;			]]]]]]
MPRLL2		EQU	$
		LDA	<WORK+2		;]]
		ASL	A		;  ]<WORK=<WORK+(<WORK+2)*4
		CLC			;  ]VRAM no adress keisan
		ADC	<WORK		;  ]
		STA	<WORK		;]]
		CLC			;]
		ADC	#0800H		; ]tonari no gamen no adress keisan
		STA	<WORK+12	;]
;
		LDA	>MPDBUF+0	;    ]
		JSR	SMPLINE
;
		LDA	<WORK+12	;]
		STA	<WORK		; ]yokete oita 2 gamen me no adress o work ni okuru
		LDA	>MPDBUF+2	;    ]
;
;************************************************************************
;*		32 no BG o kaku				sub program	*
;************************************************************************
SMPLINE		EQU	$
		STA	<WORK+2
;
		LDY	<WORK+14	;VRAMD+2,Y no Y
		LDA	<WORK		;](VRAMD+2,Y)=<WORK+(<WORK+4)
		STA	!BGCWBF,Y
		INC	A
		STA	!BGCWBF+042H,Y
		INY
		INY
;
		LDA	#00032/2
		STA	<WORK6
SMPLIN1		EQU	$
		LDX	<WORK+2		;    ]
		LDA	DATBUF,X	;    ]
		INX			;DATBUF,Y no Y o tugini susumeru
		INX			;(tigi no unit)
		STX	<WORK+2
		ASL	A		;    ]
		ASL	A		;    ]
		ASL	A		;    ]X=(DATBUF,Y)*4+(<WORK+4)
		TAX			;]]]]
;
		LDA	>MPUNIT+0,X	;
		STA	!BGCWBF+00H,Y
		LDA	>MPUNIT+2,X	;
		STA	!BGCWBF+42H,Y
		INY			;VRAMD+6,Y no Y o tugini suru
		INY			;
		LDA	>MPUNIT+4,X		;
		STA	!BGCWBF+00H,Y
		LDA	>MPUNIT+6,X		;
		STA	!BGCWBF+42H,Y
		INY			;VRAMD+6,Y no Y o tugini suru
		INY			;
;
		DEC	<WORK+6
		BNE	SMPLIN1		; 1retu end ?
;					; y
		TYA
		CLC
		ADC	#00042H
		STA	<WORK+14
		RTS
;
;
;
;************************************************************************
;*		up & down (######ni BG o hiku	sub program	*
;************************************************************************
MPUDLN		EQU	$
		LDA	!GDWTFG		;]]]
		AND	#0004H		;   ]
		LSR	A		;   ]
		TAX			;   ] key no ue ka sitaka o mite
		LDA	<SCRPNT		;   ] ue   nara SCRPNT-1040=Y
		SEC			;   ] sita nara SCRPNT+3056=Y
		SBC	>UDDATA,X	;   ] UDDATA 1040,3056(F410)
		TAY
;
		LDA	<XWRITE		;]
		ASL	A		; ]X=XWRITE*2
		TAX			;]
;
		LDA	#GDBUF0
		STA	<WORK0
		LDA	#BANK GDBUF0	;// 02.12.10 //
		STA	<WORK2		;// 02.12.10 //
		LDA	#0032/2		;MPUDL1 o kurikaesu kaisu(1 retu no kazu)
		STA	<WORK+3
MPUDL1		EQU	$
		LDA	[<WORK],Y	;<WORK L,H,B --> map data
		STA	DATBUF,X	;DATBUF --> data o ireru toko
		INX
		INX
		TXA			;]
		AND	#003FH	 	; ]X>1F -->X=0 (0<=X<=1F)
		TAX			;]
		INY
		INY
;
		LDA	[<WORK],Y	;<WORK L,H,B --> map data
		STA	DATBUF,X	;DATBUF --> data o ireru toko
		INX
		INX
		TXA			;]
		AND	#003FH	 	; ]X>1F -->X=0 (0<=X<=1F)
		TAX			;]
		INY
		INY
		DEC	<WORK+3
		BNE	MPUDL1		;1 retu bun no data o DATBUF ni iretaka?
;					;y
		STZ	<WORK0		;// 02.12.10 //
		LDA	<YWRITE		;			    ] |-----------
		STA	<WORK+2		;			    ] |          |
		CMP	#00016		;			    ] +-----+    |
		BCC	MPUDL2		;tonarino gamenka?	    ] |  |  |    |--dotiraka no adress o moto meru
;					;y
		AND	#000FH		;			    ] |~~|~~|    |
		STA	<WORK+2		;			    ] +-----+    |
		LDA	#0800H		;			    ] |          |
		STA	<WORK		;			]]]]  -----------|
MPUDL2		EQU	$		;]]]
		LDA	<WORK+2		;   ]
		ASL	A		;   ]<WORK=<WORK+(work+2)*64
		ASL	A		;   ]
		ASL	A		;   ]
		ASL	A		;   ]
		ASL	A		;   ]
		ASL	A		;   ]
		CLC			;   ]
		ADC	<WORK		;   ]
		STA	<WORK		;]]]
;
		CLC			;]
		ADC	#0400H		; ]<WORK=<WORK+0400H
		STA	<WORK+12	;]
;
		LDY	<WORK+14	;VRAMD+2,Y no Y
		LDA	<WORK		;]
		STA	!BGCWBF,Y
		INY
		INY
		LDA	>MPDBUF+0	;    ]
		JSR	LMPLINE
;
		LDY	<WORK+14	;VRAMD+2,Y no Y
		LDA	<WORK+12	;]
		STA	!BGCWBF,Y
		INY
		INY
		LDA	>MPDBUF+2	;    ]
;
;************************************************************************
;*		32 no BG o kaku				sub program	*
;************************************************************************
LMPLINE		EQU	$
		STA	<WORK+2
;
		LDA	#0032/2
		STA	<WORK6
LMPLIN1		EQU	$
		LDX	<WORK+2		;    ]
		LDA	DATBUF,X	;    ]
		INX			;DATBUF,Y no Y o tugini susumeru
		INX			;(tigi no unit)
		STX	<WORK+2
		ASL	A		;    ]
		ASL	A		;    ]
		ASL	A		;    ]X=(DATBUF,Y)*4+(<WORK+4)
		TAX			;]]]]
;
		LDA	>MPUNIT,X	;
		STA	!BGCWBF+00H,Y
		LDA	>MPUNIT+4,X	;
		STA	!BGCWBF+40H,Y
		INY			;VRAMD+6,Y no Y o tugini suru
		INY			;
		LDA	>MPUNIT+2,X		;
		STA	!BGCWBF+00H,Y
		LDA	>MPUNIT+6,X		;
		STA	!BGCWBF+40H,Y
		INY			;VRAMD+6,Y no Y o tugini suru
		INY			;
;
		DEC	<WORK+6
		BNE	LMPLIN1		; 1retu end ?
;					; y
		TYA
		CLC
		ADC	#00040H
		STA	<WORK+14	;VRAMD+2,Y no Y
		RTS
;
;
;
;
;
;************************************************************************
;*		GDBUF0 to GDBUF1 no data o kaeru			*
;************************************************************************
MPCNG		EQU	$
		LDA	<MPDTNO		;]
		ASL	A		; ]X=MPDTNO*3
		ADC	<MPDTNO		; ]
		TAX			;]
		LDA	#BANK GDBUF0	; ]
		STA	<WORK+2		; ]WORK   +1 +2 ni GDBUF0 no L H B 
                STA     <WORK+5		; ]WORK+3 +4 +5 ni GDBUF0+128 no L H B
		LDA	#GDBUF0		;]
;// 03.02.04 //		STA	<WORK		; ]
;// 03.02.04 //		CLC			; ]           o set
;// 03.02.04 //		ADC	#0080H		; ]
;// 03.02.04 //		STA	<WORK+3		;]
;// 03.02.04 //                LDA     >MPTBLDT,X      ;]
;// 03.02.04 //		STA	<WORK+8		; ]WORK+8 +9 +10 ni MPDAT L H B o set
;// 03.02.04 //		LDA	>MPTBLDT+1,X	; ]
;// 03.02.04 //		STA	<WORK+9		;]
;// 03.02.04 //		JSR	MPCNG1		;data no tenkai
		JSR	MPCNG0		;data no tenkai
;
;
                LDA     <MPDTNO         ;]
		INC	A
		STA	<WORK
                ASL     A               ; ]X=MPDTNO*3
                ADC     <WORK	         ; ]
                TAX                     ;]
                LDA     #GDBUF0         ;]
		CLC
		ADC	#0040H
;// 03.02.04 //                STA     <WORK           ; ]
;// 03.02.04 //                CLC                     ; ]           o set
;// 03.02.04 //                ADC     #0080H          ; ]
;// 03.02.04 //                STA     <WORK+3         ;]
;// 03.02.04 //                LDA     >MPTBLDT,X      ;]
;// 03.02.04 //                STA     <WORK+8         ; ]WORK+8 +9 +10 ni MPDAT L H B o set
;// 03.02.04 //                LDA     >MPTBLDT+1,X    ; ]
;// 03.02.04 //                STA     <WORK+9         ;]
;// 03.02.04 //                JSR     MPCNG1		;data no tenkai
                JSR     MPCNG0		;data no tenkai
;
;
;
		LDA	<MPDTNO		;]
		CLC
		ADC	#008
		STA	<WORK
		ASL	A		; ]X=MPDTNO*3
		ADC	<WORK		; ]
		TAX			;]
		LDA	#GDBUF1		;]
;// 03.02.04 //		STA	<WORK		; ]
;// 03.02.04 //                CLC                     ; ]           o set
;// 03.02.04 //                ADC     #0080H          ; ]
;// 03.02.04 //                STA     <WORK+3         ;]
;// 03.02.04 //                LDA     >MPTBLDT,X      ;]
;// 03.02.04 //		STA	<WORK+8		; ]WORK+8 +9 +10 ni MPDAT L H B o set
;// 03.02.04 //		LDA	>MPTBLDT+1,X	; ]
;// 03.02.04 //		STA	<WORK+9		;]
;// 03.02.04 //		JSR	MPCNG1		;data no tenkai
		JSR	MPCNG0		;data no tenkai
;
                LDA     <MPDTNO         ;]
		CLC
		ADC	#009
		STA	<WORK
                ASL     A               ; ]X=MPDTNO*3
                ADC     <WORK         ; ]
                TAX                     ;]
                LDA     #GDBUF1         ;]
		CLC
		ADC	#00040H
MPCNG0		EQU	$
                STA     <WORK           ; ]
                CLC                     ; ]           o set
                ADC     #0080H          ; ]
                STA     <WORK+3         ;]
;
                LDA     >MPTBLDT,X      ;]
                STA     <CWORK0         ; ]WORK+8 +9 +10 ni MPDAT L H B o set
                LDA     >MPTBLDT+1,X    ; ]
                STA     <CWORK1         ;]
;
;
		LDA	<WORK0
		PHA
		LDA	<WORK2
		PHA
		LDA	<WORK4
		PHA
;
		LDA	#GDBUF5
		STA	<WORK0
		LDA	#BANK GDBUF5
		STA	<WORK2
;
		PHX
		SEP	#00110000B
		JSR	CHREAD
;// 03.07.30 //		JSL	>MPDTBFST
		REP	#00110000B
		JSR	MPCNG4
		PLX
;
                LDA     >MPTBLDTL,X      ;]
                STA     <CWORK0         ; ]WORK+8 +9 +10 ni MPDAT L H B o set
                LDA     >MPTBLDTL+1,X    ; ]
                STA     <CWORK1         ;]
;
		LDA	#GDBUF5
		STA	<WORK0
		LDA	#BANK GDBUF5
		STA	<WORK2
;
		PHX
		SEP	#00110000B
		JSR	CHREAD
;// 03.07.30 //		JSL	>MPDTBFST
		REP	#00110000B
		JSR	MPCNG6
		PLX
;
		PLA
		STA	<WORK4
		PLA
		STA	<WORK2
		PLA
		STA	<WORK0
;
		LDA	#GDBUF4
		STA	<WORK+8
		LDA	#BANK GDBUF4
		STA	<WORKA
;************************************************************************
MPCNG1		EQU	$
		MEM8
		IDX16
		SEP	#00100000B
;
		PHB
		LDA	#BANK GDBUF5
		PHA
		PLB
;
		MEM16
		IDX16
		REP	#00110000B
;
		LDA	#0FFFFH		;INDEX INIT. (MPCNG8)
		STA	GDBUF5+40H	;INDEX SAVE
		STZ	<WORK+6		;GDBUF no syusyoku
		STZ	<WORK+11	;MPDAT no syusyoku
MPCNG2		EQU	$
		LDA	#0010H		;yoko no UNIT su /2
		STA	<WORK+13
MPCNG3		EQU	$
		LDY	<WORK+11
		LDA	[<WORK+8],Y
		ASL	A
		LDY	<WORK+6
;
		JSR	MPCNG8		;UNIT SET
;
;
;;		LDA	>SCUNIT0,X
;;		STA	[<WORK],Y
;;		LDA	>SCUNIT2,X
;;		STA	[<WORK+3],Y
;;		INY
;;		INY
;;		LDA	>SCUNIT1,X
;;		STA	[<WORK],Y
;;		LDA	>SCUNIT3,X
;;		STA	[<WORK+3],Y
;;		INY
;;		INY
;
;
		STY	<WORK+6
		INC	<WORK+11
		INC	<WORK+11
		DEC	<WORK+13
		BNE	MPCNG3		;yoko 1 retu end?
;					;y
		LDA	<WORK+6
		CLC
		ADC	#00C0H
		STA	<WORK+6
		CMP	#01000H
		BCC	MPCNG2		;end?
;					;y
		PLB
		RTS
;
;
;
MPCNG4		EQU	$
		MEM8
		IDX16
		SEP	#00100000B
;
		PHB
		LDA	#BANK GDBUF5
		PHA
		PLB
		STA	<WORK2
;
		MEM16
		IDX16
		REP	#00110000B
;
		LDX	#00000H
		LDY	#00001H
		LDA	#GDBUF4
		STA	<WORK0
;// 03.05.27 //		LDA	#BANK GDBUF4
;// 03.05.27 //		STA	<WORK2
		MEM8
		SEP	#00100000B
MPCNG5		EQU	$
		LDA	GDBUF5,X
		STA	[<WORK],Y
		INY
		INY
		INX
		LDA	GDBUF5,X
		STA	[<WORK],Y
		INY
		INY
		INX
		LDA	GDBUF5,X
		STA	[<WORK],Y
		INY
		INY
		INX
		LDA	GDBUF5,X
		STA	[<WORK],Y
		INY
		INY
		INX
		CPX	#00100H
		BCC	MPCNG5
;
		MEM16
		REP	#00110000B
;
		PLB
		RTS
;
;
;
MPCNG6		EQU	$
		MEM8
		IDX16
		SEP	#00100000B
;
		PHB
		LDA	#BANK GDBUF5
		PHA
		PLB
		STA	<WORK2
;
		MEM16
		IDX16
		REP	#00110000B
;
		LDX	#00000H
		TXY
		LDA	#GDBUF4
		STA	<WORK0
;// 03.05.27 //		LDA	#BANK GDBUF4
;// 03.05.27 //		STA	<WORK2
		MEM8
		SEP	#00100000B
		BRA	MPCNG5
;// 03.05.27 //MPCNG7		EQU	$
;// 03.05.27 //		LDA	GDBUF5,X
;// 03.05.27 //		STA	[<WORK],Y
;// 03.05.27 //		INY
;// 03.05.27 //		INY
;// 03.05.27 //		INX
;// 03.05.27 //		CPX	#00100H
;// 03.05.27 //		BCC	MPCNG7
;// 03.05.27 //;
;// 03.05.27 //		MEM16
;// 03.05.27 //		REP	#00110000B
;// 03.05.27 //;
;// 03.05.27 //		PLB
;// 03.05.27 //		RTS

;
;
		MEM16
MPCNG8		EQU	$
		PHA
		AND	#0FFF8H
		CMP	GDBUF5+40H
		BNE	MPCNG9			;? MAE TO ONAGI
		JMP	MPCNGA			;Y
MPCNG9		EQU	$			;N
		STA	GDBUF5+40H		;INDEX SAVE
;
		LSR	A			;X*(3/4)
		STA	GDBUF5+42H
		LSR	A
		ADC	GDBUF5+42H
;
		TAX
;
		MEM8				;TENKAI
		IDX16
		SEP	#00100000B
;
		LDA	>SCUNIT0+0,X
		STA	GDBUF5+00H
;
		LDA	>SCUNIT0+1,X
		STA	GDBUF5+02H
;
		LDA	>SCUNIT0+2,X
		STA	GDBUF5+04H
;
		LDA	>SCUNIT0+3,X
		STA	GDBUF5+06H
;
		LDA	>SCUNIT0+4,X
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	GDBUF5+01H
;
		PLA
		AND	#00FH
		STA	GDBUF5+03H
;
		LDA	>SCUNIT0+5,X
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	GDBUF5+05H
;
		PLA
		AND	#00FH
		STA	GDBUF5+07H
;
;
		LDA	>SCUNIT1+0,X
		STA	GDBUF5+10H
;
		LDA	>SCUNIT1+1,X
		STA	GDBUF5+12H
;
		LDA	>SCUNIT1+2,X
		STA	GDBUF5+14H
;
		LDA	>SCUNIT1+3,X
		STA	GDBUF5+16H
;
		LDA	>SCUNIT1+4,X
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	GDBUF5+11H
;
		PLA
		AND	#00FH
		STA	GDBUF5+13H
;
		LDA	>SCUNIT1+5,X
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	GDBUF5+15H
;
		PLA
		AND	#00FH
		STA	GDBUF5+17H
;
;
		LDA	>SCUNIT2+0,X
		STA	GDBUF5+20H
;
		LDA	>SCUNIT2+1,X
		STA	GDBUF5+22H
;
		LDA	>SCUNIT2+2,X
		STA	GDBUF5+24H
;
		LDA	>SCUNIT2+3,X
		STA	GDBUF5+26H
;
		LDA	>SCUNIT2+4,X
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	GDBUF5+21H
;
		PLA
		AND	#00FH
		STA	GDBUF5+23H
;
		LDA	>SCUNIT2+5,X
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	GDBUF5+25H
;
		PLA
		AND	#00FH
		STA	GDBUF5+27H
;
;
		LDA	>SCUNIT3+0,X
		STA	GDBUF5+30H
;
		LDA	>SCUNIT3+1,X
		STA	GDBUF5+32H
;
		LDA	>SCUNIT3+2,X
		STA	GDBUF5+34H
;
		LDA	>SCUNIT3+3,X
		STA	GDBUF5+36H
;
		LDA	>SCUNIT3+4,X
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	GDBUF5+31H
;
		PLA
		AND	#00FH
		STA	GDBUF5+33H
;
		LDA	>SCUNIT3+5,X
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	GDBUF5+35H
;
		PLA
		AND	#00FH
		STA	GDBUF5+37H
;
;
		MEM16
		IDX16
		REP	#00110000B
;
MPCNGA		EQU	$
		PLA
		AND	#00007H
		TAX
		LDA	GDBUF5+00H,X		;UNIT SET
		STA	[<WORK],Y
		LDA	GDBUF5+20H,X
		STA	[<WORK+3],Y
		INY
		INY
		LDA	GDBUF5+10H,X
		STA	[<WORK],Y
		LDA	GDBUF5+30H,X
		STA	[<WORK+3],Y
		INY
		INY
;
		RTS
;
;
;
;
		MEM16
		IDX16
;************************************************************************
;*		GDBUF2 to GDBUF3 no data o kaeru			*
;************************************************************************
MP2CNG		EQU	$
		LDA	<MPDTNO		;]
		ASL	A		; ]X=MPDTNO*3
		ADC	<MPDTNO		; ]
		TAX			;]
		LDA	#BANK GDBUF2	; ]
		STA	<WORK+2		; ]WORK   +1 +2 ni GDBUF2 no L H B 
                STA     <WORK+5		; ]WORK+3 +4 +5 ni GDBUF2+128 no L H B
		LDA	#GDBUF2		;]
;<< 03.04.17 >>;// 03.02.04 //		STA	<WORK		; ]
;<< 03.04.17 >>;// 03.02.04 //		CLC			; ]           o set
;<< 03.04.17 >>;// 03.02.04 //		ADC	#0080H		; ]
;<< 03.04.17 >>;// 03.02.04 //		STA	<WORK+3		;]
;<< 03.04.17 >>;// 03.02.04 //                LDA     >MPTBLDT,X      ;]
;<< 03.04.17 >>;// 03.02.04 //		STA	<WORK+8		; ]WORK+8 +9 +10 ni MPDAT L H B o set
;<< 03.04.17 >>;// 03.02.04 //		LDA	>MPTBLDT+1,X	; ]
;<< 03.04.17 >>;// 03.02.04 //		STA	<WORK+9		;]
;<< 03.04.17 >>;// 03.02.04 //		JSR	MP2CNG1		;data no tenkai
;<< 03.04.17 >>		JSR	MP2CNG0		;data no tenkai
;<< 03.04.17 >>;
;<< 03.04.17 >>;
;<< 03.04.17 >>                LDA     <MPDTNO         ;]
;<< 03.04.17 >>		INC	A
;<< 03.04.17 >>		STA	<WORK
;<< 03.04.17 >>                ASL     A               ; ]X=MPDTNO*3
;<< 03.04.17 >>                ADC     <WORK	         ; ]
;<< 03.04.17 >>                TAX                     ;]
;<< 03.04.17 >>                LDA     #GDBUF2         ;]
;<< 03.04.17 >>		CLC
;<< 03.04.17 >>		ADC	#0040H
;<< 03.04.17 >>;// 03.02.04 //                STA     <WORK           ; ]
;<< 03.04.17 >>;// 03.02.04 //                CLC                     ; ]           o set
;<< 03.04.17 >>;// 03.02.04 //                ADC     #0080H          ; ]
;<< 03.04.17 >>;// 03.02.04 //                STA     <WORK+3         ;]
;<< 03.04.17 >>;// 03.02.04 //                LDA     >MPTBLDT,X      ;]
;<< 03.04.17 >>;// 03.02.04 //                STA     <WORK+8         ; ]WORK+8 +9 +10 ni MPDAT L H B o set
;<< 03.04.17 >>;// 03.02.04 //                LDA     >MPTBLDT+1,X    ; ]
;<< 03.04.17 >>;// 03.02.04 //                STA     <WORK+9         ;]
;<< 03.04.17 >>;// 03.02.04 //                JSR     MP2CNG1		;data no tenkai
;<< 03.04.17 >>                JSR     MP2CNG0		;data no tenkai
;<< 03.04.17 >>;
;<< 03.04.17 >>;
;<< 03.04.17 >>;
;<< 03.04.17 >>		LDA	<MPDTNO		;]
;<< 03.04.17 >>		CLC
;<< 03.04.17 >>		ADC	#008
;<< 03.04.17 >>		STA	<WORK
;<< 03.04.17 >>		ASL	A		; ]X=MPDTNO*3
;<< 03.04.17 >>		ADC	<WORK		; ]
;<< 03.04.17 >>		TAX			;]
;<< 03.04.17 >>		LDA	#GDBUF3		;]
;<< 03.04.17 >>;// 03.02.04 //		STA	<WORK		; ]
;<< 03.04.17 >>;// 03.02.04 //                CLC                     ; ]           o set
;<< 03.04.17 >>;// 03.02.04 //                ADC     #0080H          ; ]
;<< 03.04.17 >>;// 03.02.04 //                STA     <WORK+3         ;]
;<< 03.04.17 >>;// 03.02.04 //                LDA     >MPTBLDT,X      ;]
;<< 03.04.17 >>;// 03.02.04 //		STA	<WORK+8		; ]WORK+8 +9 +10 ni MPDAT L H B o set
;<< 03.04.17 >>;// 03.02.04 //		LDA	>MPTBLDT+1,X	; ]
;<< 03.04.17 >>;// 03.02.04 //		STA	<WORK+9		;]
;<< 03.04.17 >>;// 03.02.04 //		JSR	MP2CNG1		;data no tenkai
;<< 03.04.17 >>		JSR	MP2CNG0		;data no tenkai
;<< 03.04.17 >>;
;<< 03.04.17 >>                LDA     <MPDTNO         ;]
;<< 03.04.17 >>		CLC
;<< 03.04.17 >>		ADC	#009
;<< 03.04.17 >>		STA	<WORK
;<< 03.04.17 >>                ASL     A               ; ]X=MPDTNO*3
;<< 03.04.17 >>                ADC     <WORK         ; ]
;<< 03.04.17 >>                TAX                     ;]
;<< 03.04.17 >>                LDA     #GDBUF3         ;]
;<< 03.04.17 >>		CLC
;<< 03.04.17 >>		ADC	#00040H
MP2CNG0		EQU	$
		STA     <WORK           ; ]
                CLC                     ; ]           o set
                ADC     #0080H          ; ]
                STA     <WORK+3         ;]
;
                LDA     >MPTBLDT,X      ;]
                STA     <CWORK0         ; ]WORK+8 +9 +10 ni MPDAT L H B o set
                LDA     >MPTBLDT+1,X    ; ]
                STA     <CWORK1         ;]
;
;
		LDA	<WORK0
		PHA
		LDA	<WORK2
		PHA
		LDA	<WORK4
		PHA
;
		LDA	#GDBUF5
		STA	<WORK0
		LDA	#BANK GDBUF5
		STA	<WORK2
;
		PHX
		SEP	#00110000B
		JSR	CHREAD
;// 03.07.30 //		JSL	>MPDTBFST
		REP	#00110000B
		JSR	MPCNG4
		PLX
;
                LDA     >MPTBLDTL,X      ;]
                STA     <CWORK0         ; ]WORK+8 +9 +10 ni MPDAT L H B o set
                LDA     >MPTBLDTL+1,X    ; ]
                STA     <CWORK1         ;]
;
		LDA	#GDBUF5
		STA	<WORK0
		LDA	#BANK GDBUF5
		STA	<WORK2
;
		PHX
		SEP	#00110000B
		JSR	CHREAD
;// 03.07.30 //		JSL	>MPDTBFST
		REP	#00110000B
		JSR	MPCNG6
		PLX
;
		PLA
		STA	<WORK4
		PLA
		STA	<WORK2
		PLA
		STA	<WORK0
;
		LDA	#GDBUF4
		STA	<WORK+8
		LDA	#BANK GDBUF4
		STA	<WORKA
;************************************************************************
MP2CNG1		EQU	$
		MEM8
		IDX16
		SEP	#00100000B
;
		PHB
		LDA	#BANK GDBUF5
		PHA
		PLB
;
		MEM16
		IDX16
		REP	#00110000B
;
		LDA	#0FFFFH		;INDEX INIT. (MPCNG8)
		STA	GDBUF5+40H	;INDEX SAVE
		STZ	<WORK+6		;GDBUF no syusyoku
		STZ	<WORK+11	;MPDAT no syusyoku
MP2CNG2		EQU	$
		LDA	#0010H		;yoko no UNIT su /2
		STA	<WORK+13
MP2CNG3		EQU	$
		LDY	<WORK+11
		LDA	[<WORK+8],Y
		ASL	A
		TAX
		LDY	<WORK+6
		JSR	MPCNG8		;UNIT SET
;
;
;;		LDA	>SCUNIT0,X
;;		STA	[<WORK],Y
;;		LDA	>SCUNIT2,X
;;		STA	[<WORK+3],Y
;;		INY
;;		INY
;;		LDA	>SCUNIT1,X
;;		STA	[<WORK],Y
;;		LDA	>SCUNIT3,X
;;		STA	[<WORK+3],Y
;;		INY
;;		INY
;
;
		STY	<WORK+6
		INC	<WORK+11
		INC	<WORK+11
		DEC	<WORK+13
		BNE	MP2CNG3		;yoko 1 retu end?
;					;y
		LDA	<WORK+6
		CLC
		ADC	#00C0H
		STA	<WORK+6
		CMP	#01000H
		BCC	MP2CNG2		;end?
;					;y
		PLB
		RTS
;
;
		MEM8
		IDX8
;
;************************************************************************
;*		DATA							*
;************************************************************************
TATYDT		EQU	$		;BG o yoko ni hikuka tate ni hikuka 
		WORD	00002,00004	;
;
RLDATA		EQU	$		;RLDATA  720,        784
		WORD	00976		;        migi ue     hidari ue
UDDATA		EQU	$		;UDDATA  784,       !(2288)+1
		WORD	01040,0F410H	;        hidari ue   hidari sita
;
MPDBUF		EQU	$
		WORD	00000,00032
;
MPSIZE		EQU	$
;				0--> 4*4
;				1--> 1*1
		BYTE	0,0,1,0,0,0,0,1
		BYTE	0,0,1,0,0,0,0,1
		BYTE	1,1,1,1,1,1,1,1
		BYTE	0,0,1,0,0,1,0,0
		BYTE	0,0,1,0,0,1,0,0
		BYTE	1,1,1,1,1,1,1,1
		BYTE	0,0,1,1,1,0,0,1
		BYTE	0,0,1,1,1,0,0,1
;
		BYTE	0,0,1,0,0,0,0,1
		BYTE	0,0,1,0,0,0,0,1
		BYTE	1,1,1,1,1,1,1,1
		BYTE	0,0,1,0,0,1,0,0
		BYTE	0,0,1,0,0,1,0,0
		BYTE	1,1,1,1,1,1,1,1
		BYTE	0,0,1,1,1,0,0,1
		BYTE	0,0,1,1,1,0,0,1
;
		BYTE	1,0,0,0,0,0,0,0
		BYTE	0,0,0,0,0,0,0,0
		BYTE	0,0,0,0,0,0,0,0
		BYTE	0,0,0,0,0,0,0,0
		BYTE	0,0,0,0,0,0,0,0
		BYTE	0,0,0,0,0,0,0,0
		BYTE	0,0,0,0,0,0,0,0
		BYTE	0,0,0,0,0,0,0,0
;
;
;
MPTBLDT		EQU	$
		LWORD	A0001a,A0001b,A000s1,A0002a,A0002b,A0003a,A0003b,A000s2
		LWORD	A0001c,A0001d,A00us3,A0002c,A0002d,A0003c,A0003d,A000s4
;
		LWORD	A000s5,A00us6,A00us7,A000s8,A000s9,A00s10,A00s11,A0us12
		LWORD	A0004a,A0004b,A00s13,A0005a,A0005b,A00s14,A0006a,A0006b
;
		LWORD	A0004c,A0004d,A00s15,A0005c,A0005d,A0us16,A0006c,A0006d
		LWORD	A00s17,A00s18,A0us19,A0us20,A0us21,A00s22,A0us23,A0us24
;
		LWORD	A0007a,A0007b,A00s25,A0us26,A0us27,A0008a,A0008b,A0us28
		LWORD	A0007c,A0007d,A00s29,A0us30,A0us31,A0008c,A0008d,A0us32
;
;
		LWORD	A00u1a,A00u1b,A00us1,A00u2a,A00u2b,A00u3a,A00u3b,A00us2
		LWORD	A00u1c,A00u1d,A00us3,A00u2c,A00u2d,A00u3c,A00u3d,A00us4
;
		LWORD	A00us5,A00us6,A00us7,A00us8,A00us9,A0us10,A0us11,A0us12
		LWORD	A00u4a,A00u4b,A0us13,A00u5a,A00u5b,A0us14,A00u6a,A00u6b
;
		LWORD	A00u4c,A00u4d,A0us15,A00u5c,A00u5d,A0us16,A00u6c,A00u6d
		LWORD	A0us17,A0us18,A0us19,A0us20,A0us21,A0us22,A0us23,A0us24
;
		LWORD	A00u7a,A00u7b,A0us25,A0us26,A0us27,A00u8a,A00u8b,A0us28
		LWORD	A00u7c,A00u7d,A0us29,A0us30,A0us31,A00u8c,A00u8d,A0us32
;
;
		LWORD	A00m_1,Ae_3_1,Ae_3_2,A0001a,A0001a,A0001a,A0001a,A0001a
		LWORD	A00end,Ae_3_3,Ae_3_4,A0001a,A0001a,A0001a,A0001a,A0001a
;
		LWORD	A0001a,A0001a,A0001a,A00end,A00m_1,A0kumo,A0sora,A0kage
		LWORD	A0001a,A0001a,A0001a,A0001a,A00mag,A0kage,A0kiri,A0rain
;
;
;
;
MPTBLDTL	EQU	$
		LWORD	B0001a,B0001b,B000s1,B0002a,B0002b,B0003a,B0003b,B000s2
		LWORD	B0001c,B0001d,B00us3,B0002c,B0002d,B0003c,B0003d,B000s4
;
		LWORD	B000s5,B00us6,B00us7,B000s8,B000s9,B00s10,B00s11,B0us12
		LWORD	B0004a,B0004b,B00s13,B0005a,B0005b,B00s14,B0006a,B0006b
;
		LWORD	B0004c,B0004d,B00s15,B0005c,B0005d,B0us16,B0006c,B0006d
		LWORD	B00s17,B00s18,B0us19,B0us20,B0us21,B00s22,B0us23,B0us24
;
		LWORD	B0007a,B0007b,B00s25,B0us26,B0us27,B0008a,B0008b,B0us28
		LWORD	B0007c,B0007d,B00s29,B0us30,B0us31,B0008c,B0008d,B0us32
;
;
		LWORD	B00u1a,B00u1b,B00us1,B00u2a,B00u2b,B00u3a,B00u3b,B00us2
		LWORD	B00u1c,B00u1d,B00us3,B00u2c,B00u2d,B00u3c,B00u3d,B00us4
;
		LWORD	B00us5,B00us6,B00us7,B00us8,B00us9,B0us10,B0us11,B0us12
		LWORD	B00u4a,B00u4b,B0us13,B00u5a,B00u5b,B0us14,B00u6a,B00u6b
;
		LWORD	B00u4c,B00u4d,B0us15,B00u5c,B00u5d,B0us16,B00u6c,B00u6d
		LWORD	B0us17,B0us18,B0us19,B0us20,B0us21,B0us22,B0us23,B0us24
;
		LWORD	B00u7a,B00u7b,B0us25,B0us26,B0us27,B00u8a,B00u8b,B0us28
		LWORD	B00u7c,B00u7d,B0us29,B0us30,B0us31,B00u8c,B00u8d,B0us32
;
;
		LWORD	B00m_1,Be_3_1,Be_3_2,B0001a,B0001a,B0001a,B0001a,B0001a
		LWORD	B00end,Be_3_3,Be_3_4,B0001a,B0001a,B0001a,B0001a,B0001a
;
		LWORD	B0001a,B0001a,B0001a,B00end,B00m_1,B0kumo,B0sora,B0kage
		LWORD	B0001a,B0001a,B0001a,B0001a,B00mag,B0kage,B0kiri,B0rain
;
;
;
;
;
;
;
;************************************************************************
;*		DATA							*
;************************************************************************
MP1TOGD		EQU	$
		MEM16
		IDX16
		REP	#00110000B
;
		JSR	MP2CNG
;
;// 03.05.23 //		LDA	#0FFFFH
;// 03.05.23 //		STA	<CWORK0
;// 03.05.23 //		STZ	<CWORK2
		LDA	#01000H
		STA	<CWORK4
;
		MEM8
		IDX8
		SEP	#00110000B
;
		JSR	MP2ALST
;
		LDA	#bgw4
		STA	<BGWTFG
		STA	!GMAPDF
;
		INC	<GAMEMD
		RTS
;
;
;
;
;
;
;----------------------------------------
MP2ALST		EQU	$
		PHB
		LDA	#BANK MPUNIT
		PHA
		PLB
;
		MEM16
		IDX16
		REP	#00110000B
;
;// 03.05.28 //		LDA	<SCRPNT
;// 03.05.28 //		CLC
;// 03.05.28 //		ADC	#01000H
;// 03.05.28 //		STA	<SCRPNT
;// 03.05.28 //;
;// 03.05.28 //		STZ	<WORK+10
;// 03.05.28 //		STZ	<WORK+14	;VRAMD+2,Y no Y no toko o cls
;// 03.05.28 //;
		LDA	#GDBUF2
		STA	<WORK4
		LDA	#BANK GDBUF2
		BRA	MP3ALST
;// 03.05.28 //		STA	<WORK6
;// 03.05.28 //;
;// 03.05.28 //		LDA	#0020H/2	;MPINT1 o kuri kaesu kaisu
;// 03.05.28 //		STA	<WORK+8		;tate no unit su
;// 03.05.28 //MP2ALS2		EQU     $
;// 03.05.28 //		JSR	MPALLN		;ue(sita) no BG o kaku
;// 03.05.28 //		LDA	<SCRPNT		;]
;// 03.05.28 //		SEC			; ]SCRPNT=SCRPNT-64
;// 03.05.28 //		SBC	#0128		; ]gamen no kihonten
;// 03.05.28 //		STA	<SCRPNT		;]
;// 03.05.28 //		LDA	<YWRITE		;]
;// 03.05.28 //		DEC	A		; ]unit tani no tate no iti
;// 03.05.28 //		AND	#001FH		; ]
;// 03.05.28 //		STA	<YWRITE		;]
;// 03.05.28 //;
;// 03.05.28 //		JSR	MPALLN		;ue(sita) no BG o kaku
;// 03.05.28 //		LDA	<SCRPNT		;]
;// 03.05.28 //		SEC			; ]SCRPNT=SCRPNT-64
;// 03.05.28 //		SBC	#0128		; ]gamen no kihonten
;// 03.05.28 //		STA	<SCRPNT		;]
;// 03.05.28 //		LDA	<YWRITE		;]
;// 03.05.28 //		DEC	A		; ]unit tani no tate no iti
;// 03.05.28 //		AND	#001FH		; ]
;// 03.05.28 //		STA	<YWRITE		;]
;// 03.05.28 //;
;// 03.05.28 //		DEC	<WORK+8
;// 03.05.28 //		BNE	MPALS2
;// 03.05.28 //;
;// 03.05.28 //		MEM8
;// 03.05.28 //		IDX8
;// 03.05.28 //		SEP	#00110000B
;// 03.05.28 //;
;// 03.05.28 //		PLB
;// 03.05.28 //		RTS
;
;
		MEM8
		IDX8
;----------------------------------------
MPALST		EQU	$
		PHB
		LDA	#BANK MPUNIT
		PHA
		PLB
;
		MEM16
		IDX16
		REP	#00110000B
;
		LDA	#GDBUF0
		STA	<WORK4
		LDA	#BANK GDBUF0
MP3ALST		EQU	$
		STA	<WORK6
;
		LDA	<SCRPNT
		CLC
		ADC	#01000H
		STA	<SCRPNT
;
		STZ	<WORK+10
		STZ	<WORK+14	;VRAMD+2,Y no Y no toko o cls
;
		LDA	#0020H/2	;MPINT1 o kuri kaesu kaisu
		STA	<WORK+8		;tate no unit su
MPALS2		EQU     $
		JSR	MPALLN		;ue(sita) no BG o kaku
		LDA	<SCRPNT		;]
		SEC			; ]SCRPNT=SCRPNT-64
		SBC	#0128		; ]gamen no kihonten
		STA	<SCRPNT		;]
		LDA	<YWRITE		;]
		DEC	A		; ]unit tani no tate no iti
		AND	#001FH		; ]
		STA	<YWRITE		;]
;
		JSR	MPALLN		;ue(sita) no BG o kaku
		LDA	<SCRPNT		;]
		SEC			; ]SCRPNT=SCRPNT-64
		SBC	#0128		; ]gamen no kihonten
		STA	<SCRPNT		;]
		LDA	<YWRITE		;]
		DEC	A		; ]unit tani no tate no iti
		AND	#001FH		; ]
		STA	<YWRITE		;]
;
		DEC	<WORK+8
		BNE	MPALS2
;
		MEM8
		IDX8
		SEP	#00110000B
;
		PLB
		RTS
;
;
MPALLN		EQU	$
		MEM16
		IDX16
;
		LDA	<SCRPNT		;   ] ue   nara SCRPNT-1040=Y
		SEC			;   ] sita nara SCRPNT+3056=Y
		SBC	#01040
		AND	#01FFFH
		TAY
;
		LDA	<XWRITE		;]
		ASL	A		; ]X=XWRITE*2
		TAX			;]
;
		LDA	#0032/2		;MPALL1 o kurikaesu kaisu(1 retu no kazu)
		STA	<WORK
MPALL1		EQU	$
		LDA	[<WORK4],Y	;<WORK L,H,B --> map data
		STA	!DATBUF,X	;DATBUF --> data o ireru toko
		INX
		INX
		TXA			;]
		AND	#003FH	 	; ]X>1F -->X=0 (0<=X<=1F)
		TAX			;]
		INY
		INY
		TYA
		AND	#01FFFH
		TAY
;
		LDA	[<WORK4],Y	;<WORK L,H,B --> map data
		STA	!DATBUF,X	;DATBUF --> data o ireru toko
		INX
		INX
		TXA			;]
		AND	#003FH	 	; ]X>1F -->X=0 (0<=X<=1F)
		TAX			;]
		INY
		INY
		TYA
		AND	#01FFFH
		TAY
		DEC	<WORK
		BNE	MPALL1		;1 retu bun no data o DATBUF ni iretaka?
;					;y
		LDA	<YWRITE		;			    ] |-----------
		STA	<WORK+2		;			    ] |          |
		CMP	#00016		;			    ] +-----+    |
		BCC	MPALL2		;tonarino gamenka?	    ] |  |  |    |--dotiraka no adress o moto meru
;					;y
		AND	#000FH		;			    ] |~~|~~|    |
		STA	<WORK+2		;			    ] +-----+    |
		LDA	#0800H		;			    ] |          |
		STA	<WORK		;			]]]]  -----------|
MPALL2		EQU	$		;]]]
		LDA	<WORK+2		;   ]
		ASL	A		;   ]<WORK=<WORK+(work+2)*64
		ASL	A		;   ]
		ASL	A		;   ]
		ASL	A		;   ]
		ASL	A		;   ]
		ASL	A		;   ]
		CLC			;   ]
		ADC	<WORK		;   ]
		STA	<WORK		;]]]
;
		LDA	>MPDBUF+0	;    ]
		JSR	MPALNE
;
		LDA	<WORK
		CLC
		ADC	#00400H
		STA	<WORK
		LDA	>MPDBUF+2	;    ]
;
;************************************************************************
;*		32 no BG o kaku				sub program	*
;************************************************************************
MPALNE		EQU	$
		STA	<WORK+2
;
		LDX	<WORK+10
		LDA	<WORK
		ORA	<CWORK4
		STA	>GRWRBF+2000H,X
		INX
		INX
		STX	<WORK+10
;
		LDX	<WORK+14
		LDA	#0032/2
		STA	<WORK+12
MPALN1		EQU	$
		LDY	<WORK2		;    ]
		LDA	!DATBUF,Y	;    ]
		INY			;DATBUF,Y no Y o tugini susumeru
		INY			;(tigi no unit)
		STY	<WORK2
		ASL	A		;    ]
		ASL	A		;    ]
		ASL	A		;    ]X=(DATBUF,Y)*4+(<WORK+4)
		TAY			;]]]]
;
		LDA	MPUNIT+0,Y	;
;// 03.02.20 //		AND	<CWORK0
;// 03.02.20 //		ORA	<CWORK2
		STA	>GRWRBF+00H,X	;
		LDA	MPUNIT+4,Y	;
;// 03.02.20 //		AND	<CWORK0
;// 03.02.20 //		ORA	<CWORK2
		STA	>GRWRBF+40H,X	;
		INX			;VRAMD+6,Y no Y o tugini suru
		INX			;
;
		LDA	MPUNIT+2,Y	;
;// 03.02.20 //		AND	<CWORK0
;// 03.02.20 //		ORA	<CWORK2
		STA	>GRWRBF+00H,X	;
		LDA	MPUNIT+6,Y	;
;// 03.02.20 //		AND	<CWORK0
;// 03.02.20 //		ORA	<CWORK2
		STA	>GRWRBF+40H,X	;
		INX			;VRAMD+6,Y no Y o tugini suru
		INX			;
		DEC	<WORK+12
		BNE	MPALN1		;1 retu end?
;					;y
		TXA
		CLC
		ADC	#00040H
		STA	<WORK+14	;VRAMD+6,Y no Y o hozon
		RTS
;
;
;
;
;
;************************************************************************
;*		Ground memory buffer reset		(GDMMRST)	*
;************************************************************************
GDMMRST		EQU	$
		MEM16
		IDX16
		REP	#00110000B	; memory,index 16bit mode
;
		LDA	!GDMMPT
		BEQ	GMMRS80		;
;					;
		LDX	#00000H
		STX	<WORK0
GMMRS40		EQU	$
		LDX	<WORK0
		LDA	>GDMMBF+000H,X
		TAY
		LDA	>GDMMBF+200H,X
		TYX			; (X) <-- (Y)
		STA	>GDBUF0,X
		INC	<WORK0
		INC	<WORK0
		LDA	<WORK0
		CMP	!GDMMPT
		BNE	GMMRS40		; reset end ?
;					; yes
GMMRS80		EQU	$
		MEM8
		IDX8
		SEP	#00110000B	; memory,index 16bit mode
		RTS
;
;
;
;
;************************************************************************
;*		END3DT TENKAI P.					*
;*		[in]	(cwork0,1,2)	<-- char. bit    address	*
;*									*
;************************************************************************
END3DST		EQU	$
		LDA	#LOW  MPCHBF
		STA	<WORK0
		LDA	#HIGH MPCHBF
		STA	<WORK1
		LDA	#BANK MPCHBF
		STA	<WORK2
;
		LDA	#LOW  END3DT
		STA	<CWORK0
		LDA	#HIGH END3DT
		STA	<CWORK1
		LDA	#BANK END3DT
		STA	<CWORK2
;
		JSR	CHREAD
;
		LDA	#LOW  MPCHBF
		STA	<WORK0
		LDA	#HIGH MPCHBF
		STA	<WORK1
		LDA	#BANK MPCHBF
		STA	<WORK2
;
		MEM8
		IDX16
		REP	#00010000B
;
		LDX	#00000H
		TXY
EDDST10		EQU	$
		LDA	[<WORK0],Y
		PHA
		LSR	A
		LSR	A
		LSR	A
		LSR	A
		STA	>EDMGDT,X
		PLA
		AND	#00FH
		STA	>EDMGDT+1,X
		INY
		INX
		INX
		CPX	#01000H
		BCC	EDDST10
;
		MEM8
		IDX8
		SEP	#00110000B
;
		RTL
;
;
;
;************************************************************************
;*		Character buffer set			(CHRREAD)	*
;*		[in]	(cwork0,1,2)	<-- char. bit    address	*
;*			(work0,1,2)	<-- char. data   address	*
;************************************************************************
CHREAD		EQU	$
		IDX16
		REP	#00010000B	; index 16 bit mode
;
		LDY	#00000H		; (Y) <-- chara data buffer index
GTCODE		EQU	$
		JSR	GET1DT		; 1 data read
		CMP	#0FFH
		BNE	GTCOD1		; end ?
;					; yes
		SEP	#00010000B	; index 8 bit mode 
		RTS
;
GTCOD1		EQU	$
		STA	<CWORK5
		AND	#0E0H
		CMP	#0E0H
		BEQ	GT2COD		; 2 byte code ?
;					; no
		PHA			; (A) push : data type save
		LDA	<CWORK5
;
		MEM16
		REP	#00100000B	; memory 16 bit mode
;
		AND	#0001FH
		BRA	GT2CD2
;
		MEM8
GT2COD		EQU	$
		LDA	<CWORK5
		ASL	A
		ASL	A
		ASL	A
		AND	#0E0H
		PHA			; (A) push : data type save
		LDA	<CWORK5
		AND	#003H
		XBA
		JSR	GET1DT		; 1 data read
;
		MEM16
		REP	#00100000B	; memory 16 bit mode
GT2CD2		EQU	$
		INC	A
		STA	<CWORK3
;
		MEM8
		SEP	#00100000B	; memory 8 bit mode
GTCDEN		EQU	$
		PLA			; (A) pull : data type load
		BEQ	NORM		; [ CMP #000H ] = ?
;					; no
		BMI	REF		; [ CMP #1xxH ] > ?
;					; no
		ASL	A
		BPL	REN1		; [ CMP #020H ] > ?
;					; no
		ASL	A
		BPL	REN2		; [ CMP #040H ] > ?
;					; no
REN12		EQU	$
		JSR	GET1DT		; 1 data read
		LDX	<CWORK3
REN121		EQU	$
		STA	[<WORK],Y
		INC	A
		INY
		DEX
		BNE	REN121		; end ?
;					; yes
		BRA	GTCODE
;
NORM		EQU	$
		JSR	GET1DT		; 1 data read
		STA	[<WORK],Y
		INY
		LDX	<CWORK3
		DEX
		STX	<CWORK3
		BNE	NORM		; end ?
;					; yes
		BRA	GTCODE
;
REN1		EQU	$
		JSR	GET1DT		; 1 data read
		LDX	<CWORK3
REN11		EQU	$
		STA	[<WORK],Y
		INY
		DEX
		BNE	REN11		; end ?
;					; yes
		BRA	GTCODE
;
REN2		EQU	$
		JSR	GET1DT		; 1 data read
		XBA
		JSR	GET1DT		; 1 data read
		LDX	<CWORK3
REN21		EQU	$
		XBA
		STA	[<WORK],Y
		INY
		DEX
		BEQ	REN22		; end ?
;					; no
		XBA
		STA	[<WORK],Y
		INY
		DEX
		BNE	REN21 
REN22		EQU	$
		JMP	GTCODE
;
REF		EQU	$
		JSR	GET1DT		; 1 data read
		XBA
		JSR	GET1DT		; 1 data read
;;;;;;;;		XBA		; /03.07.30/ test //
		TAX
REF1		EQU	$
		PHY
		TXY
		LDA	[<WORK],Y
		TYX
		PLY
		STA	[<WORK],Y
		INY
		INX
;
		MEM16
		REP	#00100000B	; memory 16 bit mode 
;
		DEC	<CWORK3
;
		MEM8
		SEP	#00100000B	; memory 8 bit mode
;
		BNE	REF1		; end ?
;					; yes
		JMP	GTCODE
;
GET1DT		EQU	$
		LDA	[<CWORK0]
		LDX	<CWORK0
		INX
		BNE	GT1DT1		; (c) on ?
;					; yes
		LDX	#08000H
		INC	<CWORK2
GT1DT1		EQU	$
		STX	<CWORK0
		RTS
;
;
;
;
;
;
		END
